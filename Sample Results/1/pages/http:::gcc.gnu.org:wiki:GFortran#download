<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html;charset=utf-8">
<meta name="robots" content="index,nofollow">

<title>GFortran - GCC Wiki</title>
<script type="text/javascript" src="/moin_static187/common/js/common.js"></script>

<script type="text/javascript">
<!--
var search_hint = "Search";
//-->
</script>


<link rel="stylesheet" type="text/css" charset="utf-8" media="all" href="/moin_static187/modern/css/common.css">
<link rel="stylesheet" type="text/css" charset="utf-8" media="screen" href="/moin_static187/modern/css/screen.css">
<link rel="stylesheet" type="text/css" charset="utf-8" media="print" href="/moin_static187/modern/css/print.css">
<link rel="stylesheet" type="text/css" charset="utf-8" media="projection" href="/moin_static187/modern/css/projection.css">

<!-- css only for MS IE6/IE7 browsers -->
<!--[if lt IE 8]>
   <link rel="stylesheet" type="text/css" charset="utf-8" media="all" href="/moin_static187/modern/css/msie.css">
<![endif]-->





<link rel="Start" href="/wiki/HomePage">
<link rel="Alternate" title="Wiki Markup" href="/wiki/GFortran?action=raw">
<link rel="Alternate" media="print" title="Print View" href="/wiki/GFortran?action=print">
<link rel="Appendix" title="Online fortran 95 tutorials" href="/wiki/GFortran?action=AttachFile&amp;do=view&amp;target=Online+fortran+95+tutorials">
<link rel="Search" href="/wiki/FindPage">
<link rel="Index" href="/wiki/TitleIndex">
<link rel="Glossary" href="/wiki/WordIndex">
<link rel="Help" href="/wiki/HelpOnFormatting">
</head>

<body  lang="en" dir="ltr">

<div id="header">
<div id="logo"><a href="/wiki/HomePage">GCC Wiki</a></div>

<form id="searchform" method="get" action="/wiki/GFortran">
<div>
<input type="hidden" name="action" value="fullsearch">
<input type="hidden" name="context" value="180">
<label for="searchinput">Search:</label>
<input id="searchinput" type="text" name="value" value="" size="20"
    onfocus="searchFocus(this)" onblur="searchBlur(this)"
    onkeyup="searchChange(this)" onchange="searchChange(this)" alt="Search">
<input id="titlesearch" name="titlesearch" type="submit"
    value="Titles" alt="Search Titles">
<input id="fullsearch" name="fullsearch" type="submit"
    value="Text" alt="Search Full Text">
</div>
</form>
<script type="text/javascript">
<!--// Initialize search form
var f = document.getElementById('searchform');
f.getElementsByTagName('label')[0].style.display = 'none';
var e = document.getElementById('searchinput');
searchChange(e);
searchBlur(e);
//-->
</script>

<ul id="username"><li><a href="/wiki/GFortran?action=login" id="login" rel="nofollow">Login</a></li></ul>
<div id="locationline">
<div id="interwiki"><span><a href="/wiki/HomePage" rel="nofollow">Self</a></span></div>

<ul id="pagelocation">
<li><a class="backlink" href="/wiki/GFortran?action=fullsearch&amp;context=180&amp;value=linkto%3A%22GFortran%22" rel="nofollow" title="Click to do a full-text search for this title">GFortran</a></li>
</ul>

</div>


<ul id="navibar">
<li class="wikilink"><a href="/wiki/HomePage">HomePage</a></li><li class="wikilink"><a href="/wiki/RecentChanges">RecentChanges</a></li><li class="wikilink"><a href="/wiki/FindPage">FindPage</a></li><li class="wikilink"><a href="/wiki/HelpContents">HelpContents</a></li><li class="current"><a href="/wiki/GFortran">GFortran</a></li>
</ul>

<div id="pageline"><hr style="display:none;"></div>

<ul class="editbar"><li><span class="disabled">Immutable Page</span></li><li class="toggleCommentsButton" style="display:none;"><a href="#" class="nbcomment" onClick="toggleComments();return false;">Comments</a></li><li><a class="nbinfo" href="/wiki/GFortran?action=info" rel="nofollow">Info</a></li><li><a class="nbattachments" href="/wiki/GFortran?action=AttachFile" rel="nofollow">Attachments</a></li><li>
<form class="actionsmenu" method="GET" action="/wiki/GFortran">
<div>
    <label>More Actions:</label>
    <select name="action"
        onchange="if ((this.selectedIndex != 0) &&
                      (this.options[this.selectedIndex].disabled == false)) {
                this.form.submit();
            }
            this.selectedIndex = 0;">
        <option value="raw">Raw Text</option>
<option value="print">Print View</option>
<option value="RenderAsDocbook">Render as Docbook</option>
<option value="refresh">Delete Cache</option>
<option value="show" disabled class="disabled">------------------------</option>
<option value="SpellCheck">Check Spelling</option>
<option value="LikePages">Like Pages</option>
<option value="LocalSiteMap">Local Site Map</option>
<option value="show" disabled class="disabled">------------------------</option>
<option value="RenamePage" disabled class="disabled">Rename Page</option>
<option value="DeletePage" disabled class="disabled">Delete Page</option>
<option value="show" disabled class="disabled">------------------------</option>
<option value="show" disabled class="disabled">Subscribe User</option>
<option value="show" disabled class="disabled">------------------------</option>
<option value="show" disabled class="disabled">Remove Spam</option>
<option value="show" disabled class="disabled">Revert to this revision</option>
<option value="show" disabled class="disabled">Package Pages</option>
<option value="show" disabled class="disabled">------------------------</option>
<option value="Load">Load</option>
<option value="Save">Save</option>
    </select>
    <input type="submit" value="Do">
    
</div>
<script type="text/javascript">
<!--// Init menu
actionsMenuInit('More Actions:');
//-->
</script>
</form>
</li></ul>

</div>

<div id="page" lang="en" dir="ltr">
<div dir="ltr" id="content" lang="en"><span class="anchor" id="top"></span>
<span class="anchor" id="line-1"></span><p class="line867">
<h1 id="gfortran_.2BIBQ_the_GNU_Fortran_compiler.2C_part_of_GCC">gfortran â€” the GNU Fortran compiler, part of GCC</h1>
<span class="anchor" id="line-2"></span><p class="line862">Gfortran is the name of the GNU Fortran project, developing a free <a href="/wiki/GFortranStandards">Fortran 95/2003/2008</a> compiler for GCC, the GNU Compiler Collection. The gfortran development effort uses an open development environment in order to attract a larger team of developers and to ensure that gfortran can work on multiple architectures and diverse environments. <span class="anchor" id="line-3"></span><span class="anchor" id="line-4"></span><p class="line862">This wiki contains links to binary packages for gfortran, up-to-date status of the compiler, recently fixed bugs, etc. You can find here our <a href="/wiki/GFortranGettingStarted">"getting started"</a> web page for new users of gfortran. <span class="anchor" id="line-5"></span><span class="anchor" id="line-6"></span><p class="line862">The <a class="http" href="http://gcc.gnu.org/fortran/">official homepage</a> for gfortran also contains a limited amount of general information about the project, its goals and the ways you can contribute. <span class="anchor" id="line-7"></span><span class="anchor" id="line-8"></span><p class="line867">
<h3 id="Quick_links">Quick links</h3>
<span class="anchor" id="line-9"></span><ul><li><p class="line891"><a href="/wiki/GFortran#news">What's new in gfortran</a>: <a href="/wiki/GFortran#GCC4.1">4.1</a>, <a href="/wiki/GFortran#GCC4.2">4.2</a>, <a href="/wiki/GFortran#GCC4.3">4.3</a>, <a href="/wiki/GFortran#GCC4.4">4.4</a>, <a href="/wiki/GFortran#GCC4.5">4.5</a>, <a href="/wiki/GFortran#GCC4.6">4.6</a>, <a href="/wiki/GFortran#GCC4.7">4.7</a>, <a href="/wiki/GFortran#GCC4.8">4.8</a> <span class="anchor" id="line-10"></span></li><li><p class="line891"><span class="anchor" id="download"></span>Download <span class="anchor" id="line-11"></span><ul><li><p class="line891"><a href="/wiki/GFortranBinaries">Binaries</a> for Windows, Linux, MacOS and much more! <span class="anchor" id="line-12"></span></li><li><p class="line862">Vendor-provided <a href="/wiki/GFortranDistros">packages for common OS distributions</a> <span class="anchor" id="line-13"></span></li><li><p class="line891"><a href="/wiki/GFortranSource">Source code</a> <span class="anchor" id="line-14"></span></li></ul></li><li><p class="line891"><a href="/wiki/GFortranPlatforms">Platforms</a> where gfortran is known to work <span class="anchor" id="line-15"></span></li><li><p class="line891"><a href="/wiki/GFortran#manuals">Manuals</a> and other documentation <span class="anchor" id="line-16"></span></li><li><p class="line891"><a href="/wiki/GFortran#bugs">Reporting bugs</a> <span class="anchor" id="line-17"></span></li><li><p class="line891"><a class="http" href="http://en.wikipedia.org/wiki/Fortran_language_features">Michael Metcalf's article on Fortran language features in Wikipedia</a> <span class="anchor" id="line-18"></span></li><li><p class="line891"><a class="http" href="http://sites.google.com/site/gfortransite/">OpenMP in gfortran information web page</a> <span class="anchor" id="line-19"></span></li><li><p class="line891"><a class="http" href="http://www.gfortran.org/">gfortran.org</a> <span class="anchor" id="line-20"></span></li><li><p class="line891"><a class="https" href="https://github.com/jerryd/gtk-fortran">Fortran GUI Interface</a> (Fortran interface for Gtk) <span class="anchor" id="line-21"></span></li><li>GNU Fortran-related mailing lists and news groups <span class="anchor" id="line-22"></span><ul><li><p class="line891"><a class="http" href="http://gcc.gnu.org/lists.html">GNU Fortran list (general purpose and developing)</a> (<a class="http" href="http://gcc.gnu.org/ml/fortran/">Archive</a>) <span class="anchor" id="line-23"></span></li><li><p class="line891"><a class="http" href="http://groups.google.com/group/gnu-fortran">GNU Fortran user list</a> (less active than the one above) <span class="anchor" id="line-24"></span></li><li><p class="line891"><tt class="backtick">comp.lang.fortran</tt> <a class="http" href="http://en.wikipedia.org/wiki/Usenet_newsgroup">news group</a> (Fortran in general) - <a class="http" href="http://groups.google.com/group/comp.lang.fortran">comp.lang.fortran</a> <a class="http" href="http://www.rhinocerus.net/forum/lang-fortran/">rhinocerus.net</a> <span class="anchor" id="line-25"></span></li><li><p class="line891"><a class="https" href="https://www.jiscmail.ac.uk/cgi-bin/webadmin?A0=comp-fortran-90">Fortran 90 mailing list</a> (Fortran in general, less active than comp.lang.fortran) <span class="anchor" id="line-26"></span></li><li><p class="line891"><a class="irc" href="irc://irc.oftc.net/gfortran">#gfortran on irc.oftc.net</a> <span class="anchor" id="line-27"></span></li></ul></li><li><p class="line891"><a class="http" href="http://gcc.gnu.org/bugzilla/buglist.cgi?query_format=advanced&amp;short_desc_type=allwordssubstr&amp;short_desc=&amp;component=fortran&amp;component=libfortran&amp;known_to_fail_type=allwordssubstr&amp;known_to_work_type=allwordssubstr&amp;long_desc_type=substring&amp;long_desc=&amp;bug_file_loc_type=allwordssubstr&amp;bug_file_loc=&amp;gcchost_type=allwordssubstr&amp;gcchost=&amp;gcctarget_type=allwordssubstr&amp;gcctarget=&amp;gccbuild_type=allwordssubstr&amp;gccbuild=&amp;keywords_type=allwords&amp;keywords=&amp;bug_status=RESOLVED&amp;resolution=FIXED&amp;emailassigned_to1=1&amp;emailtype1=substring&amp;email1=&amp;emailassigned_to2=1&amp;emailreporter2=1&amp;emailcc2=1&amp;emailtype2=substring&amp;email2=&amp;bugidtype=include&amp;bug_id=&amp;votes=&amp;chfieldfrom=2007-01-01&amp;chfieldto=2007-12-31&amp;chfield=resolution&amp;chfieldvalue=&amp;cmdtype=doit&amp;order=Reuse+same+sort+as+last+time&amp;query_based_on=2007&amp;field0-0-0=noop&amp;type0-0-0=noop&amp;value0-0-0=">Bugs fixed in 2007</a> <span class="anchor" id="line-28"></span></li><li><p class="line891"><a class="http" href="http://gcc.gnu.org/bugzilla/buglist.cgi?query_format=advanced&amp;short_desc_type=allwordssubstr&amp;short_desc=&amp;component=fortran&amp;component=libfortran&amp;known_to_fail_type=allwordssubstr&amp;known_to_work_type=allwordssubstr&amp;long_desc_type=substring&amp;long_desc=&amp;bug_file_loc_type=allwordssubstr&amp;bug_file_loc=&amp;gcchost_type=allwordssubstr&amp;gcchost=&amp;gcctarget_type=allwordssubstr&amp;gcctarget=&amp;gccbuild_type=allwordssubstr&amp;gccbuild=&amp;keywords_type=allwords&amp;keywords=&amp;bug_status=RESOLVED&amp;resolution=FIXED&amp;emailassigned_to1=1&amp;emailtype1=substring&amp;email1=&amp;emailassigned_to2=1&amp;emailreporter2=1&amp;emailcc2=1&amp;emailtype2=substring&amp;email2=&amp;bugidtype=include&amp;bug_id=&amp;votes=&amp;chfieldfrom=2008-01-01&amp;chfieldto=2008-12-31&amp;chfield=resolution&amp;chfieldvalue=&amp;cmdtype=doit&amp;order=Reuse+same+sort+as+last+time&amp;query_based_on=2008&amp;field0-0-0=noop&amp;type0-0-0=noop&amp;value0-0-0=">Bugs fixed in 2008</a> <span class="anchor" id="line-29"></span></li><li><p class="line891"><a class="http" href="http://gcc.gnu.org/bugzilla/buglist.cgi?query_format=advanced&amp;short_desc_type=allwordssubstr&amp;short_desc=&amp;component=fortran&amp;component=libfortran&amp;known_to_fail_type=allwordssubstr&amp;known_to_work_type=allwordssubstr&amp;long_desc_type=substring&amp;long_desc=&amp;bug_file_loc_type=allwordssubstr&amp;bug_file_loc=&amp;gcchost_type=allwordssubstr&amp;gcchost=&amp;gcctarget_type=allwordssubstr&amp;gcctarget=&amp;gccbuild_type=allwordssubstr&amp;gccbuild=&amp;keywords_type=allwords&amp;keywords=&amp;bug_status=RESOLVED&amp;resolution=FIXED&amp;emailassigned_to1=1&amp;emailtype1=substring&amp;email1=&amp;emailassigned_to2=1&amp;emailreporter2=1&amp;emailcc2=1&amp;emailtype2=substring&amp;email2=&amp;bugidtype=include&amp;bug_id=&amp;votes=&amp;chfieldfrom=2009-01-01&amp;chfieldto=2009-12-31&amp;chfield=resolution&amp;chfieldvalue=&amp;cmdtype=doit&amp;order=Reuse+same+sort+as+last+time&amp;query_based_on=2009&amp;field0-0-0=noop&amp;type0-0-0=noop&amp;value0-0-0=">Bugs fixed in 2009</a> <span class="anchor" id="line-30"></span></li><li><p class="line891"><a class="http" href="http://gcc.gnu.org/bugzilla/buglist.cgi?query_format=advanced&amp;short_desc_type=allwordssubstr&amp;short_desc=&amp;component=fortran&amp;component=libfortran&amp;known_to_fail_type=allwordssubstr&amp;known_to_work_type=allwordssubstr&amp;long_desc_type=substring&amp;long_desc=&amp;bug_file_loc_type=allwordssubstr&amp;bug_file_loc=&amp;gcchost_type=allwordssubstr&amp;gcchost=&amp;gcctarget_type=allwordssubstr&amp;gcctarget=&amp;gccbuild_type=allwordssubstr&amp;gccbuild=&amp;keywords_type=allwords&amp;keywords=&amp;bug_status=RESOLVED&amp;resolution=FIXED&amp;emailassigned_to1=1&amp;emailtype1=substring&amp;email1=&amp;emailassigned_to2=1&amp;emailreporter2=1&amp;emailcc2=1&amp;emailtype2=substring&amp;email2=&amp;bugidtype=include&amp;bug_id=&amp;votes=&amp;chfieldfrom=2010-01-01&amp;chfieldto=2010-12-31&amp;chfield=resolution&amp;chfieldvalue=&amp;cmdtype=doit&amp;order=Reuse+same+sort+as+last+time&amp;query_based_on=2009&amp;field0-0-0=noop&amp;type0-0-0=noop&amp;value0-0-0=">Bugs fixed in 2010</a> <span class="anchor" id="line-31"></span></li><li><p class="line891"><a class="http" href="http://gcc.gnu.org/bugzilla/buglist.cgi?query_format=advanced&amp;short_desc_type=allwordssubstr&amp;short_desc=&amp;component=fortran&amp;component=libfortran&amp;known_to_fail_type=allwordssubstr&amp;known_to_work_type=allwordssubstr&amp;long_desc_type=substring&amp;long_desc=&amp;bug_file_loc_type=allwordssubstr&amp;bug_file_loc=&amp;gcchost_type=allwordssubstr&amp;gcchost=&amp;gcctarget_type=allwordssubstr&amp;gcctarget=&amp;gccbuild_type=allwordssubstr&amp;gccbuild=&amp;keywords_type=allwords&amp;keywords=&amp;bug_status=RESOLVED&amp;resolution=FIXED&amp;emailassigned_to1=1&amp;emailtype1=substring&amp;email1=&amp;emailassigned_to2=1&amp;emailreporter2=1&amp;emailcc2=1&amp;emailtype2=substring&amp;email2=&amp;bugidtype=include&amp;bug_id=&amp;votes=&amp;chfieldfrom=2011-01-01&amp;chfieldto=2011-12-31&amp;chfield=resolution&amp;chfieldvalue=&amp;cmdtype=doit&amp;order=Reuse+same+sort+as+last+time&amp;query_based_on=2011&amp;field0-0-0=noop&amp;type0-0-0=noop&amp;value0-0-0=">Bugs fixed in 2011</a> <span class="anchor" id="line-32"></span></li><li><p class="line891"><a class="http" href="http://gcc.gnu.org/bugzilla/buglist.cgi?query_format=advanced&amp;short_desc_type=allwordssubstr&amp;short_desc=&amp;component=fortran&amp;component=libfortran&amp;known_to_fail_type=allwordssubstr&amp;known_to_work_type=allwordssubstr&amp;long_desc_type=substring&amp;long_desc=&amp;bug_file_loc_type=allwordssubstr&amp;bug_file_loc=&amp;gcchost_type=allwordssubstr&amp;gcchost=&amp;gcctarget_type=allwordssubstr&amp;gcctarget=&amp;gccbuild_type=allwordssubstr&amp;gccbuild=&amp;keywords_type=allwords&amp;keywords=&amp;bug_status=RESOLVED&amp;resolution=FIXED&amp;emailassigned_to1=1&amp;emailtype1=substring&amp;email1=&amp;emailassigned_to2=1&amp;emailreporter2=1&amp;emailcc2=1&amp;emailtype2=substring&amp;email2=&amp;bugidtype=include&amp;bug_id=&amp;votes=&amp;chfieldfrom=2012-01-01&amp;chfieldto=2012-12-31&amp;chfield=resolution&amp;chfieldvalue=&amp;cmdtype=doit&amp;order=Reuse+same+sort+as+last+time&amp;query_based_on=2012&amp;field0-0-0=noop&amp;type0-0-0=noop&amp;value0-0-0=">Bugs fixed in 2012</a> <span class="anchor" id="line-33"></span></li><li><p class="line891"><a class="http" href="http://gcc.gnu.org/bugzilla/buglist.cgi?query_format=advanced&amp;short_desc_type=allwordssubstr&amp;short_desc=&amp;component=fortran&amp;component=libfortran&amp;known_to_fail_type=allwordssubstr&amp;known_to_work_type=allwordssubstr&amp;long_desc_type=substring&amp;long_desc=&amp;bug_file_loc_type=allwordssubstr&amp;bug_file_loc=&amp;gcchost_type=allwordssubstr&amp;gcchost=&amp;gcctarget_type=allwordssubstr&amp;gcctarget=&amp;gccbuild_type=allwordssubstr&amp;gccbuild=&amp;keywords_type=allwords&amp;keywords=&amp;bug_status=RESOLVED&amp;resolution=FIXED&amp;emailassigned_to1=1&amp;emailtype1=substring&amp;email1=&amp;emailassigned_to2=1&amp;emailreporter2=1&amp;emailcc2=1&amp;emailtype2=substring&amp;email2=&amp;bugidtype=include&amp;bug_id=&amp;votes=&amp;chfieldfrom=2013-01-01&amp;chfieldto=2013-12-31&amp;chfield=resolution&amp;chfieldvalue=&amp;cmdtype=doit&amp;order=Reuse+same+sort+as+last+time&amp;query_based_on=2013&amp;field0-0-0=noop&amp;type0-0-0=noop&amp;value0-0-0=">Bugs fixed in 2013</a> <span class="anchor" id="line-34"></span></li><li><p class="line891"><a href="/wiki/Fortran%2095%20tutorials%20available%20online">Fortran 95 tutorials available online</a> <span class="anchor" id="line-35"></span></li><li><p class="line891"><a class="http" href="http://ftagshtml.sourceforge.net">ftagshtml</a>  A call graph generator for Fortran and C <span class="anchor" id="line-36"></span></li><li><p class="line891"><a class="http" href="http://people.irisa.fr/Edouard.Canot/f90cache">f90cache</a>  A Fortran 90 compiler cache (works like ccache) <span class="anchor" id="line-37"></span><span class="anchor" id="line-38"></span></li></ul><p class="line867">
<h3 id="Using_gfortran:">Using gfortran:</h3>
<span class="anchor" id="line-39"></span><ul><li><p class="line891"><a href="/wiki/GfortranApps">List of Applications that gfortran compiles</a> <span class="anchor" id="line-40"></span></li><li><p class="line891"><a href="/wiki/GfortranBuild">Building common software packages with gfortran</a> <span class="anchor" id="line-41"></span></li><li><p class="line891"><a href="/wiki/GFortranResults">Test results</a> <span class="anchor" id="line-42"></span><span class="anchor" id="line-43"></span></li></ul><p class="line867">
<h3 id="For_gfortran_developers">For gfortran developers</h3>
<span class="anchor" id="line-44"></span><ul><li>Bug Bashing (status 23rd August 2011; incl. some double counting) <span class="anchor" id="line-45"></span><ul><li><p class="line891"><a class="http" href="http://gcc.gnu.org/bugzilla/buglist.cgi?short_desc_type=allwordssubstr&amp;short_desc=regress&amp;component=fortran&amp;component=libfortran&amp;bug_status=UNCONFIRMED&amp;bug_status=NEW&amp;bug_status=ASSIGNED&amp;bug_status=SUSPENDED&amp;bug_status=WAITING&amp;bug_status=REOPENED">Regressions</a> 4 bugs 0 assigned <span class="anchor" id="line-46"></span></li><li><p class="line891"><a class="http" href="http://gcc.gnu.org/bugzilla/buglist.cgi?query_format=advanced&amp;short_desc_type=allwordssubstr&amp;short_desc=&amp;component=fortran&amp;component=libfortran&amp;known_to_fail_type=allwordssubstr&amp;known_to_work_type=allwordssubstr&amp;long_desc_type=substring&amp;long_desc=&amp;bug_file_loc_type=allwordssubstr&amp;bug_file_loc=&amp;gcchost_type=allwordssubstr&amp;gcchost=&amp;gcctarget_type=allwordssubstr&amp;gcctarget=&amp;gccbuild_type=allwordssubstr&amp;gccbuild=&amp;keywords_type=allwords&amp;keywords=&amp;bug_status=UNCONFIRMED&amp;bug_status=NEW&amp;bug_status=ASSIGNED&amp;bug_status=SUSPENDED&amp;bug_status=WAITING&amp;bug_status=REOPENED&amp;emailassigned_to1=1&amp;emailtype1=substring&amp;email1=&amp;emailassigned_to2=1&amp;emailreporter2=1&amp;emailcc2=1&amp;emailtype2=substring&amp;email2=&amp;bugidtype=include&amp;bug_id=&amp;votes=&amp;chfieldfrom=&amp;chfieldto=Now&amp;chfieldvalue=&amp;cmdtype=doit&amp;order=Reuse+same+sort+as+last+time&amp;field0-0-0=blocked&amp;type0-0-0=equals&amp;value0-0-0=32834">PRs where a valid program is rejected or wrong code is produced</a> 7 bugs, 3 assigned (<strong>Fortran 95</strong> with default options) <span class="anchor" id="line-47"></span></li><li><p class="line891"><a class="http" href="http://gcc.gnu.org/bugzilla/buglist.cgi?bug_status=UNCONFIRMED&amp;bug_status=NEW&amp;bug_status=ASSIGNED&amp;bug_status=SUSPENDED&amp;bug_status=WAITING&amp;bug_status=REOPENED&amp;field0-0-0=blocked&amp;type0-0-0=anywordssubstr&amp;value0-0-0=42361+32834&amp;field0-1-0=bug_id&amp;type0-1-0=notequals&amp;value0-1-0=32834">Serious bugs</a> 11 bugs; includes <strong>Fortran 95</strong> bugs from above plus selected other bugs with high priority <span class="anchor" id="line-48"></span></li><li><p class="line891"><a class="http" href="http://gcc.gnu.org/bugzilla/buglist.cgi?component=fortran&amp;component=libfortran&amp;keywords_type=anywords&amp;keywords=wrong-code&amp;bug_status=UNCONFIRMED&amp;bug_status=NEW&amp;bug_status=ASSIGNED&amp;bug_status=SUSPENDED&amp;bug_status=WAITING&amp;bug_status=REOPENED">PRs where wrong code is produced</a> 44 bugs [often triggered for special cases only] <span class="anchor" id="line-49"></span></li><li><p class="line891"><a class="http" href="http://gcc.gnu.org/bugzilla/buglist.cgi?component=fortran&amp;component=libfortran&amp;keywords_type=anywords&amp;keywords=ice-on-valid-code,rejects-valid,wrong-code,compile-time-hog,memory-hog,link-failure&amp;bug_status=UNCONFIRMED&amp;bug_status=NEW&amp;bug_status=ASSIGNED&amp;bug_status=SUSPENDED&amp;bug_status=WAITING&amp;bug_status=REOPENED">PRs where a valid Fortran program is not accepted (internal compiler error, wrongly rejected), wrong code is produced or where the compile time or memory is excessively high</a> 131 bugs <span class="anchor" id="line-50"></span></li><li><p class="line891"><a class="http" href="http://gcc.gnu.org/bugzilla/buglist.cgi?component=fortran&amp;component=libfortran&amp;keywords_type=anywords&amp;keywords=accepts-invalid,ice-on-invalid-code&amp;bug_status=UNCONFIRMED&amp;bug_status=NEW&amp;bug_status=ASSIGNED&amp;bug_status=SUSPENDED&amp;bug_status=WAITING&amp;bug_status=REOPENED">PRs where invalid code is accepted or gives an internal compiler error</a> 83 bugs <span class="anchor" id="line-51"></span></li><li><p class="line891"><a class="http" href="http://gcc.gnu.org/bugzilla/buglist.cgi?component=fortran&amp;component=libfortran&amp;keywords_type=anywords&amp;keywords=diagnostic&amp;bug_status=UNCONFIRMED&amp;bug_status=NEW&amp;bug_status=ASSIGNED&amp;bug_status=SUSPENDED&amp;bug_status=WAITING&amp;bug_status=REOPENED">PRs which show where the diagnostics can be improved</a> 105 bugs <span class="anchor" id="line-52"></span></li><li><p class="line891"><a class="http" href="http://gcc.gnu.org/bugzilla/buglist.cgi?component=fortran&amp;component=libfortran&amp;bug_status=UNCONFIRMED&amp;bug_status=NEW&amp;bug_status=ASSIGNED&amp;bug_status=SUSPENDED&amp;bug_status=WAITING&amp;bug_status=REOPENED">All reports (bug reports, feature requests etc.)</a>: 550 reports <span class="anchor" id="line-53"></span></li></ul></li><li><p class="line891"><a class="http" href="http://gcc.gnu.org/bugzilla/chart.cgi?category=-All-&amp;label0=Fortran&amp;label1=Fortran%20-%20accepts-invalid&amp;label2=Fortran%20-%20diagnostic&amp;label3=Fortran%20-%20wrong-code&amp;line0=120&amp;line1=122&amp;line2=123&amp;line3=124&amp;name=32&amp;subcategory=-All-&amp;action=wrap&amp;width=700&amp;height=450">Graphical bug count timeline</a> (Bugzilla account unfortunately required) <span class="anchor" id="line-54"></span></li><li><p class="line891"><a href="/wiki/GFortran46">Projects for inclusion into gfortran-4.6</a>: please add your own projects there, with an approximate date of merging and state of readiness <span class="anchor" id="line-55"></span></li><li><p class="line891"><a href="/wiki/GFortran45_actions">Action list for gfortran-4.5</a>: summary of gfortran get-together of 2008-11-28 <span class="anchor" id="line-56"></span></li><li><p class="line891"><a href="/wiki/Fortran2003Status">Fortran 2003 implementation status of the GNU Fortran Compiler</a> (<a href="/wiki/Fortran2003">time line</a>) <span class="anchor" id="line-57"></span></li><li><p class="line891"><a href="/wiki/Fortran2008Status">Fortran 2008 implementation status of the GNU Fortran Compiler</a> <span class="anchor" id="line-58"></span></li><li><p class="line891"><a href="/wiki/TS29113Status">Implementation status of '''TS 29113''' on further interoperability of Fortran with C</a> <span class="anchor" id="line-59"></span></li><li><p class="line891"><a href="/wiki/TestCaseWriting">Beginner's guide to writing testcases</a> - see also on the main Wiki <a class="http" href="http://gcc.gnu.org/wiki/HowToPrepareATestcase">HowToPrepareATestcase</a> <span class="anchor" id="line-60"></span></li><li><p class="line891"><a class="http" href="http://quatramaran.ens.fr/~coudert/gfortran/documentation/index.html">Doxygen documentation of the compiler</a> <span class="anchor" id="line-61"></span></li><li><p class="line891"><a class="http" href="http://quatramaran.ens.fr/~coudert/gfortran/libgfortran_doxygen/html/">Doxygen documentation of libgfortran</a> <span class="anchor" id="line-62"></span></li><li><p class="line891"><a href="/wiki/SymbolVersioning">SymbolVersioning</a> for runtime libraries. <span class="anchor" id="line-63"></span></li><li><p class="line891"><a href="/wiki/LibgfortranAbiCleanup">LibgfortranAbiCleanup</a> <span class="anchor" id="line-64"></span></li><li><p class="line891"><a href="/wiki/ArrayDescriptorUpdate">ArrayDescriptorUpdate</a> <span class="anchor" id="line-65"></span></li><li><p class="line891"><a href="/wiki/GFortranPatchTracker">Tracking unreviewed patches</a> <span class="anchor" id="line-66"></span></li><li><p class="line891"><a href="/wiki/GFortranScalarizer">GFortranScalarizer</a> documents the scalarizer gfortran uses internally to translate array fortran statements into scalar code enclosed in a loop. <span class="anchor" id="line-67"></span><span class="anchor" id="line-68"></span></li></ul><p class="line867"><br>
 <span class="anchor" id="line-69"></span><span class="anchor" id="line-70"></span><p class="line867"><hr /><p class="line874"> <span class="anchor" id="line-71"></span><ul><li style="list-style-type:none"><p class="line891"><span class="anchor" id="manuals"></span> <span class="anchor" id="line-72"></span><span class="anchor" id="line-73"></span></li></ul><p class="line867">
<h3 id="Manuals_and_other_documentation">Manuals and other documentation</h3>
<span class="anchor" id="line-74"></span><p class="line874">GFortran documentation is included with the GCC documentation, which is available from the GCC website. There is documentation for released compilers, and also documentation for the latest snapshot from the development tree. The manuals are re-generated nightly. <span class="anchor" id="line-75"></span><span class="anchor" id="line-76"></span><ul><li><p class="line862">Documentation for the <a class="http" href="http://gcc.gnu.org/onlinedocs/gfortran/">current development snapshot</a> (<a class="http" href="http://gcc.gnu.org/onlinedocs/gfortran.pdf">PDF</a>); <a class="http" href="http://gcc.gnu.org/onlinedocs/gcc/">optimization flags</a> (<a class="http" href="http://gcc.gnu.org/onlinedocs/gcc.pdf">PDF</a>) <span class="anchor" id="line-77"></span></li><li><p class="line862">Documentation for the <a class="http" href="http://gcc.gnu.org/onlinedocs/gcc-4.7.0/gfortran/">4.7.0 release</a> (<a class="http" href="http://gcc.gnu.org/onlinedocs/gcc-4.7.0/gfortran.pdf">PDF</a>); <a class="http" href="http://gcc.gnu.org/onlinedocs/gcc-4.7.0/gcc/">optimization flags</a> (<a class="http" href="http://gcc.gnu.org/onlinedocs/gcc-4.7.0/gcc.pdf">PDF</a>) <span class="anchor" id="line-78"></span></li><li><p class="line862">Documentation for the <a class="http" href="http://gcc.gnu.org/onlinedocs/gcc-4.6.3/gfortran/">4.6.3 release</a> (<a class="http" href="http://gcc.gnu.org/onlinedocs/gcc-4.6.3/gfortran.pdf">PDF</a>); <a class="http" href="http://gcc.gnu.org/onlinedocs/gcc-4.6.3/gcc/">optimization flags</a> (<a class="http" href="http://gcc.gnu.org/onlinedocs/gcc-4.6.3/gcc.pdf">PDF</a>) <span class="anchor" id="line-79"></span></li><li><p class="line862">Documentation for the <a class="http" href="http://gcc.gnu.org/onlinedocs/gcc-4.5.3/gfortran/">4.5.3 release</a> (<a class="http" href="http://gcc.gnu.org/onlinedocs/gcc-4.5.3/gfortran.pdf">PDF</a>); <a class="http" href="http://gcc.gnu.org/onlinedocs/gcc-4.5.3/gcc/">optimization flags</a> (<a class="http" href="http://gcc.gnu.org/onlinedocs/gcc-4.5.3/gcc.pdf">PDF</a>) <span class="anchor" id="line-80"></span></li><li><p class="line862">Documentation for the <a class="http" href="http://gcc.gnu.org/onlinedocs/gcc-4.4.7/gfortran/">4.4.7 release</a> (<a class="http" href="http://gcc.gnu.org/onlinedocs/gcc-4.4.7/gfortran.pdf">PDF</a>); <a class="http" href="http://gcc.gnu.org/onlinedocs/gcc-4.4.7/gcc/">optimization flags</a> (<a class="http" href="http://gcc.gnu.org/onlinedocs/gcc-4.4.7/gcc.pdf">PDF</a>) <span class="anchor" id="line-81"></span></li><li><p class="line862">Documentation for the <a class="http" href="http://gcc.gnu.org/onlinedocs/gcc-4.3.6/gfortran/">4.3.6 release</a> (<a class="http" href="http://gcc.gnu.org/onlinedocs/gcc-4.3.6/gfortran.pdf">PDF</a>); <a class="http" href="http://gcc.gnu.org/onlinedocs/gcc-4.3.6/gcc/">optimization flags</a> (<a class="http" href="http://gcc.gnu.org/onlinedocs/gcc-4.3.6/gcc.pdf">PDF</a>) <span class="anchor" id="line-82"></span></li><li><p class="line862">Documentation for the <a class="http" href="http://gcc.gnu.org/onlinedocs/gcc-4.2.4/gfortran/">4.2.4 release</a> (<a class="http" href="http://gcc.gnu.org/onlinedocs/gcc-4.2.4/gfortran.pdf">PDF</a>); <a class="http" href="http://gcc.gnu.org/onlinedocs/gcc-4.2.4/gcc/">optimization flags</a> (<a class="http" href="http://gcc.gnu.org/onlinedocs/gcc-4.2.4/gcc.pdf">PDF</a>) <span class="anchor" id="line-83"></span></li><li><p class="line862">Documentation for the <a class="http" href="http://gcc.gnu.org/onlinedocs/gcc-4.1.2/gfortran/">4.1.2 release</a> (<a class="http" href="http://gcc.gnu.org/onlinedocs/gcc-4.1.2/gfortran.pdf">PDF</a>); <a class="http" href="http://gcc.gnu.org/onlinedocs/gcc-4.1.2/gcc/">optimization flags</a> (<a class="http" href="http://gcc.gnu.org/onlinedocs/gcc-4.1.2/gcc.pdf">PDF</a>) <span class="anchor" id="line-84"></span></li><li><p class="line862">Documentation of the <a class="http" href="http://gcc.gnu.org/onlinedocs/gfc-internals/">GNU Fortran Internals</a> (<a class="http" href="http://gcc.gnu.org/onlinedocs/gfc-internals.pdf">PDF</a>). <span class="anchor" id="line-85"></span></li><li><p class="line891"><a class="http" href="http://quatramaran.ens.fr/~coudert/gfortran/documentation/index.html">Doxygen documentation of the compiler</a>, points to the full Doxygen documentation, including sources, globals and symbols. This allows you to follow the frontend code in some considerable detail. <span class="anchor" id="line-86"></span></li><li><p class="line891"><a href="/wiki/GFortranUsage">GFortranUsage</a> contains helpful info about using gfortran <span class="anchor" id="line-87"></span></li><li><p class="line891"><a href="/wiki/GfortranFAQ">Frequently encountered problems</a> <span class="anchor" id="line-88"></span></li><li><p class="line891"><a href="/wiki/GFortranG77">g77</a> was the predecessor to gfortran. As of gcc-4.0, it is no longer actively supported <span class="anchor" id="line-89"></span></li><li><p class="line862">Draft versions of the Fortran standards can be downloaded from the standards committee websites; see <a href="/wiki/GFortranStandards">GFortranStandards</a> for details. <span class="anchor" id="line-90"></span></li><li><p class="line862">Floating point accuracy: <a href="/wiki/FloatingPointMath">Semantics of Floating Point Math in GCC</a>, <a href="/wiki/x87note">x87 note</a>, <a href="/wiki/Math_Optimization_Flags">Math_Optimization_Flags</a>, <a class="http" href="http://www.validlab.com/goldberg/paper.pdf">Goldberg paper</a> <a class="http" href="http://www.google.de/search?q=Goldberg+What+Every+Computer+Scientist+Should+Know+About+Floating-Point+Arithmetic">2</a>, <a class="http" href="http://hal.archives-ouvertes.fr/hal-00128124">Monniaux paper</a> <span class="anchor" id="line-91"></span><span class="anchor" id="line-92"></span></li></ul><p class="line867"><hr /><p class="line874"> <span class="anchor" id="line-93"></span><ul><li style="list-style-type:none"><p class="line891"><span class="anchor" id="bugs"></span> <span class="anchor" id="line-94"></span><span class="anchor" id="line-95"></span></li></ul><p class="line867">
<h3 id="Reporting_bugs">Reporting bugs</h3>
<span class="anchor" id="line-96"></span><p class="line862">You can report bugs in <a class="http" href="http://gcc.gnu.org/bugzilla/">GCC bugzilla</a>. You can look for existing bugs, track bug fixing progress, and report new bugs there. The list of all open gfortran bugs (including enhancement requests and low-priority bugs) can be found <a class="http" href="http://gcc.gnu.org/bugzilla/buglist.cgi?query_format=&amp;short_desc_type=allwordssubstr&amp;short_desc=&amp;component=fortran&amp;component=libfortran&amp;known_to_fail_type=allwordssubstr&amp;known_to_work_type=allwordssubstr&amp;long_desc_type=substring&amp;long_desc=&amp;bug_file_loc_type=allwordssubstr&amp;bug_file_loc=&amp;gcchost_type=allwordssubstr&amp;gcchost=&amp;gcctarget_type=allwordssubstr&amp;gcctarget=&amp;gccbuild_type=allwordssubstr&amp;gccbuild=&amp;keywords_type=allwords&amp;keywords=&amp;bug_status=UNCONFIRMED&amp;bug_status=NEW&amp;bug_status=ASSIGNED&amp;bug_status=SUSPENDED&amp;bug_status=WAITING&amp;bug_status=REOPENED&amp;emailassigned_to1=1&amp;emailtype1=substring&amp;email1=&amp;emailassigned_to2=1&amp;emailreporter2=1&amp;emailcc2=1&amp;emailtype2=substring&amp;email2=&amp;bugidtype=include&amp;bug_id=&amp;votes=&amp;chfieldfrom=&amp;chfieldto=Now&amp;chfieldvalue=&amp;cmdtype=doit&amp;order=Reuse+same+sort+as+last+time&amp;field0-0-0=noop&amp;type0-0-0=noop&amp;value0-0-0=">here</a>. Before submitting a bug report, please update your version of gfortran to the latest available release of GCC. For example, if you find a bug with gfortran 4.0.2, then upgrade to at least GCC 4.1.0 and see if the bug is still present. <span class="anchor" id="line-97"></span><span class="anchor" id="line-98"></span><p class="line862">There is a separate page for the <a href="/wiki/GfortranWanted">most wanted gfortran bugs</a>, which contains a list of bugs that block gfortran from building major packages. Some ideas for <a href="/wiki/GfortranImprovements">enhancing gfortran</a> can also be of interest... <span class="anchor" id="line-99"></span><span class="anchor" id="line-100"></span><p class="line862">Use the gfortran mailing list, <a class="mailto" href="mailto:fortran@gcc.gnu.org">fortran@gcc.gnu.org</a> , to ask the gfortran community your questions, and report bugs if you are uncertain on how to handle bugzilla. We'll be glad to help! <span class="anchor" id="line-101"></span><span class="anchor" id="line-102"></span><p class="line867"><br>
 <span class="anchor" id="line-103"></span><span class="anchor" id="line-104"></span><p class="line867"><hr /><p class="line874"> <span class="anchor" id="line-105"></span><ul><li style="list-style-type:none"><p class="line891"><span class="anchor" id="news"></span> <span class="anchor" id="line-106"></span><span class="anchor" id="line-107"></span></li></ul><p class="line867">
<h3 id="What.27s_new_in_gfortran.3F">What's new in gfortran?</h3>
<span class="anchor" id="line-108"></span><p class="line867"><a href="/wiki/GFortran#GCC4.1">4.1</a>, <a href="/wiki/GFortran#GCC4.2">4.2</a>, <a href="/wiki/GFortran#GCC4.3">4.3</a>, <a href="/wiki/GFortran#GCC4.4">4.4</a>, <a href="/wiki/GFortran#GCC4.5">4.5</a>, <a href="/wiki/GFortran#GCC4.6">4.6</a>, <a href="/wiki/GFortran#GCC4.7">4.7</a>, <a href="/wiki/GFortran#GCC4.8">4.8</a> <span class="anchor" id="line-109"></span><span class="anchor" id="line-110"></span><ul><li style="list-style-type:none"><p class="line891"><span class="anchor" id="GCC4.1"></span> <span class="anchor" id="line-111"></span><span class="anchor" id="line-112"></span></li></ul><p class="line867">
<h2 id="gfortran_4.1">gfortran 4.1</h2>
<span class="anchor" id="line-113"></span><p class="line867"><a class="http" href="http://gcc.gnu.org/gcc-4.1/">4.1 releases</a>, <a class="http" href="http://gcc.gnu.org/gcc-4.1/changes.html">4.1 release notes</a> <span class="anchor" id="line-114"></span><span class="anchor" id="line-115"></span><ul><li>Cray pointer support is now implemented. <span class="anchor" id="line-116"></span></li><li>gfortran can now build F90gl out of the box. <span class="anchor" id="line-117"></span></li><li>The Fortran 2003 ENUMERATION feature is now supported. <span class="anchor" id="line-118"></span></li><li><p class="line862">Helmut Michels has made a free version of his extensive scientific graphics/GUI package <a class="http" href="http://www.mps.mpg.de/dislin">DISLIN</a> available for gfortran. <span class="anchor" id="line-119"></span></li><li>Jakub Jelinek updated libgfortran on 2005-11-21 to a thread safe library in preparation for OpenMP. <span class="anchor" id="line-120"></span><span class="anchor" id="line-121"></span></li><li class="gap" style="list-style-type:none"><p class="line891"><span class="anchor" id="GCC4.2"></span> <span class="anchor" id="line-122"></span><span class="anchor" id="line-123"></span></li></ul><p class="line867">
<h2 id="gfortran_4.2">gfortran 4.2</h2>
<span class="anchor" id="line-124"></span><p class="line867"><a class="http" href="http://gcc.gnu.org/gcc-4.2/">4.2 releases</a>, <a class="http" href="http://gcc.gnu.org/gcc-4.2/changes.html">4.2 release notes</a> <span class="anchor" id="line-125"></span><span class="anchor" id="line-126"></span><ul><li>GFortran 4.2 and 4.3 use now 4-byte record markers by default for unformatted files to be compatible with g77 and most other compilers. The implementation allows for records bigger than 2 GB, compatible with several other compilers. Older versions of GFortran used by default 8-byte record markers (on most systems); in order to change length of record markers, e.g. to the read unformatted files created by older gfortran versions, the -frecord-marker=8 option can be used. <span class="anchor" id="line-127"></span></li><li>Paul Thomas has implemented elemental subroutine support. <span class="anchor" id="line-128"></span></li><li>Jakub Jelinek committed the front end support for OpenMP on 2006-02-14. <span class="anchor" id="line-129"></span></li><li>Erik Edelmann has implemented allocatable dummy arguments and function results. Allocatable derived type components are on their way. <span class="anchor" id="line-130"></span></li><li>Paul Thomas has implemented the array valued TRANSFER intrinsic and an inline version of DOT_PRODUCT. <span class="anchor" id="line-131"></span></li><li>Roger Sayle has improved the processing of WHERE statements and blocks. <span class="anchor" id="line-132"></span></li><li>Jerry De Lisle added support for the Fortran 2003 streaming IO extension. <span class="anchor" id="line-133"></span></li><li>Erik Edelmann and Paul Thomas have implemented Fortran 2003's allocatable components (also known as TR 15581). <span class="anchor" id="line-134"></span></li><li>The DEC extensions %VAL, %LOC and %REF are now supported. <span class="anchor" id="line-135"></span><span class="anchor" id="line-136"></span></li><li class="gap" style="list-style-type:none"><p class="line891"><span class="anchor" id="GCC4.3"></span> <span class="anchor" id="line-137"></span><span class="anchor" id="line-138"></span></li></ul><p class="line867">
<h2 id="gfortran_4.3">gfortran 4.3</h2>
<span class="anchor" id="line-139"></span><p class="line867"><a class="http" href="http://gcc.gnu.org/gcc-4.3/">4.3 releases</a>, <a class="http" href="http://gcc.gnu.org/gcc-4.3/changes.html">4.3 release notes</a> <span class="anchor" id="line-140"></span><span class="anchor" id="line-141"></span><ul><li><p class="line862">Optionally, call a optimized BLAS library (<tt class="backtick">-fexternal-blas</tt>) for matrix operations such as <tt class="backtick">matmul</tt> rather than the built-in algorithm. <span class="anchor" id="line-142"></span></li><li>Added support for VOLATILE, VALUE and PROTECTED statement/attribute. <span class="anchor" id="line-143"></span></li><li>Added support for IMPORT and POINTER, INTENT(*). <span class="anchor" id="line-144"></span></li><li>The following intrinsic modules are now supported: omp_lib, omp_lib_kinds, ISO_FORTRAN_ENV. <span class="anchor" id="line-145"></span></li><li><p class="line862">Programs can now optionally dump a core instead of only quitting when an error occurs (such as cannot allocate); this can be set using <tt class="backtick">-fdump-core</tt> and overwritten by the run-time variable <tt class="backtick">GFORTRAN_ERROR_DUMPCORE=YES|NO</tt>. <span class="anchor" id="line-146"></span></li><li>The renaming of operators on the USE statement is now supported. <span class="anchor" id="line-147"></span></li><li><p class="line862">Support for backtraces on glibc-based systems via the <tt class="backtick">-fbacktrace</tt> option is now implemented. On all systems, a coredump can be generated for errors in the run-time library using <tt>`-fdump-core`</tt>. <span class="anchor" id="line-148"></span></li><li><p class="line862">GFortran 4.3 now defines <tt class="backtick">__GFORTRAN__</tt> when it runs the C preprocessor (CPP). <span class="anchor" id="line-149"></span></li><li>C interoperability support (ISO Bind C) has been added. The code was contributed by Christopher D. Rickett of Los Alamos National Lab. <span class="anchor" id="line-150"></span></li><li>Support for ABSTRACT INTERFACEs and the PROCEDURE statement (no procedure pointers yet) has been added by Janus Weil (Google Summer of Code project) <span class="anchor" id="line-151"></span></li><li><p class="line862">Added support for subreference array pointers; eg. <tt>int_ptr_array&nbsp;=&gt;&nbsp;derived_array_target(:)%int_component</tt> <span class="anchor" id="line-152"></span></li><li><p class="line862">New options to initialize local variables: <tt>-finit-local-zero</tt>, <tt>-finit-real</tt>, <tt>-finit-integer</tt>, <tt>-finit-character</tt>, and <tt>-finit-logical</tt> <span class="anchor" id="line-153"></span></li><li><p class="line862">The intrinsic functions GAMMA (true gamma function) and LGAMMA (logrithmic gamma function) have been added; use <tt>external&nbsp;gamma</tt> to continue using a user/external function. <span class="anchor" id="line-154"></span></li><li><p class="line862">Changed: <tt>-fno-backslash</tt> is now the default to be more compatible with Fortran 2003; use <tt>-fbackslash</tt> if you need C character escape sequences. <span class="anchor" id="line-155"></span></li><li><p class="line891"><a class="http" href="http://gcc.gnu.org/onlinedocs/gfortran/BOZ-literal-constants.html">BOZ</a>: Fortran 2003 BOZ are now supported, i.e. using BOZ as argument of INT(), REAL(), DBLE() and CMPLX(). Additionally, BOZ used in DATA statements to initialize non-integer variables and BOZ directly assigned to a real/complex are now transferred bitwise. See the <a class="http" href="http://gcc.gnu.org/onlinedocs/gfortran/BOZ-literal-constants.html">GNU Fortran manual</a> for details. <span class="anchor" id="line-156"></span></li><li>Versioned symbols are used now on platforms supporting them. Programs compiled with gfortran 4.3 are guaranteed to work with the libgfortran library of future gfortran releases. <span class="anchor" id="line-157"></span><span class="anchor" id="line-158"></span></li><li class="gap" style="list-style-type:none"><p class="line891"><span class="anchor" id="GCC4.4"></span> <span class="anchor" id="line-159"></span><span class="anchor" id="line-160"></span></li></ul><p class="line867">
<h2 id="gfortran_4.4">gfortran 4.4</h2>
<span class="anchor" id="line-161"></span><p class="line867"><a class="http" href="http://gcc.gnu.org/gcc-4.4/">4.4 releases</a>, <a class="http" href="http://gcc.gnu.org/gcc-4.4/changes.html">4.4 release notes</a> <span class="anchor" id="line-162"></span><span class="anchor" id="line-163"></span><ul><li>Support for a few Fortran 2008 intrinsics: ASINH, ACOSH, ATANH, ERF, ERFC, GAMMA, LOG_GAMMA, BESSEL_*, HYPOT and ERFC_SCALED (some of these were available as vendor extension before). Missing are the three-argument form of BESSEL_*N and the complex versions of A{SIN,COS,TAN}{,H}. <span class="anchor" id="line-164"></span></li><li>Fortran 2003 I/O extensions: Asynchronous I/O is supported (still implemented as synchronous I/O), decimal=, size=, sign=, pad=  blank=, delim= specifiers. <span class="anchor" id="line-165"></span></li><li>Wide characters: "ISO_10646" (UCS-4, kind=4) including I/O with encoding="UTF-8". (Unsupported are UTF-8 characters in the Fortran source files; use -fbackslash with \u... and \U... instead.) <span class="anchor" id="line-166"></span></li><li>Support for Fortran 2003 structure constructors. <span class="anchor" id="line-167"></span></li><li>Support for Fortran 2003 array constructor with typespec. <span class="anchor" id="line-168"></span></li><li><p class="line862">REVERTED: Temporarily, arrays with maximal rank of 15 (before 7) as required by Fortran 2008 were supported, but the patch has been reverted because of <a class="http" href="http://gcc.gnu.org/bugzilla/show_bug.cgi?id=36825">PR36825</a> <span class="anchor" id="line-169"></span></li><li>Employ libcpp directly instead of using cc1 as an external preprocessor. The  -cpp option was added to allow manual invocation of the preprocessor. <span class="anchor" id="line-170"></span></li><li>Fortran 2008 g0 format descriptor. <span class="anchor" id="line-171"></span></li><li><p class="line891"><a href="/wiki/ProcedurePointers">Procedure Pointers</a> (but not yet as component in derived types and as function results) <span class="anchor" id="line-172"></span></li><li><p class="line862">Version 3 of the <a class="http" href="http://openmp.org/wp/openmp-specifications/">OpenMP specification</a> is now supported by the C, C++ and Fortran frontend (before version 2.5 was implemented). <span class="anchor" id="line-173"></span></li><li><p class="line862">If using an intrinsic not part of the selected standard (via <tt>-std=</tt> and <tt>-fall-intrinsics</tt>) gfortran will now treat it as if this procedure were declared EXTERNAL and try to link to a user-supplied procedure.  <tt>-Wintrinsics-std</tt> will warn whenever this happens.  The now-useless option <tt>-Wnonstd-intrinsic</tt> was removed. <span class="anchor" id="line-174"></span></li><li><p class="line862">The <a class="http" href="http://gcc.gnu.org/onlinedocs/gfortran/Error-and-Warning-Options.html#Error-and-Warning-Options">-Warray-temporaries</a> option warns about array temporaries generated by the compiler, as an aid for optimization. <span class="anchor" id="line-175"></span></li><li><p class="line862">As another aid for optimization, when an array temporary had to be created for an function argument, a warning is printed at run time when the option <a class="http" href="http://gcc.gnu.org/onlinedocs/gfortran/Code-Gen-Options.html">-fcheck-array-temporaries</a> is used. (The difference between -Warray-temporaries and -fcheck-array-temporaries is that the latter only prints a warning if the actual argument is noncontigious and thus the copying actually happens. The -Warray-temporaries already warns when code is inserted to cater for the noncontigious case.) <span class="anchor" id="line-176"></span></li><li>The generation of debugging information (DWARF) has been further enhanced. Note: gdb does not yet support all of these. <span class="anchor" id="line-177"></span></li><li>Fortran 2003 type-bound procedures, both PROCEDURE and GENERIC but not as operators. Note: PASS is not fully supported as CLASS(...) is not implemented; use it with TYPE(...) as non-standard-conforming workaround (to be removed when CLASS is implemented). <span class="anchor" id="line-178"></span></li><li>New flags have been added to control the alignment of variables in COMMON blocks: -falign-commons (which is the default) and its negation -fno-align-commons. The corresponding warnings can be disabled by -Wno-align-commons. <span class="anchor" id="line-179"></span></li><li>Fortran 2008's LEADZ and TRAILZ. <span class="anchor" id="line-180"></span><span class="anchor" id="line-181"></span></li><li class="gap" style="list-style-type:none"><p class="line891"><span class="anchor" id="GCC4.5"></span> <span class="anchor" id="line-182"></span><span class="anchor" id="line-183"></span></li></ul><p class="line867">
<h2 id="gfortran_4.5">gfortran 4.5</h2>
<span class="anchor" id="line-184"></span><p class="line867"><a class="http" href="http://gcc.gnu.org/gcc-4.5/">4.5 releases</a>, <a class="http" href="http://gcc.gnu.org/gcc-4.5/changes.html">4.5 release notes</a> <span class="anchor" id="line-185"></span><span class="anchor" id="line-186"></span><ul><li>-finit-real= now supports also the option "snan" for signalling not-a-number; you need to enable trapping (e.g. via -ffpe-trap=) to make them really signalling. (Note: Compile-time optimizations can turn a signalling NaN into a quiet one.) <span class="anchor" id="line-187"></span></li><li><p class="line862">New option -fcheck=&lt;all|bounds|array-temps&gt; which supersedes -fbounds-check and -fcheck-array-temporaries (which are still supported). <span class="anchor" id="line-188"></span></li><li>New run-time checking: -fcheck=recursive for finding recursive calls to subroutines/functions which are not marked as recursive. <span class="anchor" id="line-189"></span></li><li>New run-time checking: -fcheck=do for finding invalid modification of DO loop iteration variables. <span class="anchor" id="line-190"></span></li><li><p class="line862">New experimental flag, -fwhole-file, which in some form will become the default. The flag allows whole-file checking of procedure arguments and also is supposed to allow a better optimization by the middle end of the compiler (no internal double declaration of procedures). The <tt class="backtick">-fwhole-file</tt> is automatically used with <tt class="backtick">-fwhole-program</tt> (now supported) and with <tt class="backtick">-flto</tt> (new since this 4.5 release). <span class="anchor" id="line-191"></span></li><li><p class="line862">COMMON default padding has been changed - instead of adding the padding before a variable it is now added afterwards, which increases the compatibility with other vendors and helps to obtain the correct output in some cases. See also -falign-commons (which was added in 4.4) and <a class="http" href="http://gcc.gnu.org/PR37614">PR 37614</a>. <span class="anchor" id="line-192"></span></li><li>-fbounds-check does now warn about invalid string-lengths of character dummy arguments. <span class="anchor" id="line-193"></span></li><li>The I/O library was restructured for performance and cleaner code. <span class="anchor" id="line-194"></span></li><li>Array assignments and in WHERE is now run in parallel when OpenMP's WORKSHARE is used. <span class="anchor" id="line-195"></span></li><li><p class="line862">Complex math improvements: <a class="http" href="http://www.multiprecision.org/">MPC</a> is used for compile-time simplifications (initialization expressions) when found during configure <span class="anchor" id="line-196"></span></li><li><p class="line862">gfortran no longer links agains libgfortranbegin. As before <tt>MAIN__</tt> is the actual Fortran main program, which is invoked <tt>main()</tt>. However, <tt>main()</tt> is now generated and in the same object file as <tt>MAIN__</tt>. For the time being, libgfortranbegin still exists for backward compatibility, even though it is no longer needed. (Advantage: Better optimization, less confusion about when to link libgfortranbegin and when not.) <span class="anchor" id="line-197"></span></li><li><p class="line891"><tt>GCC$</tt> <a class="http" href="http://gcc.gnu.org/onlinedocs/gfortran/GNU-Fortran-Compiler-Directives.html">compiler directives</a> have been added to set the extended attributes STDCALL, FASTCALL, CDECL, DLLIMPORT and DLLEXPORT. <span class="anchor" id="line-198"></span></li><li><p class="line862">New option <a class="http" href="http://gcc.gnu.org/onlinedocs/gfortran/Code-Gen-Options.html">-fcheck=pointer</a>, which does some pointer association checks in calls. Note: Undefined pointers (= neither associated nor unassociated) are not handled, yet, nor other expressions with pointers. <span class="anchor" id="line-199"></span></li><li>For Fortran 77 compatibility: If -fno-sign-zero is used, the SIGN intrinsic behaves now as if zero were always positive. <span class="anchor" id="line-200"></span></li><li>The new flag -fno-protect-parens  has been added; if set, the compiler may reorder REAL and COMPLEX expressions without regard to parentheses. <span class="anchor" id="line-201"></span></li><li><p class="line862">For legacy compatibiliy: On Cygwin and MinGW, the special files <tt class="backtick">CONOUT$</tt> and <tt class="backtick">CONIN$</tt> (and <tt class="backtick">CONERR$</tt> which maps to <tt class="backtick">CONOUT$</tt>) are supported. <span class="anchor" id="line-202"></span></li><li><p class="line891"><strong>Fortran 2003</strong> <span class="anchor" id="line-203"></span><ul><li>Procedure pointer function results. <span class="anchor" id="line-204"></span></li><li>The ERRMSG= argument is now supported in the ALLOCATE and DEALLOCATE statements. <span class="anchor" id="line-205"></span></li><li>Support of DEFERRED type-bound procedures. <span class="anchor" id="line-206"></span></li><li>ISO_C_BINDING module: INT_FAST*_T are now supported <span class="anchor" id="line-207"></span></li><li>Full support for procedure pointer components (including PASS). <span class="anchor" id="line-208"></span></li><li><p class="line862">Extensible derived types with type-bound procedure or procedure pointer with <tt class="backtick">PASS</tt> attribute now have to use <tt class="backtick">CLASS</tt> in line with the Fortran 2003 standard; the workaround to use <tt class="backtick">TYPE</tt> is no longer supported. <span class="anchor" id="line-209"></span></li><li><p class="line862">The <tt class="backtick">SOURCE=</tt> argument and a type-spec are supported in the ALLOCATE statement <span class="anchor" id="line-210"></span></li><li>OPERATOR(*) and ASSIGNMENT(=) is now allowed as GENERIC type-bound procedure (i.e. type-bound operators). <span class="anchor" id="line-211"></span></li><li>Allocatable scalars (experimental support) <span class="anchor" id="line-212"></span></li><li><p class="line862">I/O: Rounding (<tt class="backtick">round=</tt>) on output is now supported. <span class="anchor" id="line-213"></span></li><li><p class="line862">Experimental support for polymorphic datatypes (<tt class="backtick">CLASS</tt>) and <tt class="backtick">SELECT&nbsp;TYPE</tt>; note that the support is incomplete and corner cases might not be handled correctly. (See <a href="/wiki/OOP">OOP</a> for details.) <span class="anchor" id="line-214"></span></li></ul></li><li><p class="line891"><strong>Fortran 2008</strong> <span class="anchor" id="line-215"></span><ul><li>ISO_FORTRAN_ENV module: INT8, INT16, INT32, INT64, REAL32, REAL64 and REAL128 are now supported <span class="anchor" id="line-216"></span></li><li>Improvements to math intrinsics: scaled_erfc in initialization expressions <span class="anchor" id="line-217"></span></li><li>The OPEN statement now supports the NEWUNIT= option, returns a unique file-unit and thus saving the user from ensureing him-/herself that no part of the program inadvertently uses the same unit. <span class="anchor" id="line-218"></span></li><li><p class="line862">Support complex arguments to TAN, SINH, COSH, TANH, ASIN, ACOS, and ATAN. Add support for ASINH, ACOSH, ATANH. Add <tt class="backtick">ATAN(Y,X)</tt> as alias for <tt class="backtick">ATAN2(Y,X)</tt>. <span class="anchor" id="line-219"></span></li><li>Support for unlimited format items has been added. <span class="anchor" id="line-220"></span></li><li>Experimental support of the BLOCK construct, though a lot of details and corner cases are not implemented correctly and behaviour may change in future versions <span class="anchor" id="line-221"></span><span class="anchor" id="line-222"></span></li></ul></li><li class="gap" style="list-style-type:none"><p class="line891"><span class="anchor" id="GCC4.6"></span> <span class="anchor" id="line-223"></span><span class="anchor" id="line-224"></span></li></ul><p class="line867">
<h2 id="gfortran_4.6">gfortran 4.6</h2>
<span class="anchor" id="line-225"></span><p class="line867"><a class="http" href="http://gcc.gnu.org/gcc-4.6/">4.6 releases</a>, <a class="http" href="http://gcc.gnu.org/gcc-4.6/changes.html">4.6 release notes</a> <span class="anchor" id="line-226"></span><span class="anchor" id="line-227"></span><ul><li><p class="line862">GCC now ships with the LGPL-licensed <tt class="backtick">libquadmath</tt> library, which provides for targets with a <tt class="backtick">__float128</tt> datatype quad-precision mathematical functions. <tt class="backtick">__float128</tt> is available for targets on 32-bit x86, x86-64 and Itanium architectures. The <tt class="backtick">libquadmath</tt> library is automatically build on such targets when building the Fortran compiler. <span class="anchor" id="line-228"></span></li><li><p class="line862">On systems supporting the <tt class="backtick">libquadmath</tt> library, GNU Fortran now also supports a quad-precision, <tt class="backtick">kind=16</tt> floating-point data type (<tt class="backtick">REAL(16)</tt>, <tt class="backtick">COMPLEX(16)</tt>). As the data type is not fully supported in hardware, calculations might be one to two orders of magnitute slower than with the 4, 8 or 10 bytes floating-point data types. This change does not affect systems which support <tt class="backtick">REAL(16)</tt> in hardware nor those which do not support <tt class="backtick">libquadmath</tt>. <span class="anchor" id="line-229"></span></li><li>Much improved compile time for large array constructors. <span class="anchor" id="line-230"></span></li><li>In order to reduce execution time and memory usage, use of temporary arrays in assignment expressions is avoided for many cases. The compiler now reverses loops in order to avoid generating a temporary array where possible. <span class="anchor" id="line-231"></span></li><li><p class="line862">Improved diagnostics, especially with <tt class="backtick">-fwhole-file</tt>. <span class="anchor" id="line-232"></span></li><li><p class="line891"><tt class="backtick">-fwhole-file</tt> flag is now enabled by default. The flag improves the code generation and diagnostics. It can be disabled using the deprecated <tt class="backtick">-fno-whole-file</tt> flag. <span class="anchor" id="line-233"></span></li><li><p class="line862">Support the generation of Makefile dependencies via the <a class="http" href="http://gcc.gnu.org/onlinedocs/gcc/Preprocessor-Options.html">`-M...`</a> flags of GCC; you may need to specify additionally the <tt class="backtick">-cpp</tt> option. The dependencies take modules, Fortran's <tt class="backtick">include</tt>, and CPP's <tt class="backtick">#include</tt> into account. Note: Using <tt class="backtick">-M</tt> for the module path is no longer supported, use <tt class="backtick">-J</tt> instead. <span class="anchor" id="line-234"></span></li><li><p class="line862">A new command-line option <tt class="backtick">-Wunused-dummy-argument</tt> warns about unused dummy arguments and is included in <tt class="backtick">-Wall</tt>. Before <tt class="backtick">-Wunused-variable</tt> also warned about unused dummy arguments. <span class="anchor" id="line-235"></span></li><li><p class="line862">The flag <tt class="backtick">-Wconversion</tt> has been modified to issue only warnings if the conversion leads to information loss, which drastically reduces the number of warnings; <tt class="backtick">-Wconversion</tt> is thus now enabled with <tt class="backtick">-Wall</tt>. The flag <tt class="backtick">-Wconversion-extra</tt> has been added and warns also about other conversion; <tt class="backtick">-Wconversion-extra</tt> typically shows a huge number warnings, most of which can be ignored. <span class="anchor" id="line-236"></span></li><li><p class="line891"><strong><a href="/wiki/Fortran2003Status">Fortran 2003</a></strong> <span class="anchor" id="line-237"></span><ul><li><p class="line862">Extended support for <a href="/wiki/OOP">polymorphism and object-oriented programming</a>. <span class="anchor" id="line-238"></span></li><li>Experimental, incomplete support of the ASSOCIATE construct. <span class="anchor" id="line-239"></span></li><li>In pointer assignments it is now possible to specify the lower bounds of the pointer and, for a rank-1 or a simply contiguous data-target, to remap the bounds. <span class="anchor" id="line-240"></span></li><li><p class="line862">Automatic (re)allocation: In intrinsic assignments to allocatable variables the left-hand side will be automatically allocated (if unallocated) or reallocated (if the shape or type parameter is different). To avoid the small performance penalty, you can use for arrays and character strings <tt class="backtick">a(:)&nbsp;=&nbsp;...</tt> instead of <tt class="backtick">a&nbsp;=&nbsp;...</tt> -- or disable the feature using <tt class="backtick">-std=f95</tt> or <a class="http" href="http://gcc.gnu.org/onlinedocs/gfortran/Code-Gen-Options.html">-fno-realloc-lhs</a>. <span class="anchor" id="line-241"></span></li><li>Deferred type parameter: For scalar allocatable and pointer variables the character length can be deferred. <span class="anchor" id="line-242"></span><span class="anchor" id="line-243"></span></li><li class="gap">Namelist variables with allocatable and pointer attribute and nonconstant length type parameter. <span class="anchor" id="line-244"></span></li></ul></li><li><p class="line891"><strong><a href="/wiki/Fortran2008Status">Fortran 2008</a></strong> <span class="anchor" id="line-245"></span><ul><li><p class="line862">Experimental <a href="/wiki/Coarray">coarray support</a> (incomplete and for one image only, i.e. <tt class="backtick">num_images()&nbsp;==&nbsp;1</tt>) <span class="anchor" id="line-246"></span></li><li>The STOP and the new ERROR STOP  statements now support all constant expressions. <span class="anchor" id="line-247"></span></li><li><p class="line862">Support for the <tt class="backtick">CONTIGUOUS</tt> attribute. <span class="anchor" id="line-248"></span></li><li><p class="line862">Support <tt class="backtick">ALLOCATE</tt> with <tt class="backtick">MOLD</tt>. <span class="anchor" id="line-249"></span></li><li><p class="line862">Support for the <tt class="backtick">STORAGE_SIZE</tt> intrinsic inquiry function. <span class="anchor" id="line-250"></span></li><li><p class="line862">Support of the <tt class="backtick">NORM2</tt> and <tt class="backtick">PARITY</tt> intrinsic functions. <span class="anchor" id="line-251"></span></li><li><p class="line862">The following bit intrinsics were added: <tt class="backtick">POPCNT</tt> and <tt class="backtick">POPPAR</tt> for counting the number of one bits and returning the parity; <tt class="backtick">BGE</tt>, <tt class="backtick">BGT</tt>, <tt class="backtick">BLE</tt>, and <tt class="backtick">BLT</tt> for bitwise comparisons; <tt class="backtick">DSHIFTL</tt> and <tt class="backtick">DSHIFTR</tt> for combined left and right shifts, <tt class="backtick">MASKL</tt> and <tt class="backtick">MASKR</tt> for simple left and right justified masks, <tt class="backtick">MERGE_BITS</tt>  for a bitwise merge using a mask, <tt class="backtick">SHIFTA</tt>, <tt class="backtick">SHIFTL</tt> and <tt class="backtick">SHIFTR</tt> for shift operations, and the transformational bit intrinsics <tt class="backtick">IALL</tt>, <tt class="backtick">IANY</tt> and <tt class="backtick">IPARITY</tt>. <span class="anchor" id="line-252"></span></li><li><p class="line862">Support of the <tt class="backtick">EXECUTE_COMMAND_LINE</tt> intrinsic subroutine. <span class="anchor" id="line-253"></span></li><li><p class="line862">Support for the <tt class="backtick">IMPURE</tt> attribute for procedures, which allows for <tt class="backtick">ELEMENTAL</tt> procedures without the restrictions of <tt class="backtick">PURE</tt>. <span class="anchor" id="line-254"></span></li><li><p class="line862">Null pointers (including <tt class="backtick">NULL()</tt>) and not allocated variables can be used as actual argument to optional non-pointer, non-allocatable dummy arguments, denoting an absent argument. <span class="anchor" id="line-255"></span></li><li><p class="line862">Non-pointer variables with <tt class="backtick">TARGET</tt> attribute can be used as actual argument to <tt class="backtick">POINTER</tt> dummies with <tt class="backtick">INTENT(IN)</tt> <span class="anchor" id="line-256"></span></li><li><p class="line862">Pointers including procedure pointers and those in a derived type (pointer components) can now be initialized by a target instead of only by <tt class="backtick">NULL</tt>. <span class="anchor" id="line-257"></span></li><li><p class="line862">The <tt class="backtick">EXIT</tt> statement (with construct-name) can be now be used to leave not only the <tt class="backtick">DO</tt> but also the <tt class="backtick">ASSOCIATE</tt>, <tt class="backtick">BLOCK</tt>, <tt class="backtick">IF</tt>, <tt class="backtick">SELECT&nbsp;CASE</tt> and <tt class="backtick">SELECT&nbsp;TYPE</tt> constructs. <span class="anchor" id="line-258"></span></li><li>Internal procedures can now be used as actual argument. <span class="anchor" id="line-259"></span></li><li><p class="line862">The named constants <tt class="backtick">INTEGER_KINDS</tt>, <tt class="backtick">LOGICAL_KINDS</tt>, <tt class="backtick">REAL_KINDS</tt> and <tt class="backtick">CHARACTER_KINDS</tt> of the intrinsic module <tt class="backtick">ISO_FORTRAN_ENV</tt> have been added; those arrays contain the supported kind values for the respective types. <span class="anchor" id="line-260"></span></li><li><p class="line862">The module procedures <tt class="backtick">C_SIZEOF</tt> of <tt class="backtick">ISO_C_BINDINGS</tt> and <tt class="backtick">COMPILER_VERSION</tt> and <tt class="backtick">COMPILER_OPTIONS</tt> of <tt class="backtick">ISO_FORTRAN_ENV</tt> have been implemented. <span class="anchor" id="line-261"></span></li><li><p class="line862">Minor changes: obsolesce diagnostics for <tt class="backtick">ENTRY</tt>  was added for <tt class="backtick">-std=f2008</tt>; a line may start with a semicolon; for internal and module procedures <tt class="backtick">END</tt> can be used instead of <tt class="backtick">END&nbsp;SUBROUTINE</tt> and <tt class="backtick">END&nbsp;FUNCTION</tt>; <tt class="backtick">SELECTED_REAL_KIND</tt> now also takes a <tt class="backtick">RADIX</tt> argument; intrinsic types are supported for <tt class="backtick">TYPE(</tt><em>intrinsic-type-spec</em><tt class="backtick">)</tt>; multiple type-bound procedures can be declared in a single <tt class="backtick">PROCEDURE</tt> statement. Implied-shape arrays are supported for named constants (<tt class="backtick">PARAMETER</tt>). The transformational, three argument versions of <tt class="backtick">BESSEL_JN</tt> and <tt class="backtick">BESSEL_YN</tt>  were added -- the elemental, two-argument version had been added in GCC 4.4; note that the transformational functions use a recurrence algorithm. <span class="anchor" id="line-262"></span><span class="anchor" id="line-263"></span></li></ul></li><li class="gap" style="list-style-type:none"><p class="line891"><span class="anchor" id="GCC4.7"></span> <span class="anchor" id="line-264"></span><span class="anchor" id="line-265"></span></li></ul><p class="line867">
<h2 id="gfortran_4.7">gfortran 4.7</h2>
<span class="anchor" id="line-266"></span><p class="line867"><a class="http" href="http://gcc.gnu.org/gcc-4.7/">4.7 releases</a>, <a class="http" href="http://gcc.gnu.org/gcc-4.7/changes.html">4.7 release notes</a> <span class="anchor" id="line-267"></span><span class="anchor" id="line-268"></span><ul><li><p class="line891"><a class="http" href="http://www.openmp.org/mp-documents/OpenMP3.1.pdf">OpenMP 3.1</a> is now supported by the C, C++ and Fortran front end. <span class="anchor" id="line-269"></span></li><li><p class="line862">The compile flag <a class="http" href="http://gcc.gnu.org/onlinedocs/gfortran/Code-Gen-Options.html#index-g_t_0040code_007bfstack_002darrays_007d-254">-fstack-arrays</a> has been added, which causes that all local arrays are put on stack memory. For some programs this will improve the performance significantly. If your program uses very large local arrays, it is possible that you will have to extend your runtime limits for stack memory. <span class="anchor" id="line-270"></span></li><li><p class="line862">The <a class="http" href="http://gcc.gnu.org/onlinedocs/gcc/Optimize-Options.html#index-Ofast-689">-Ofast</a> flag now also implies <a class="http" href="http://gcc.gnu.org/onlinedocs/gfortran/Code-Gen-Options.html">-fno-protect-parens</a> and <a class="http" href="http://gcc.gnu.org/onlinedocs/gfortran/Code-Gen-Options.html#index-g_t_0040code_007bfstack_002darrays_007d-254">-fstack-arrays</a>. <span class="anchor" id="line-271"></span></li><li><p class="line862">The flag <a class="http" href="http://gcc.gnu.org/onlinedocs/gfortran/Error-and-Warning-Options.html">-Wreal-q-constant</a> has been added, which warns if floating-point literals have been specified using <tt class="backtick">q</tt> (such as <tt class="backtick">1.0q0</tt>); the <tt class="backtick">q</tt> marker is now supported as vendor extension to denote quad precision (<tt class="backtick">REAL(16)</tt> or if not available <tt class="backtick">REAL(10)</tt>). Consider using a kind parameter (such as in <tt class="backtick">1.0_qp</tt>) instead, which can be obtained via <a class="http" href="http://gcc.gnu.org/onlinedocs/gfortran/SELECTED_005fREAL_005fKIND.html">SELECTED_REAL_KIND</a>. <span class="anchor" id="line-272"></span></li><li><p class="line862">Front-end optimizations can now be selected by the <a class="http" href="http://gcc.gnu.org/onlinedocs/gfortran/Code-Gen-Options.html#index-g_t_0040code_007bfrontend_002doptimize_007d-275">-ffrontend-optimize</a> option, or deselected by the <a class="http" href="http://gcc.gnu.org/onlinedocs/gfortran/Code-Gen-Options.html#index-g_t_0040code_007bfrontend_002doptimize_007d-275">-fno-frontend-optimize</a> option. <tt class="backtick">-ffrontend-optimize</tt> is the default when any <tt class="backtick">-O</tt> option is in effect. <span class="anchor" id="line-273"></span></li><li><p class="line862">When front-end optimization removes a function call, the <a class="http" href="http://gcc.gnu.org/onlinedocs/gfortran/Error-and-Warning-Options.html#index-g_t_0040code_007bWfunction_002delimination_007d-170">-Wfunction-elimination</a> option warns about the removal. <span class="anchor" id="line-274"></span></li><li><p class="line862">When performing front-end optimization, the <a class="http" href="http://gcc.gnu.org/onlinedocs/gfortran/Code-Gen-Options.html#index-g_t_0040code_007bfaggressive_002dfunction_002delimination_007d-270">-faggressive-function-elimination</a> option allows the removal of duplicate function calls even for impure functions. <span class="anchor" id="line-275"></span></li><li><p class="line862">The <tt class="backtick">GFORTRAN_USE_STDERR</tt> environment variable has been removed. GNU Fortran now always prints error messages to standard error. If you wish to redirect standard error, please consult the manual for your OS, shell, batch environment etc. as appropriate. <span class="anchor" id="line-276"></span></li><li><p class="line862">The <tt class="backtick">-fdump-core</tt> option and <tt class="backtick">GFORTRAN_ERROR_DUMPCORE</tt> environment variable have been removed. When encountering a serious error, gfortran will now always abort the program. Whether a core dump is generated depends on the user environment settings; see for POSIX shells the <tt class="backtick">ulimit&nbsp;-c</tt> and for C shells the <tt class="backtick">limit&nbsp;coredumpsize</tt> setting, and see the <a class="http" href="http://msdn.microsoft.com/en-us/library/bb787181(v=vs.85).aspx">WER</a> user-mode dumps settings on Windows. <span class="anchor" id="line-277"></span></li><li><p class="line862">The <a class="http" href="http://gcc.gnu.org/onlinedocs/gfortran/Debugging-Options.html#index-g_t_0040code_007bfno-backtrace_007d-183">-fbacktrace</a> option is now enabled by default. When encountering a fatal error, gfortran will attempt to print a backtrace to standard error before aborting. It can be disabled with <tt class="backtick">-fno-backtrace</tt>. Note: On POSIX targets with the addr2line utility from GNU binutils, GNU Fortran can print a backtrace with function name, file name, line number information in addition to the addresses; otherwise only the addresses are printed. <span class="anchor" id="line-278"></span></li><li><p class="line862">The compile options <a class="http" href="http://gcc.gnu.org/onlinedocs/gfortran/Fortran-Dialect-Options.html#Fortran-Dialect-Options">-freal-N-real-M</a>have been added.  These options promote all entities on type <tt class="backtick">REAL(N)</tt> to <tt class="backtick">REAL(M)</tt>, where <em>N</em> and <em>M</em> can be 4 and 8 and, if available, 10 and 16. <span class="anchor" id="line-279"></span></li><li><p class="line862">The compile option <a class="http" href="http://gcc.gnu.org/onlinedocs/gfortran/Fortran-Dialect-Options.html#Fortran-Dialect-Options">-finteger-4-integer-8</a> has been added.  This option promotes all entities of type <tt class="backtick">INTEGER(4)</tt> to <tt class="backtick">INTEGER(8)</tt>. <span class="anchor" id="line-280"></span></li><li><p class="line891"><strong><a href="/wiki/Fortran2003Status">Fortran 2003</a></strong> <span class="anchor" id="line-281"></span><ul><li>Generic interface name which have the same name as derived types are now supported, which allows to write constructor functions. Note that Fortran does not support static constructor functions; only default initialization or an explicit structure-constructor initialization are available. <span class="anchor" id="line-282"></span></li><li><p class="line891"><a href="/wiki/OOP">Polymorphic</a> (<tt class="backtick">class</tt>) arrays are now implemented. Whilst still not perfect, gfortran now performs at least as well as most of the other products. <span class="anchor" id="line-283"></span><span class="anchor" id="line-284"></span></li></ul></li><li class="gap"><p class="line891"><strong><a href="/wiki/Fortran2008Status">Fortran 2008</a></strong> <span class="anchor" id="line-285"></span><ul><li><p class="line891"><a href="/wiki/Coarray">Coarrays</a>: Full single-image support except for polymorphic coarrays. Initial and very preliminary support for multi-images via an of MPI-based <a href="/wiki/CoarrayLib">coarray communiciation library</a>. Note: The library version is <em>not</em> yet usable as remote coarray access is not yet possible. <span class="anchor" id="line-286"></span></li><li><p class="line862">Support for the <tt class="backtick">DO&nbsp;CONCURRENT</tt> construct has been added, which allows the user to specify that individual loop iterations have no interdependencies. <span class="anchor" id="line-287"></span><span class="anchor" id="line-288"></span></li></ul></li><li class="gap"><p class="line891"><strong><a href="/wiki/TS29113Status">TS 29113</a></strong> <span class="anchor" id="line-289"></span><ul><li><p class="line862">New flag <a class="http" href="http://gcc.gnu.org/onlinedocs/gfortran/Fortran-Dialect-Options.html#index-g_t_0040code_007bstd_003d_007d_0040var_007bstd_007d-option-53">-std=f2008ts</a> permits programs that are expected to conform to the Fortran 2008 standard and the draft <a class="ftp" href="ftp://ftp.nag.co.uk/sc22wg5/N1901-N1950/N1942.pdf">Technical Specification (TS) 29113</a> on Further Interoperability of Fortran with C. <span class="anchor" id="line-290"></span></li><li><p class="line862">The <tt class="backtick">OPTIONAL</tt> attribute is now allowed for dummy arguments of <tt class="backtick">BIND(C)</tt> procedures. <span class="anchor" id="line-291"></span></li><li>The RANK intrinsic has been added <span class="anchor" id="line-292"></span></li><li><p class="line862">The <tt class="backtick">ASYNCHRONOUS</tt> implementation of GCC since version 4.6 is compatible with the TS 29113 changes. <span class="anchor" id="line-293"></span><span class="anchor" id="line-294"></span></li></ul></li></ul><p class="line867"><em>The following items need still to be merged with the <a class="http" href="http://gcc.gnu.org/gcc-4.7/changes.html">GCC 4.7 changelog</a></em> and/or with the <a class="http" href="http://gcc.gnu.org/onlinedocs/gfortran/Fortran-2003-and-2008-status.html">GNU Fortran manual</a> <span class="anchor" id="line-295"></span><span class="anchor" id="line-296"></span><span class="anchor" id="line-297"></span><ul><li style="list-style-type:none"><p class="line891"><span class="anchor" id="GCC4.8"></span> <span class="anchor" id="line-298"></span><span class="anchor" id="line-299"></span></li></ul><p class="line867">
<h2 id="gfortran_4.8_.28the_current_development_version.29">gfortran 4.8 (the current development version)</h2>
<span class="anchor" id="line-300"></span><p class="line867"><a class="http" href="http://gcc.gnu.org/gcc-4.8/">4.8 releases</a>, <a class="http" href="http://gcc.gnu.org/gcc-4.8/changes.html">4.8 release notes</a> <span class="anchor" id="line-301"></span><span class="anchor" id="line-302"></span><p class="line867"><img alt="/!\" height="15" src="/moin_static187/modern/img/alert.png" title="/!\" width="15" /> Please remember not only to update this list, but also <a href="/wiki/Fortran2003">Fortran2003</a>, <a href="/wiki/Fortran2003Status">Fortran2003Status</a>, <a href="/wiki/Fortran2008Status">Fortran2008Status</a>, the <a class="http" href="http://gcc.gnu.org/gcc-4.8/changes.html">4.8 Changelog</a> and the <a class="http" href="http://gcc.gnu.org/onlinedocs/gfortran/Fortran-2003-and-2008-status.html">GNU Fortran manual</a> (add suggested changes to <a class="http" href="http://gcc.gnu.org/bugzilla/show_bug.cgi?id=54339">PR54339</a>)! <span class="anchor" id="line-303"></span><span class="anchor" id="line-304"></span><ul><li><p class="line891"><strong>Compatibility notice</strong> <span class="anchor" id="line-305"></span><ul><li><p class="line862">Module files: The version of the module files (<tt class="backtick">.mod</tt>) has been incremented. Fortran <tt class="backtick">MODULE</tt>s compiled by earlier GCC versions have to be recompiled, when they are <tt class="backtick">USE</tt>d by files compiled with GCC 4.8, because GCC 4.8 is not able to read <tt class="backtick">.mod</tt> file of earlier GCC versions; attempting to do so gives an error message. Note: The ABI of the produced assembler data itself has not changed: object files and libraries are fully compatible to older versions. (Except for the next item.) <span class="anchor" id="line-306"></span></li><li>ABI: Some internal names (name in the assembler/object file) have changed for symbols declared in the specification part of a module. If the module â€“ or a file using such a symbol via use association â€“ is recompiled, the module and all files which directly use such symbols have to be recompiled. The change only affects the following kind of module symbols: <span class="anchor" id="line-307"></span><ul><li><p class="line862">Procedure pointers. Note: C-interoperable function pointers (<tt class="backtick">type(c_funptr)</tt>) are not affected nor are procedure-pointer components. <span class="anchor" id="line-308"></span></li><li>Deferred-length character strings. <span class="anchor" id="line-309"></span><span class="anchor" id="line-310"></span></li></ul></li></ul></li><li class="gap"><p class="line862">The <a class="http" href="http://gcc.gnu.org/onlinedocs/gfortran/BACKTRACE.html">BACKTRACE</a> intrinsic subroutine has been added. It shows a backtrace at an arbitrary place in user code; program execution continues normally afterwards. <span class="anchor" id="line-311"></span><span class="anchor" id="line-312"></span></li><li class="gap"><p class="line862">The <tt class="backtick">-Wc-binding-type</tt> warning flag has been added (by default disabled), which warns if the a variable might not be C interoperable. In particular, if the variable has been declared using an intrinsic type with default kind instead of using a kind parameter defined for C interoperability in the intrinsic <tt class="backtick">ISO_C_Binding</tt> module. Before, the warning was always printed.  This flag is implied by <tt class="backtick">-Wall</tt>. <span class="anchor" id="line-313"></span><span class="anchor" id="line-314"></span></li><li class="gap"><p class="line862">The <tt class="backtick">-Wrealloc-lhs</tt> and <tt class="backtick">-Wrealloc-lhs-all</tt> warning flags have been added, which diagnose when code to is inserted for automatic (re)allocation of a variable during assignment. The flag can be used to decide whether it is safe to use <tt class="backtick">-fno-realloc-lhs</tt>. Additionally, it can be used to find automatic (re)allocation in hot loops. (For arrays, replacing <tt class="backtick">var&nbsp;=</tt> by <tt class="backtick">var(:)&nbsp;=</tt> disables the automatic reallocation.) <span class="anchor" id="line-315"></span><span class="anchor" id="line-316"></span></li><li class="gap"><p class="line862">The <tt class="backtick">-Wcompare-reals</tt> flag has been added.  When this flag is set, warnings are issued when comparing <tt class="backtick">REAL</tt> or <tt class="backtick">COMPLEX</tt> types for equality and inequality; consider, where appropriate, to replace <tt class="backtick">a&nbsp;==&nbsp;b</tt> by <tt class="backtick">abs(a-b)&nbsp;&lt;&nbsp;eps</tt> with a suitable <tt class="backtick">eps</tt>.  This flag is implied by <tt class="backtick">-Wextra</tt>. <span class="anchor" id="line-317"></span><span class="anchor" id="line-318"></span></li><li class="gap"><p class="line862">The <tt class="backtick">-Wtarget-lifetime</tt> flag has been added (enabled with <tt class="backtick">-Wall</tt>), which warns if the pointer in a pointer assignment might outlive its target. This flag is implied by <tt class="backtick">-Wall</tt>. <span class="anchor" id="line-319"></span><span class="anchor" id="line-320"></span></li><li class="gap"><p class="line862">Reading floating point numbers which use <tt class="backtick">q</tt> for the exponential (such as <tt class="backtick">4.0q0</tt>) is now supported as vendor extension for better compatibility with old data files. It is strongly recommended to use for I/O the equivalent but standard conforming <tt class="backtick">e</tt> (such as <tt class="backtick">4.0e0</tt>). [For the Fortran source code, consider replacing the <tt class="backtick">q</tt> in floating-point literals by a kind parameter (e.g. <tt class="backtick">4.0e0_qp</tt> with a suitable <tt class="backtick">qp</tt>). Note that - in the Fortran source code - replacing <tt class="backtick">q</tt> by a simple <tt class="backtick">e</tt> is <em>not</em> equivalent.] <span class="anchor" id="line-321"></span></li><li><p class="line862">The <tt class="backtick">GFORTRAN_TMPDIR</tt> environment variable, for specifying a non-default directory for files opened with <tt class="backtick">STATUS="SCRATCH"</tt>, is not used anymore. Instead gfortran checks the POSIX/GNU standard <tt class="backtick">TMPDIR</tt> environment variable. If <tt class="backtick">TMPDIR</tt> is not defined, gfortran falls back to other methods to determine the directory for temporary files as <a class="http" href="http://gcc.gnu.org/onlinedocs/gfortran/TMPDIR.html">documented in the user manual</a>. <span class="anchor" id="line-322"></span><span class="anchor" id="line-323"></span></li><li class="gap"><p class="line891"><strong><a href="/wiki/Fortran2008Status">Fortran 2003</a></strong> <span class="anchor" id="line-324"></span><ul><li><p class="line862">Support for unlimited polymorphic variables (<tt class="backtick">CLASS(*)</tt>) has been added. Note that nonconstant character lengths are not yet supported. <span class="anchor" id="line-325"></span><span class="anchor" id="line-326"></span></li></ul></li><li class="gap"><p class="line891"><strong><a href="/wiki/TS29113Status">TS 29113</a></strong> <span class="anchor" id="line-327"></span><ul><li><p class="line862">Assumed types (<tt class="backtick">TYPE(*)</tt>) are now supported. <span class="anchor" id="line-328"></span></li><li><p class="line862">Experimental support for assumed-rank arrays (<tt class="backtick">dimension(..)</tt>) has been added. Note that currently gfortran's own array descriptor is used, which is different from the one defined in TS29113, see <a class="http" href="http://gcc.gnu.org/viewcvs/trunk/libgfortran/libgfortran.h?content-type=text%2Fplain&amp;view=co">gfortran's header file</a> or use the <a class="http" href="http://chasm-interop.sourceforge.net/">Chasm Language Interoperability Tools</a>. <span class="anchor" id="line-329"></span><span class="anchor" id="line-330"></span></li></ul></li></ul><p class="line867"><br>
 <span class="anchor" id="line-331"></span><span class="anchor" id="line-332"></span><p class="line867"><hr /><p class="line874"> <span class="anchor" id="line-333"></span><span class="anchor" id="line-334"></span><p class="line867">
<h3 id="gfortran_compliance_test_coverage_matrix_.28initial_version.29">gfortran compliance test coverage matrix (initial version)</h3>
<span class="anchor" id="line-335"></span><ul><li><p class="line891"><a href="/wiki/GFortranTestMatrix">Test Matrix</a> <span class="anchor" id="line-336"></span><span class="anchor" id="line-337"></span></li></ul><p class="line867"><hr /><p class="line874"> <span class="anchor" id="line-338"></span><a href="/wiki/CategoryCategory">CategoryCategory</a> <span class="anchor" id="line-339"></span><span class="anchor" id="bottom"></span></div><p id="pageinfo" class="info" lang="en" dir="ltr">None: GFortran  (last edited 2013-01-06 18:11:17 by <span title="ThomasKoenig @ 78.35.159.138[78.35.159.138]"><a class="nonexistent" href="/wiki/ThomasKoenig" title="ThomasKoenig @ 78.35.159.138[78.35.159.138]">ThomasKoenig</a></span>)</p>

<div id="pagebottom"></div>
</div>


<div id="footer">
<ul class="editbar"><li><span class="disabled">Immutable Page</span></li><li class="toggleCommentsButton" style="display:none;"><a href="#" class="nbcomment" onClick="toggleComments();return false;">Comments</a></li><li><a class="nbinfo" href="/wiki/GFortran?action=info" rel="nofollow">Info</a></li><li><a class="nbattachments" href="/wiki/GFortran?action=AttachFile" rel="nofollow">Attachments</a></li><li>
<form class="actionsmenu" method="GET" action="/wiki/GFortran">
<div>
    <label>More Actions:</label>
    <select name="action"
        onchange="if ((this.selectedIndex != 0) &&
                      (this.options[this.selectedIndex].disabled == false)) {
                this.form.submit();
            }
            this.selectedIndex = 0;">
        <option value="raw">Raw Text</option>
<option value="print">Print View</option>
<option value="RenderAsDocbook">Render as Docbook</option>
<option value="refresh">Delete Cache</option>
<option value="show" disabled class="disabled">------------------------</option>
<option value="SpellCheck">Check Spelling</option>
<option value="LikePages">Like Pages</option>
<option value="LocalSiteMap">Local Site Map</option>
<option value="show" disabled class="disabled">------------------------</option>
<option value="RenamePage" disabled class="disabled">Rename Page</option>
<option value="DeletePage" disabled class="disabled">Delete Page</option>
<option value="show" disabled class="disabled">------------------------</option>
<option value="show" disabled class="disabled">Subscribe User</option>
<option value="show" disabled class="disabled">------------------------</option>
<option value="show" disabled class="disabled">Remove Spam</option>
<option value="show" disabled class="disabled">Revert to this revision</option>
<option value="show" disabled class="disabled">Package Pages</option>
<option value="show" disabled class="disabled">------------------------</option>
<option value="Load">Load</option>
<option value="Save">Save</option>
    </select>
    <input type="submit" value="Do">
    
</div>
<script type="text/javascript">
<!--// Init menu
actionsMenuInit('More Actions:');
//-->
</script>
</form>
</li></ul>

<ul id="credits">
<li><a href="http://moinmo.in/" title="This site uses the MoinMoin Wiki software.">MoinMoin Powered</a></li><li><a href="http://moinmo.in/Python" title="MoinMoin is written in Python.">Python Powered</a></li><li><a href="http://moinmo.in/GPL" title="MoinMoin is GPL licensed.">GPL licensed</a></li><li><a href="http://validator.w3.org/check?uri=referer" title="Click here to validate this page.">Valid HTML 4.01</a></li>
</ul>


</div>
</body>
</html>

