<!DOCTYPE html>
<html>
  <head>
    <title>Ruby Koans Online</title>
    <link href='/styles.css' media='screen' rel='stylesheet' type='text/css' />
    <script src='/javascripts/jquery-1.4.4.min.js'></script>
    <script src='http://tab-slide-out.googlecode.com/files/jquery.tabSlideOut.v1.3.js'></script>
    <script type='text/javascript'>
      //<![CDATA[
        $(function(){
          $('.slide-out-div').tabSlideOut({
            tabHandle: '.handle',                      //class of the element that will become your tab
            pathToTabImage: '/images/contact_tab.gif', //path to the image for the tab //Optionally can be set using css
            imageHeight: '122px',                      //height of tab image           //Optionally can be set using css
            imageWidth: '40px',                        //width of tab image            //Optionally can be set using css
            tabLocation: 'right',                       //side of screen where tab lives, top, right, bottom, or left
            speed: 300,                                //speed of animation
            action: 'click',                           //options: 'click' or 'hover', action to trigger animation
            topPos: '200px',                           //position from the top/ use if tabLocation is left or right
            leftPos: '20px',                           //position from left/ use if tabLocation is bottom or top
            fixedPosition: false                       //options: true makes it stick(fixed position) on scroll
          });
        });
        
        var _gaq = [];
        _gaq.push(['_setAccount', 'UA-25906115-1']);
        _gaq.push(['_trackPageview']);
        
        var googleAnalytics = function() {
          var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
          ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
          var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
        };
        googleAnalytics();
      //]]>
    </script>
    <script src='/javascripts/koans.js'></script>
  </head>
  <body>
    <div id='top_line'></div>
    <img id='swoosh' src='/images/enso.gif' />
    <h1>
      Learn Ruby
      <span class='version'>(v1.8.7)</span>
      <span class='with'>With the Edgecase Ruby Koans <i>Online</i></span>
    </h1>
    <section id='intro'>
      <h1>Ruby Koans Online</h1>
      <p>
        The Ruby Koans are a great way to learn about the Ruby language.
        This Ruby Koans
        <em>Online</em>
        is an abridged version of the Koans in the convenience of a browser.
      </p>
      <p>
        However, if this is your first time through the Koans, we recommend you read the introduction
        below to find out how the Koans work.
      </p>
    </section>
    <a href='/about_asserts' style='font-size: 36px;'>Start the Koans >></a>
    <hr />
    <section id='the_world'>
      <h2>The Koans World</h2>
      <p>
        The koans are broken out into areas covering such topics as hashes, modules and classes.
        Each of these are presented on their own page.
      </p>
      <p>
        Each koan builds up your knowledge of Ruby and builds upon itself.
      </p>
    </section>
    <section id='the_path'>
      <h2>The Path to Enlightenment</h2>
      <p>
        Each page consists of a number of tests that you have to complete and any information you
        might require to help you make those test pass.  You can run the tests by clicking the
        Meditate button at any time or by pressing the Enter key when filling in any of the tests.
      </p>
      <h3>Red, Green, Refactor</h3>
      <p>
        In test-driven development (TDD) the mantra has always been
        <ol>
          <li>
            <span class='red'>red</span>
            : write a failing test and run it,
          </li>
          <li>
            <span class='green'>green</span>
            : write just enough code to make the test pass, and
          </li>
          <li>
            <span class='refactor'>refactor</span>
            : look at the code to see if you can make it any better.
          </li>
        </ol>
      </p>
      <p>
        With the Ruby Koans Online,
        <ol>
          <li>
            the tests will start in the failing state ( background is
            <span class='red'>red</span>
            ),
          </li>
          <li>
            type what you expect the result(s) to be in the input box(es) provided to make the test pass (
            background becomes
            <span class='green'>green</span>
            ),
          </li>
          <li>
            then take a moment to reflect upon the test to see what it is teaching you and, if required,
            improve the code to better communicate its intent (
            <span class='refactor'>refactor</span>
            ).
          </li>
        </ol>
      </p>
      <div class='greenbox'>
        <h3 style='color: green'>The happy path</h3>
        <p>
          For example, type <i>true</i> in the input box below and then click the Meditate button or hit Enter
          to turn the box green.
        </p>
        <div class='example'>
          <form>
            <div class='meditate' nowrap='nowrap'>
              <div class='koans'>
                <div class='info'># True should be true.</div>
                <div class='error'>
                  #
                  <span class='given'>&lt;false&gt;</span>
                  expected but was &lt;true&gt;.
                </div>
                <div class='koan failed' nowrap='nowrap'>
                  &nbsp;&nbsp;def&nbsp;test_example
                  <br />
                  &nbsp;&nbsp;&nbsp;&nbsp;assert_equal&nbsp;
                  <input class='koanInput' name='input[]' type='text' />
                  ,&nbsp;true
                  <br />
                  &nbsp;&nbsp;end
                </div>
              </div>
              <input class='button' type='submit' value='Meditate' />
            </div>
          </form>
        </div>
      </div>
      <div class='redbox'>
        <h3 style='color: red'>Straying from the path</h3>
        <p>
          If the results were not what you expected, the Koans will guide you back to the enlightened path with a hint.
        </p>
        <p>
          Type <i>false</i> in the box below to see the hint displayed.
        </p>
        <div class='example'>
          <form>
            <div class='meditate' nowrap='nowrap'>
              <div class='koans'>
                <div class='info'># True should be true.</div>
                <div class='error'>
                  #
                  <span class='given'>&lt;false&gt;</span>
                  expected but was &lt;true&gt;.
                </div>
                <div class='koan failed' nowrap='nowrap'>
                  &nbsp;&nbsp;def&nbsp;test_example
                  <br />
                  &nbsp;&nbsp;&nbsp;&nbsp;assert_equal&nbsp;
                  <input class='koanInput' name='input[]' type='text' />
                  ,&nbsp;true
                  <br />
                  &nbsp;&nbsp;end
                </div>
              </div>
              <input class='button' type='submit' value='Meditate' />
            </div>
          </form>
        </div>
        <p>
          <h3>"<em>Wait, but it said it expected <u>false</u>! What gives!?</em>"</h3>
          The wording comes from the TestUnit framework.<br/>
          In TDD you will write a test with an expectation of how you want the code to behave
          and then write the actual code to make that test pass.<br/>
          <br />
          This might seem confusing in the case of the Ruby Koans, where most of the test is usually written for you.<br/>
          In Koans you are providing what <em>your</em> expectation is, so the test framework reports <em>your</em> expectations vs actual results.
        </p>
      </div>
    </section>
    <section id='issues'>
      <h3>Known Issues</h3>
      <ul>
        <li>
          In Chrome, hitting the browser back button from the Koans error page
          will cause the browser to move some of your answers around.
          Either don't use Chrome or refresh the page after hitting your
          browser back button to get Chrome to put your answers in their
          proper places.
          <a href='https://github.com/edgecase/ruby_koans_online/issues/10#issuecomment-4678002' target='_blank'>Documented Issue</a>
        </li>
      </ul>
      <p>
        If you encounter any other issues whilst using the Ruby Koans Online, please contact us using the
        Contact button at the top right of the window.
      </p>
      <p>
        Thanks, the Ruby Koans Online Team
      </p>
    </section>
    <a href='/about_asserts' style='font-size: 36px;'>Start the Koans >></a>
    <div style='height: 100px; clear:both;'></div>
    <div class='slide-out-div' style='padding: 20px; width: 250px; background: #ccc; border: 1px solid #29216d;'>
      <a class='handle' href='http://link-for-non-js-users.html'>Content</a>
      <p>Thanks for trying the Ruby Koans Online. We hope you're having fun.</p>
      <h3>Issues</h3>
      <p>
        Submit issues to the
        <a href='https://github.com/edgecase/ruby_koans_online/issues' target='_blank'>Github project.</a>
      </p>
      <hr />
      <h3>Cheers</h3>
      <p>
        Blog about it or
        <a href='http://edgecase.com/contact' target='_blank'>send us an email.</a>
      </p>
      <hr />
      <h3>Get More</h3>
      <p>
        Download the
        <a href='http://rubykoans.com/' target='_blank'>official Ruby Koans</a>
        and get the full experience.
      </p>
    </div>
  </body>
</html>
