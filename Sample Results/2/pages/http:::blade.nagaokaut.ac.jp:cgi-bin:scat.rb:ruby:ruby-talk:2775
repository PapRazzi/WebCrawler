<HTML><HEAD><TITLE>[ruby-talk:02775] Re: More code browsing questions</TITLE>
<script language="javascript">
<!--
  function chk() {
    var name = navigator.appName;
    var ver = navigator.appVersion;
    if (name.charAt(0) == "M") {
      if (ver.charAt(0) >= 5 ||
        ver.indexOf(" 5.5") >= 0 ||
        ver.indexOf(" 6") >= 0
         )
        return(true);
      return(false);
    } else if (name.charAt(0) == "N") {
      if (ver.charAt(0) >= 5)
        return(true);
      return(false);
    } else {
      return(false);
    }
  }

  function hilight(x) {
    if (!chk()) return;
    if (parent) {
      try {
        parent.frames[0].hilight(x);
      } catch(e) {
       //alert(e);
      }
    }
  }

  //Navigation Bar
  var IE = document.all;
  var PosTimer;
  function stickNavi() {
    var y = document.body.scrollTop;
    var s = document.getElementById('navi').style
    s.top = y + 7;
    s.left = 8;
  }
  function stickNaviLoop() {
    if (PosTimer){clearTimeout(PosTimer);}
    stickNavi();
    PosTimer = setTimeout("stickNaviLoop()", 10);
  }

  function setNavi() {
    if (IE) {document.body.onscroll = stickNavi;}
    else {stickNaviLoop();}
  }

//-->
</script>
<link rel="stylesheet" href="http://blade.nagaokaut.ac.jp/css/blade-old.css" type="text/css" title="blade"></HEAD><BODY onLoad="setNavi()">
<A NAME=head></A><div id="navi" style="position:absolute;top:7px;left:8px;"><A HREF="2774" class="a-button" onclick="hilight(2774)"><span id="normal" title="&lt;">&nbsp;&lt;&nbsp;</span></A><A HREF="/ruby/ruby-talk/2601-2800.shtml#2775" class="a-button" target="_top"><span id="normal" title="^">^</span></A><A HREF="2776" class="a-button" onclick="hilight(2776)"><span id="normal" title="&gt;">&nbsp;&gt;&nbsp;</span></A> <a href="2773" onclick="hilight(2773)" class="a-button"><span id="yellow" title="[previous]">&nbsp;P&nbsp;</span></a><a href="2786" onclick="hilight(2786)" class="a-button"><span id="green" title="[next]">&nbsp;N&nbsp;</span></a> <a href="2764" onclick="hilight(2764)" class="a-button"><span id="green" title="[root]">|&lt;</span></a><a href="2770" onclick="hilight(2770)" class="a-button"><span id="red" title="[next thread]">&gt;|</span></a><a href="2772" onclick="hilight(2772)" class="a-button"><span id="normal" title="[parent]">^</span></a><a href="2786" onclick="hilight(2786)" class="a-button"><span id="normal" title="[child]">_</span></a><a href="2773" onclick="hilight(2773)" class="a-button"><span id="normal" title="[elder]">&gt;</span></a><span id="normal" title="[younger]">&lt;</span> <a href="/cgi-bin/vframe.rb/ruby/ruby-talk/2775?2625-2873" target="_top" class="a-button"><span id="normal" title="[thread frame]">---</span></a><a href="/cgi-bin/vframe.rb/ruby/ruby-talk/2775?2625-2873+split-mode-vertical" target="_top" class="a-button"><span id="normal" title="[thread frame vertical]">&nbsp;|&nbsp;</span></a><a href="2775" target="_top" onclick="hilight(2775)" class="a-button"><span id="normal" title="[frame close]">&nbsp;~&nbsp;</span></a><a href="/ruby/ruby-talk/index.shtml" target="_top" class="a-button"><span id="normal" title="[index]">.</span></a><a href="/ruby/ruby-talk/../index.shtml" target="_top" class="a-button"><span id="normal" title="[iindex]">..</span></a><a href="/cgi-bin/scat.rb/ruby/ruby-talk/2775?help-en" class="a-button"><span id="normal" title="[Help]">Help</span></a></div>
<div id="header"><br>
Subject: [ruby-talk:<strong>02775</strong>] <strong>Re: More code browsing questions</strong><br>
From: <strong>Dave Thomas </strong>&lt;Dave thomases.com&gt;<br>
Date: 12 May 2000 00:57:07 -0500<br>
References: <a href="/cgi-bin/scat.rb/ruby/ruby-talk/2764" onclick="hilight(2764)">2764</a> <a href="/cgi-bin/scat.rb/ruby/ruby-talk/2765" onclick="hilight(2765)">2765</a> <a href="/cgi-bin/scat.rb/ruby/ruby-talk/2772" onclick="hilight(2772)">2772</a><br>
In-reply-to: Albert Wagner's message of &quot;Thu, 11 May 2000 23:32:37 -0500&quot;</div>
<pre>Albert Wagner &lt;alwagner / tcac.net&gt; writes:

&gt; <span style="color: #007700;">Thanks again, Dave. I understand your example, but not the following</span>
&gt; <span style="color: #007700;">code from ext/tk/lib/tkafter.rb:</span>
&gt; <span style="color: #007700;">:</span>
&gt; <span style="color: #007700;">require 'tk'</span>
&gt; 
&gt; <span style="color: #007700;">class TkAfter</span>
&gt;   <span style="color: #007700;">include TkCore</span>
&gt;   <span style="color: #007700;">extend TkCore</span>

Ah - now you need the chapter I just wrote on classes and objects.

In Ruby, class definitions are executable code, not just lame old
declarations. So, while it is trundling through

  class TkAfter
    :
  end

Ruby is executing code. In this case, 'self' is actually set to
reference TkAfter, which is an object of type class.

  class TkAfter
    puts self.type
    puts self.name
  end

  =&gt; <span style="color: #007700;">Class</span>
  =&gt; <span style="color: #007700;">TkAfter</span>

The other thing to know is that a method called with no receiver has
an implicit receiver of 'self', so matz's Tk code is equivalent to

  class TkAfter
    [self.]include TkCore
    self.extend  TkCore

  end

(the reason for the [self.] is that 'include' is a private method, and 
can't in reality be called with a receiver).

So, what does this incantation do? Let's try it.

  module TkCore
    def tclMe
      puts &quot;Hee Hee!&quot;
    end
  end

  class TkAfter
    include TkCore
    extend  TkCore
  end

  tka = TkAfter.new
  tka.tclMe           # =&gt; Hee Hee!

  TkAfter:<span style="color: #007700;">:<span style="color: #D2691E;">tclMe      # =&gt; Hee Hee!</span></span>


So, by including the module, you make its methods available as
instance methods. By extending yourself with it, you make its methods
available as class methods.



Dave
<a name=tail></a></pre>
</BODY></HTML>
