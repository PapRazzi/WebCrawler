<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta name="generator" content="Docutils 0.4.1: http://docutils.sourceforge.net/" />
<title>F2PY: Fortran to Python interface generator</title>
<meta name="author" content="Pearu Peterson &lt;pearu&#64;cens.ioc.ee&gt;" />
<meta name="date" content="2007-07-19" />
<style type="text/css">

/*
:Author: David Goodger
:Contact: goodger@users.sourceforge.net
:Date: $Date: 2005-12-18 01:56:14 +0100 (Sun, 18 Dec 2005) $
:Revision: $Revision: 4224 $
:Copyright: This stylesheet has been placed in the public domain.

Default cascading style sheet for the HTML output of Docutils.

See http://docutils.sf.net/docs/howto/html-stylesheets.html for how to
customize this style sheet.
*/

/* used to remove borders from tables and images */
.borderless, table.borderless td, table.borderless th {
  border: 0 }

table.borderless td, table.borderless th {
  /* Override padding for "table.docutils td" with "! important".
     The right padding separates the table cells. */
  padding: 0 0.5em 0 0 ! important }

.first {
  /* Override more specific margin styles with "! important". */
  margin-top: 0 ! important }

.last, .with-subtitle {
  margin-bottom: 0 ! important }

.hidden {
  display: none }

a.toc-backref {
  text-decoration: none ;
  color: black }

blockquote.epigraph {
  margin: 2em 5em ; }

dl.docutils dd {
  margin-bottom: 0.5em }

/* Uncomment (and remove this text!) to get bold-faced definition list terms
dl.docutils dt {
  font-weight: bold }
*/

div.abstract {
  margin: 2em 5em }

div.abstract p.topic-title {
  font-weight: bold ;
  text-align: center }

div.admonition, div.attention, div.caution, div.danger, div.error,
div.hint, div.important, div.note, div.tip, div.warning {
  margin: 2em ;
  border: medium outset ;
  padding: 1em }

div.admonition p.admonition-title, div.hint p.admonition-title,
div.important p.admonition-title, div.note p.admonition-title,
div.tip p.admonition-title {
  font-weight: bold ;
  font-family: sans-serif }

div.attention p.admonition-title, div.caution p.admonition-title,
div.danger p.admonition-title, div.error p.admonition-title,
div.warning p.admonition-title {
  color: red ;
  font-weight: bold ;
  font-family: sans-serif }

/* Uncomment (and remove this text!) to get reduced vertical space in
   compound paragraphs.
div.compound .compound-first, div.compound .compound-middle {
  margin-bottom: 0.5em }

div.compound .compound-last, div.compound .compound-middle {
  margin-top: 0.5em }
*/

div.dedication {
  margin: 2em 5em ;
  text-align: center ;
  font-style: italic }

div.dedication p.topic-title {
  font-weight: bold ;
  font-style: normal }

div.figure {
  margin-left: 2em ;
  margin-right: 2em }

div.footer, div.header {
  clear: both;
  font-size: smaller }

div.line-block {
  display: block ;
  margin-top: 1em ;
  margin-bottom: 1em }

div.line-block div.line-block {
  margin-top: 0 ;
  margin-bottom: 0 ;
  margin-left: 1.5em }

div.sidebar {
  margin-left: 1em ;
  border: medium outset ;
  padding: 1em ;
  background-color: #ffffee ;
  width: 40% ;
  float: right ;
  clear: right }

div.sidebar p.rubric {
  font-family: sans-serif ;
  font-size: medium }

div.system-messages {
  margin: 5em }

div.system-messages h1 {
  color: red }

div.system-message {
  border: medium outset ;
  padding: 1em }

div.system-message p.system-message-title {
  color: red ;
  font-weight: bold }

div.topic {
  margin: 2em }

h1.section-subtitle, h2.section-subtitle, h3.section-subtitle,
h4.section-subtitle, h5.section-subtitle, h6.section-subtitle {
  margin-top: 0.4em }

h1.title {
  text-align: center }

h2.subtitle {
  text-align: center }

hr.docutils {
  width: 75% }

img.align-left {
  clear: left }

img.align-right {
  clear: right }

ol.simple, ul.simple {
  margin-bottom: 1em }

ol.arabic {
  list-style: decimal }

ol.loweralpha {
  list-style: lower-alpha }

ol.upperalpha {
  list-style: upper-alpha }

ol.lowerroman {
  list-style: lower-roman }

ol.upperroman {
  list-style: upper-roman }

p.attribution {
  text-align: right ;
  margin-left: 50% }

p.caption {
  font-style: italic }

p.credits {
  font-style: italic ;
  font-size: smaller }

p.label {
  white-space: nowrap }

p.rubric {
  font-weight: bold ;
  font-size: larger ;
  color: maroon ;
  text-align: center }

p.sidebar-title {
  font-family: sans-serif ;
  font-weight: bold ;
  font-size: larger }

p.sidebar-subtitle {
  font-family: sans-serif ;
  font-weight: bold }

p.topic-title {
  font-weight: bold }

pre.address {
  margin-bottom: 0 ;
  margin-top: 0 ;
  font-family: serif ;
  font-size: 100% }

pre.literal-block, pre.doctest-block {
  margin-left: 2em ;
  margin-right: 2em ;
  background-color: #eeeeee }

span.classifier {
  font-family: sans-serif ;
  font-style: oblique }

span.classifier-delimiter {
  font-family: sans-serif ;
  font-weight: bold }

span.interpreted {
  font-family: sans-serif }

span.option {
  white-space: nowrap }

span.pre {
  white-space: pre }

span.problematic {
  color: red }

span.section-subtitle {
  /* font-size relative to parent (h1..h6 element) */
  font-size: 80% }

table.citation {
  border-left: solid 1px gray;
  margin-left: 1px }

table.docinfo {
  margin: 2em 4em }

table.docutils {
  margin-top: 0.5em ;
  margin-bottom: 0.5em }

table.footnote {
  border-left: solid 1px black;
  margin-left: 1px }

table.docutils td, table.docutils th,
table.docinfo td, table.docinfo th {
  padding-left: 0.5em ;
  padding-right: 0.5em ;
  vertical-align: top }

table.docutils th.field-name, table.docinfo th.docinfo-name {
  font-weight: bold ;
  text-align: left ;
  white-space: nowrap ;
  padding-left: 0 }

h1 tt.docutils, h2 tt.docutils, h3 tt.docutils,
h4 tt.docutils, h5 tt.docutils, h6 tt.docutils {
  font-size: 100% }

tt.docutils {
  background-color: #eeeeee }

ul.auto-toc {
  list-style-type: none }

</style>
</head>
<body>
<div class="document" id="f2py-fortran-to-python-interface-generator">
<h1 class="title">F2PY: Fortran to Python interface generator</h1>
<table class="docinfo" frame="void" rules="none">
<col class="docinfo-name" />
<col class="docinfo-content" />
<tbody valign="top">
<tr><th class="docinfo-name">Author:</th>
<td>Pearu Peterson &lt;<a class="reference" href="mailto:pearu&#64;cens.ioc.ee">pearu&#64;cens.ioc.ee</a>&gt;</td></tr>
<tr class="field"><th class="docinfo-name">License:</th><td class="field-body"><a class="reference" href="http://www.fsf.org/copyleft/lesser.html">LGPL</a>.</td>
</tr>
<tr class="field"><th class="docinfo-name">Web-site:</th><td class="field-body"><a class="reference" href="http://cens.ioc.ee/projects/f2py2e/">http://cens.ioc.ee/projects/f2py2e/</a></td>
</tr>
<tr class="field"><th class="docinfo-name">Discussions to:</th><td class="field-body"><a class="reference" href="http://cens.ioc.ee/mailman/listinfo/f2py-users/">f2py-users mailing list</a></td>
</tr>
<tr class="field"><th class="docinfo-name">Documentation:</th><td class="field-body"><a class="reference" href="usersguide/index.html">User's Guide</a>, <a class="reference" href="FAQ.html">FAQ</a></td>
</tr>
<tr class="field"><th class="docinfo-name">Platforms:</th><td class="field-body">All</td>
</tr>
<tr><th class="docinfo-name">Date:</th>
<td>2007-07-19</td></tr>
</tbody>
</table>
<!-- -*- rest -*- -->
<hr class="docutils" />
<div class="topic">
<p class="topic-title first">NEWS!!!</p>
<p>July 19, 2007</p>
<blockquote>
F2PY is now part of <a class="reference" href="http://numpy.scipy.org/">NumPy</a>. All the development and maintenance
of F2PY is carried out under NumPy SVN tree. See <a class="reference" href="http://www.scipy.org/F2py">F2PY</a> for more
information. If you need F2PY with Numeric or Numarray array support
then you must use the F2PY version found below.</blockquote>
<p>January 30, 2005</p>
<blockquote>
Latest F2PY release (version 2.45.241_1926).
New features: wrapping unsigned integers, support for <tt class="docutils literal"><span class="pre">.pyf.src</span></tt> template files,
callback arguments can now be CObjects, fortran objects, built-in functions.
Introduced <tt class="docutils literal"><span class="pre">intent(aux)</span></tt> attribute. Wrapped objects have <tt class="docutils literal"><span class="pre">_cpointer</span></tt>
attribute holding C pointer to wrapped functions or variables.
Many bug fixes and improvements, updated documentation.
<a class="reference" href="http://cens.ioc.ee/cgi-bin/cvsweb/python/f2py2e/docs/HISTORY.txt.diff?r1=1.163&amp;r2=1.137&amp;f=h">Differences with the previous release (version 2.43.239_1831)</a>.</blockquote>
<dl class="docutils">
<dt>October 4, 2004</dt>
<dd>F2PY bug fix release (version 2.43.239_1831).
Better support for 64-bit platforms.
Introduced <tt class="docutils literal"><span class="pre">--help-link</span></tt> and <tt class="docutils literal"><span class="pre">--link-&lt;resource&gt;</span></tt> options.
Bug fixes.
<a class="reference" href="http://cens.ioc.ee/cgi-bin/cvsweb/python/f2py2e/docs/HISTORY.txt.diff?r1=1.137&amp;r2=1.131&amp;f=h">Differences with the previous release (version 2.43.239_1806)</a>.</dd>
</dl>
<dl class="docutils">
<dt>September 25, 2004</dt>
<dd>Latest F2PY release (version 2.43.239_1806).
Support for <tt class="docutils literal"><span class="pre">ENTRY</span></tt> statement. New attributes:
<tt class="docutils literal"><span class="pre">intent(inplace)</span></tt>, <tt class="docutils literal"><span class="pre">intent(callback)</span></tt>. Supports Numarray 1.1.
Introduced <tt class="docutils literal"><span class="pre">-*-</span> <span class="pre">fix</span> <span class="pre">-*-</span></tt> header content. Improved <tt class="docutils literal"><span class="pre">PARAMETER</span></tt> support.
Documentation updates. <a class="reference" href="http://cens.ioc.ee/cgi-bin/cvsweb/python/f2py2e/docs/HISTORY.txt.diff?r1=1.131&amp;r2=1.98&amp;f=h">Differences with the previous release
(version 2.39.235-1693)</a>.</dd>
</dl>
<p><a class="reference" href="OLDNEWS.html">History of NEWS</a></p>
</div>
<hr class="docutils" />
<div class="contents topic">
<p class="topic-title first"><a id="contents" name="contents">Contents</a></p>
<ul class="simple">
<li><a class="reference" href="#introduction" id="id38" name="id38">Introduction</a><ul>
<li><a class="reference" href="#main-features" id="id39" name="id39">Main features</a></li>
</ul>
</li>
<li><a class="reference" href="#prerequisites" id="id40" name="id40">Prerequisites</a></li>
<li><a class="reference" href="#download" id="id41" name="id41">Download</a></li>
<li><a class="reference" href="#installation" id="id42" name="id42">Installation</a></li>
<li><a class="reference" href="#usage" id="id43" name="id43">Usage</a></li>
<li><a class="reference" href="#documentation" id="id44" name="id44">Documentation</a></li>
<li><a class="reference" href="#mailing-list" id="id45" name="id45">Mailing list</a></li>
<li><a class="reference" href="#cvs" id="id46" name="id46">CVS</a></li>
<li><a class="reference" href="#contributions" id="id47" name="id47">Contributions</a></li>
<li><a class="reference" href="#related-sites" id="id48" name="id48">Related sites</a></li>
</ul>
</div>
<div class="section">
<h1><a class="toc-backref" href="#id38" id="introduction" name="introduction">Introduction</a></h1>
<p>The purpose of the F2PY --<em>Fortran to Python interface generator</em>--
project is to provide connection between <a class="reference" href="http://www.python.org/">Python</a> and Fortran
languages. F2PY is a Python extension tool for creating Python C/API
modules from (handwritten or F2PY generated) signature files (or
directly from Fortran sources). The generated extension modules
facilitate:</p>
<ul class="simple">
<li>Calling Fortran 77/90/95, Fortran 90/95 module, and C functions from
Python.</li>
<li>Accessing Fortran 77 <tt class="docutils literal"><span class="pre">COMMON</span></tt> blocks and Fortran 90/95 module
data (including allocatable arrays) from Python.</li>
<li>Calling Python functions from Fortran or C (call-backs).</li>
<li>Automatically handling the difference in the data storage order of
multi-dimensional Fortran and Numerical Python (i.e. C) arrays.</li>
</ul>
<p>In addition, F2PY can build the generated extension modules to shared
libraries with one command. F2PY uses the <tt class="docutils literal"><span class="pre">scipy_distutils</span></tt> module
from <a class="reference" href="http://www.scipy.org/">SciPy</a> that supports number of major Fortran compilers.</p>
<!-- (see `COMPILERS.txt`_ for more information). -->
<p>F2PY generated extension modules depend on <a class="reference" href="http://www.numpy.org/">NumPy</a> package that
provides fast multi-dimensional array language facility to Python.</p>
<div class="section">
<h2><a class="toc-backref" href="#id39" id="main-features" name="main-features">Main features</a></h2>
<p>Here follows a more detailed list of F2PY features:</p>
<ul>
<li><p class="first">F2PY scans real Fortran codes to produce the so-called signature
files (.pyf files). The signature files contain all the information
(function names, arguments and their types, etc.)  that is needed to
construct Python bindings to Fortran (or C) functions.</p>
<p>The syntax of signature files is borrowed from the
Fortran 90/95 language specification and has some F2PY specific
extensions. The signature files can be modified to dictate how
Fortran (or C) programs are called from Python:</p>
<blockquote>
<ul class="simple">
<li>F2PY solves dependencies between arguments (this is relevant for
the order of initializing variables in extension modules).</li>
<li>Arguments can be specified to be optional or hidden that
simplifies calling Fortran programs from Python considerably.</li>
<li>In principle, one can design any Python signature for a given
Fortran function, e.g. change the order arguments, introduce
auxiliary arguments, hide the arguments, process the arguments
before passing to Fortran, return arguments as output of F2PY
generated functions, etc.</li>
</ul>
</blockquote>
</li>
<li><p class="first">F2PY automatically generates __doc__ strings (and optionally LaTeX
documentation) for extension modules.</p>
</li>
<li><p class="first">F2PY generated functions accept arbitrary (but sensible) Python
objects as arguments. The F2PY interface automatically takes care of
type-casting and handling of non-contiguous arrays.</p>
</li>
<li><p class="first">The following Fortran constructs are recognized by F2PY:</p>
<ul>
<li><p class="first">All basic Fortran types:</p>
<pre class="literal-block">
integer[ | *1 | *2 | *4 | *8 ], logical[ | *1 | *2 | *4 | *8 ]
integer*([ -1 | -2 | -4 | -8 ])
character[ | *(*) | *1 | *2 | *3 | ... ]
real[ | *4 | *8 | *16 ], double precision
complex[ | *8 | *16 | *32 ]
</pre>
<p>Negative <tt class="docutils literal"><span class="pre">integer</span></tt> kinds are used to wrap unsigned integers.</p>
</li>
<li><p class="first">Multi-dimensional arrays of all basic types with the following
dimension specifications:</p>
<pre class="literal-block">
&lt;dim&gt; | &lt;start&gt;:&lt;end&gt; | * | :
</pre>
</li>
<li><p class="first">Attributes and statements:</p>
<pre class="literal-block">
intent([ in | inout | out | hide | in,out | inout,out | c |
         copy | cache | callback | inplace | aux ])
dimension(&lt;dimspec&gt;)
common, parameter
allocatable
optional, required, external
depend([&lt;names&gt;])
check([&lt;C-booleanexpr&gt;])
note(&lt;LaTeX text&gt;)
usercode, callstatement, callprotoargument, threadsafe, fortranname
pymethoddef
entry
</pre>
</li>
</ul>
</li>
<li><p class="first">Because there are only little (and easily handleable) differences
between calling C and Fortran functions from F2PY generated
extension modules, then F2PY is also well suited for wrapping C
libraries to Python.</p>
</li>
<li><p class="first">Practice has shown that F2PY generated interfaces (to C or Fortran
functions) are less error prone and even more efficient than
handwritten extension modules. The F2PY generated interfaces are
easy to maintain and any future optimization of F2PY generated
interfaces transparently apply to extension modules by just
regenerating them with the latest version of F2PY.</p>
</li>
<li><p class="first"><a class="reference" href="usersguide/index.html">F2PY Users Guide and Reference Manual</a></p>
</li>
</ul>
</div>
</div>
<div class="section">
<h1><a class="toc-backref" href="#id40" id="prerequisites" name="prerequisites">Prerequisites</a></h1>
<p>F2PY requires the following software installed:</p>
<ul class="simple">
<li><a class="reference" href="http://www.python.org/">Python</a> (versions 1.5.2 or later; 2.1 and up are recommended).
You must have python-dev package installed.</li>
<li><a class="reference" href="http://www.numpy.org/">NumPy</a> (versions 13 or later; 20.x, 21.x, 22.x, 23.x are recommended)</li>
<li><a class="reference" href="http://www.stsci.edu/resources/software_hardware/numarray">Numarray</a> (version 0.9 and up), optional, partial support.</li>
<li>Scipy_distutils (version 0.2.2 and up are recommended) from <a class="reference" href="http://www.scipy.org/">SciPy</a>
project. Get it from Scipy CVS or download it below.</li>
</ul>
<p>Python 1.x users also need <a class="reference" href="http://www.python.org/sigs/distutils-sig/">distutils</a>.</p>
<p>Of course, to build extension modules, you'll need also working C
and/or Fortran compilers installed.</p>
</div>
<div class="section">
<h1><a class="toc-backref" href="#id41" id="download" name="download">Download</a></h1>
<p>You can download the sources for the latest F2PY and scipy_distutils
releases as:</p>
<ul class="simple">
<li><a class="reference" href="2.x/">2.x</a>/<a class="reference" href="2.x/F2PY-2-latest.tar.gz">F2PY-2-latest.tar.gz</a></li>
<li><a class="reference" href="2.x/">2.x</a>/<a class="reference" href="2.x/scipy_distutils-latest.tar.gz">scipy_distutils-latest.tar.gz</a></li>
</ul>
<p>Windows users might be interested in Win32 installer for F2PY and
Scipy_distutils (these installers are built using Python 2.3):</p>
<ul class="simple">
<li><a class="reference" href="2.x/">2.x</a>/<a class="reference" href="2.x/F2PY-2-latest.win32.exe">F2PY-2-latest.win32.exe</a></li>
<li><a class="reference" href="2.x/">2.x</a>/<a class="reference" href="2.x/scipy_distutils-latest.win32.exe">scipy_distutils-latest.win32.exe</a></li>
</ul>
<p>Older releases are also available in the directories
<a class="reference" href="rel-0.x">rel-0.x</a>, <a class="reference" href="rel-1.x">rel-1.x</a>, <a class="reference" href="rel-2.x">rel-2.x</a>, <a class="reference" href="rel-3.x">rel-3.x</a>, <a class="reference" href="rel-4.x">rel-4.x</a>, <a class="reference" href="rel-5.x">rel-5.x</a>,
if you need them.</p>
<p>Development version of F2PY from CVS is available as <a class="reference" href="http://cens.ioc.ee/cgi-bin/viewcvs.cgi/python/f2py2e/f2py2e.tar.gz?tarball=1">f2py2e.tar.gz</a>.</p>
<p>Debian Sid users can simply install <tt class="docutils literal"><span class="pre">python-f2py</span></tt> package.</p>
</div>
<div class="section">
<h1><a class="toc-backref" href="#id42" id="installation" name="installation">Installation</a></h1>
<p>Unpack the source file, change to directrory <tt class="docutils literal"><span class="pre">F2PY-?-???/</span></tt> and run
(you may need to become a root):</p>
<pre class="literal-block">
python setup.py install
</pre>
<p>The F2PY installation installs a Python package <tt class="docutils literal"><span class="pre">f2py2e</span></tt> to your
Python <tt class="docutils literal"><span class="pre">site-packages</span></tt> directory and a script <tt class="docutils literal"><span class="pre">f2py</span></tt> to your
Python executable path.</p>
<p>See also <a class="reference" href="FAQ.html#installation">Installation</a> section in <a class="reference" href="FAQ.html">F2PY FAQ</a>.</p>
<p>Similarly, to install <tt class="docutils literal"><span class="pre">scipy_distutils</span></tt>, unpack its tar-ball and run:</p>
<pre class="literal-block">
python setup.py install
</pre>
</div>
<div class="section">
<h1><a class="toc-backref" href="#id43" id="usage" name="usage">Usage</a></h1>
<p>To check if F2PY is installed correctly, run</p>
<pre class="literal-block">
f2py
</pre>
<p>without any arguments. This should print out the usage information of
the <tt class="docutils literal"><span class="pre">f2py</span></tt> program.</p>
<p>Next, try out the following three steps:</p>
<ol class="arabic">
<li><p class="first">Create a Fortran file <a class="reference" href="hello.f">hello.f</a> that contains:</p>
<pre class="literal-block">
C File hello.f
      subroutine foo (a)
      integer a
      print*, &quot;Hello from Fortran!&quot;
      print*, &quot;a=&quot;,a
      end
</pre>
</li>
</ol>
<ol class="arabic simple" start="2">
<li>Run</li>
</ol>
<blockquote>
<pre class="literal-block">
f2py -c -m hello hello.f
</pre>
<p>This will build an extension module <tt class="docutils literal"><span class="pre">hello.so</span></tt> (or <tt class="docutils literal"><span class="pre">hello.sl</span></tt>,
or <tt class="docutils literal"><span class="pre">hello.pyd</span></tt>, etc. depending on your platform) into the current
directory.</p>
</blockquote>
<ol class="arabic" start="3">
<li><p class="first">Now in Python try:</p>
<pre class="literal-block">
&gt;&gt;&gt; import hello
&gt;&gt;&gt; print hello.__doc__
&gt;&gt;&gt; print hello.foo.__doc__
&gt;&gt;&gt; hello.foo(4)
 Hello from Fortran!
 a= 4
&gt;&gt;&gt;
</pre>
</li>
</ol>
<p>If the above works, then you can try out more thorough
<a class="reference" href="FAQ.html#q-how-to-test-if-f2py-is-working-correctly">F2PY unit tests</a> and read the <a class="reference" href="usersguide/index.html">F2PY Users Guide and Reference Manual</a>.</p>
</div>
<div class="section">
<h1><a class="toc-backref" href="#id44" id="documentation" name="documentation">Documentation</a></h1>
<p>The documentation of the F2PY project is collected in <tt class="docutils literal"><span class="pre">f2py2e/docs/</span></tt>
directory. It contains the following documents:</p>
<dl class="docutils">
<dt><a class="reference" href="README.html">README.txt</a> (in <a class="reference" href="http://cens.ioc.ee/cgi-bin/cvsweb/python/f2py2e/docs/README.txt?rev=HEAD&amp;content-type=text/x-cvsweb-markup">CVS</a>)</dt>
<dd>The first thing to read about F2PY -- this document.</dd>
</dl>
<dl class="docutils">
<dt><a class="reference" href="usersguide/index.html">usersguide/index.txt</a>, <a class="reference" href="usersguide/f2py_usersguide.pdf">usersguide/f2py_usersguide.pdf</a></dt>
<dd>F2PY Users Guide and Reference Manual. Contains lots of examples.</dd>
<dt><a class="reference" href="FAQ.html">FAQ.txt</a> (in <a class="reference" href="http://cens.ioc.ee/cgi-bin/cvsweb/python/f2py2e/docs/FAQ.txt?rev=HEAD&amp;content-type=text/x-cvsweb-markup">CVS</a>)</dt>
<dd>F2PY Frequently Asked Questions.</dd>
</dl>
<dl class="docutils">
<dt><a class="reference" href="TESTING.html">TESTING.txt</a> (in <a class="reference" href="http://cens.ioc.ee/cgi-bin/cvsweb/python/f2py2e/docs/TESTING.txt?rev=HEAD&amp;content-type=text/x-cvsweb-markup">CVS</a>)</dt>
<dd>About F2PY testing site. What tests are available and how to run them.</dd>
</dl>
<dl class="docutils">
<dt><a class="reference" href="HISTORY.html">HISTORY.txt</a> (in <a class="reference" href="http://cens.ioc.ee/cgi-bin/cvsweb/python/f2py2e/docs/HISTORY.txt?rev=HEAD&amp;content-type=text/x-cvsweb-markup">CVS</a>)</dt>
<dd>A list of latest changes in F2PY. This is the most up-to-date
document on F2PY.</dd>
</dl>
<dl class="docutils">
<dt><a class="reference" href="THANKS.html">THANKS.txt</a></dt>
<dd>Acknowledgments.</dd>
</dl>
<!-- `COMPILERS.txt`_
Compiler and platform specific notes. -->
</div>
<div class="section">
<h1><a class="toc-backref" href="#id45" id="mailing-list" name="mailing-list">Mailing list</a></h1>
<p>A mailing list <a class="reference" href="mailto:f2py-users&#64;cens.ioc.ee">f2py-users&#64;cens.ioc.ee</a> is open for F2PY releated
discussion/questions/etc.</p>
<ul class="simple">
<li><a class="reference" href="http://cens.ioc.ee/mailman/listinfo/f2py-users">Subscribe..</a></li>
<li><a class="reference" href="http://cens.ioc.ee/pipermail/f2py-users">Archives..</a></li>
</ul>
</div>
<div class="section">
<h1><a class="toc-backref" href="#id46" id="cvs" name="cvs">CVS</a></h1>
<p>F2PY is being developed under <a class="reference" href="http://www.cvshome.org/">CVS</a>. The CVS version of F2PY can be
obtained as follows:</p>
<ol class="arabic">
<li><p class="first">First you need to login (the password is <tt class="docutils literal"><span class="pre">guest</span></tt>):</p>
<pre class="literal-block">
cvs -d :pserver:anonymous&#64;cens.ioc.ee:/home/cvs login
</pre>
</li>
<li><p class="first">and then do the checkout:</p>
<pre class="literal-block">
cvs -z6 -d :pserver:anonymous&#64;cens.ioc.ee:/home/cvs checkout f2py2e
</pre>
</li>
<li><p class="first">You can update your local F2PY tree <tt class="docutils literal"><span class="pre">f2py2e/</span></tt> by executing:</p>
<pre class="literal-block">
cvs -z6 update -P -d
</pre>
</li>
</ol>
<p>You can browse the <a class="reference" href="http://cens.ioc.ee/cgi-bin/viewcvs.cgi/python/f2py2e/">F2PY CVS</a> repository.</p>
</div>
<div class="section">
<h1><a class="toc-backref" href="#id47" id="contributions" name="contributions">Contributions</a></h1>
<ul class="simple">
<li><a class="reference" href="http://fubphpc.tu-graz.ac.at/~pierre/f2py_tutorial.tar.gz">A short introduction to F2PY</a> by Pierre Schnizer.</li>
<li><a class="reference" href="http://cens.ioc.ee/pipermail/f2py-users/2003-April/000472.html">F2PY notes</a> by Fernando Perez.</li>
<li><a class="reference" href="http://jrfonseca.dyndns.org/debian/">Debian packages of F2PY</a> by José Fonseca. [OBSOLETE, Debian Sid
ships python-f2py package]</li>
</ul>
</div>
<div class="section">
<h1><a class="toc-backref" href="#id48" id="related-sites" name="related-sites">Related sites</a></h1>
<ul class="simple">
<li><a class="reference" href="http://www.numpy.org/">Numerical Python</a> -- adds a fast array facility to the Python language.</li>
<li><a class="reference" href="http://pyfortran.sourceforge.net/">Pyfort</a> -- A Python-Fortran connection tool.</li>
<li><a class="reference" href="http://www.scipy.org/">SciPy</a> -- An open source library of scientific tools for Python.</li>
<li><a class="reference" href="http://starship.python.net/crew/hinsen/scientific.html">Scientific Python</a> -- A collection of Python modules that are
useful for scientific computing.</li>
<li><a class="reference" href="http://www.fortran.com/fortran/">The Fortran Company</a> -- A place to find products, services, and general
information related to the Fortran programming language.</li>
<li><a class="reference" href="http://www.fortran.com/fortran/F77_std/rjcnf.html">American National Standard Programming Language FORTRAN ANSI(R) X3.9-1978</a></li>
<li><a class="reference" href="http://www.j3-fortran.org/">J3</a> -- The US Fortran standards committee.</li>
<li><a class="reference" href="http://www.swig.org/">SWIG</a> -- A software development tool that connects programs written
in C and C++ with a variety of high-level programming languages.</li>
<li><a class="reference" href="http://www.mathtools.net/">Mathtools.net</a> -- A technical computing portal for all scientific
and engineering needs.</li>
</ul>
<!-- References
========== -->
<!-- Local Variables:
mode: indented-text
indent-tabs-mode: nil
sentence-end-double-space: t
fill-column: 70
End: -->
</div>
</div>
</body>
</html>
