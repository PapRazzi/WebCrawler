<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<!--
______  _______               ______                _____        
___  / / /___(_)___   _______ ___  /______ _______ ____(_)_______
__  /_/ / __  / __ | / /_  _ \__  / _  __ \__  __ `/__  / _  ___/
_  __  /  _  /  __ |/ / /  __/_  /  / /_/ /_  /_/ / _  /  / /__  
/_/ /_/   /_/   _____/  \___/ /_/   \____/ _\__, /  /_/   \___/  
                                           /____/                
-->

<head>
	<meta http-equiv="content-type" content="text/html;charset=UTF-8" />
	<title>Building Ruby, Rails, Subversion, Mongrel, and MySQL on Mac OS X</title>                                        
	<meta name="description" content="Hivelogic is tech, code, design, and geekery, written by your Internet Pal, Dan Benjamin." />
	<meta name="keywords" content="hivelogic, dan, benjamin, hivelogic, danbenjamin" />
	<meta name="author" content="Dan Benjamin" />
	<meta name="copyright" content="Copyright (c) 2000-2011 Dan Benjamin" />
	<link rel="alternate" type="application/rss+xml" title="Hivelogic RSS Feed" href="http://feeds.feedburner.com/hivelogic" />
	<link rel="apple-touch-icon" href="/apple-touch-icon.png" />
	<link href="/stylesheets/styles.css" media="screen" rel="stylesheet" type="text/css" media="screen, projection" />
	<script type="text/javascript" src="http://use.typekit.com/zrq6xaf.js"></script>
	<script type="text/javascript">try{Typekit.load();}catch(e){}</script>
</head>

<body>
	
<div id="header" class="box">
	<a href="/" title="Hivelogic"><img src="/images/hivelogic.png" height="60" width="395" alt="Hivelogic"/></a>
</div>

<div id="main" class="box">

	<div id="content">

<div class="article" id="/articles/ruby-rails-mongrel-mysql-osx">
  <h2>Building Ruby, Rails, Subversion, Mongrel, and MySQL on Mac OS X</h2>
  <p class="byline">Friday, 02 February 2007 &bull; <a href="/articles/ruby-rails-mongrel-mysql-osx" title="Permanent link for this article">Permalink</a></p>
  <p><strong>Update for Leopard Users:</strong> <a href="/articles/view/ruby-rails-leopard" title="Installing Ruby, Ruby on Rails, RubyGems, and Mongrel">The Ruby on Rails for Leopard installation instructions can be found here</a>.</p>
 <p>This article is a major update to the older (but tried-and-true) post, <a href="/narrative/articles/ruby_rails_lighttpd_mysql_tiger">Building Ruby, Rails, LightTPD, and MySQL on Tiger</a>. Both Ruby, Rails, and their underlying infrastructure have come a long way in recent months, and this article will get you to a leaner, meaner Rails install in less time using fewer steps.</p>
 <p>This article is updated on a regular basis as new versions of the software are released.</p>
 <p>What follows are instructions for building and installing the following applications on Mac <span class="caps">OS X 10</span>.4 (Tiger) along with their supportive software. I&#8217;ve been told that these steps work just fine on Mac <span class="caps">OS X 10</span>.3 (Panther) as well, but I haven&#8217;t verified this myself, and your mileage may vary.</p>
<ul>
 <li><a href="http://www.ruby-lang.org/">Ruby</a></li>
  <li><a href="http://rubyonrails.com/">Ruby on Rails</a></li>
  <li><a href="http://mongrel.rubyforge.org/">Mongrel</a></li>
  <li><a href="http://subversion.tigris.org/">Subversion</a></li>
  <li><a href="http://mysql.org/">MySQL</a></li>
</ul>
 <p>Compiling and installing these tools this way is well worth the effort, as the end result delivers an easy-to-upgrade, system-independent, stand-alone development platform that is impervious to potential problems that can be caused by system updates, operating system upgrades, etc.</p>
 <p>By rolling our own from source this way, we also have full control over our environment. We know what&#8217;s installed and where, what version we&#8217;ve used, where it came from, and there&#8217;s no dependence on an external ports system and the breakage or issues that come from relying on others to manage our software.</p>
 <p>These issues and additional background information about <em>why</em> one might roll their own tools in this fashion are detailed in the article, <a href="/narrative/articles/using_usr_local">Using /usr/local/</a>, which could be considered a prerequisite for this task.</p>
 <h3>About (Not) Removing Old Versions</h3>
 <p>One of the great things about building these particular apps from source like this is that we don&#8217;t need to worry about removing older versions. When we build the new ones, they will replace the older versions as needed, and your system will be up to date with just the latest, greatest software.</p>
 <h3>The Concept</h3>
 <p>Basically, what we&#8217;re going to do here is download a bunch of open-source tools (some of which rely upon each other to work), configure them, compile them, and install them, one by one, until we have everything we need for a Mac <span class="caps">OS X</span> machine to run Ruby on Rails.</p>
 <h3>What&#8217;s Needed</h3>
 <p>A few things are needed to get this going:</p>
<ol>
 <li>Mac <span class="caps">OS X 10</span>.4 (and maybe 10.3)</li>
  <li>Xcode 2.4 or newer (this compiles the apps for us)</li>
  <li>Willingness to type commands into the Terminal application exactly as they appear here (cut-n-paste works too)</li>
  <li>A tasty beverage to enjoy while things compile</li>
</ol>
 <p><strong>Note:</strong> Xcode is not installed by default on new Macs, but can be found on the Mac <span class="caps">OS X</span> install <span class="caps"><span class="caps"><span class="caps">DVD</span></span></span>/CD, or downloaded from <a href="http://developer.apple.com">Apple&#8217;s Developer Connection</a> free of charge.</p>
 <p><strong>Another Note:</strong> These instructions assume that you&#8217;re using <a href="http://www.gnu.org/software/bash/">bash</a>, the default <span class="caps"><span class="caps"><span class="caps">UNIX</span></span></span> shell for Mac <span class="caps">OS X 10</span>.4. If you don&#8217;t know what this means and haven&#8217;t done anything very special to change this, you&#8217;re fine. If you&#8217;ve taken specific steps to change the default shell to something other than bash (like <a href="http://www.tcsh.org/Welcome">tcsh</a> for example), you&#8217;ll need to be figure out the right files and syntax to use when setting paths and environment variables, or switch back to bash. Sorry about that.</p>
 <h3>A Quick Warning</h3>
 <p>While it&#8217;s unlikely anything we do here might do any kind of damage to the system, it&#8217;s good advice to have a current backup of everything, just in case. I don&#8217;t take any responsibility for anything that results from following these instructions (good or bad). You&#8217;re following these instructions at your own risk.</p>
 <h3>A Note about <code>sudo</code></h3>
 <p>We&#8217;ll be using the command <code>sudo</code> quite a bit, and lots of people wonder what it does. Put simply, the <code>sudo</code> command allows a user (in this case, <em>you</em>) to execute a command as the superuser, allowing you to become the omnipotent master of your computer one command at a time.</p>
 <p>With great power comes great responsibility, so Mac <span class="caps">OS X</span> may prompt you for your password prior to executing your command. It may do this only once, or several times throughout this process. Just re-enter your password as needed.</p>
 <h3>A Terminal Situation</h3>
 <p>Open the Terminal application. It can be found in the <code>/Applications/Utilities</code> folder.</p>
 <p>Each of the lines below appearing in monospaced type should be entered into Terminal, and be followed by the Return key. But everybody knew that already.</p>
 <h3>Paths</h3>
 <p><strong><em>Do not skip this step! Most everything else will fail if you do.</em></strong></p>
 <p>Mac <span class="caps">OS X</span>, like other <span class="caps"><span class="caps"><span class="caps">UNIX</span></span></span> systems, uses something called a <em>path</em> to determine where it should look for applications on the command line (that is, when you&#8217;re using the Terminal app). The path is actually an environment variable, set by a special file that&#8217;s automatically executed when you open a new Terminal window.</p>
 <p>We need to make sure that our path is set to look for files in <code>/usr/local</code> (the place where we&#8217;ll be installing the tools) before looking anywhere else. This is important.</p>
 <p>To see if the path has been set properly, we can check the contents of the <code>.bash_login</code> file (the special file hidden in our home folder) for a <code>PATH</code> line using a text editor.  <a href="http://macromates.com/">TextMate</a>, <a href="http://www.barebones.com/products/textwrangler/index.shtml">TextWrangler</a>, <a href="http://www.barebones.com/products/bbedit/index.shtml">BBEdit</a>, and <a href="http://en.wikipedia.org/wiki/Vi">vi</a> are all perfectly good options. To open the file with TextMate, for example, we can type:</p>


<pre>
mate ~/.bash_login
</pre>
 <p>This will open the file if it already exists, or open a blank file if it doesn&#8217;t.  Add the following line <strong>at the very end of the file</strong>:</p>


<pre>
export PATH="/usr/local/bin:/usr/local/sbin:/usr/local/mysql/bin:$PATH" 
</pre>
 <p>Now save and close the file.</p>
 <p>It doesn&#8217;t matter how many other lines there are in the file, or what they say or do. Just make sure that this line comes <em>last</em> and you should be fine.</p>
 <p>To make sure the changes are picked up correctly, we now need to execute the file with the following command:</p>


<pre>
. ~/.bash_login
</pre>
 <p>It&#8217;s likely there will be no response from the shell here, just the prompt, but that&#8217;s OK, the changes have been picked up and we&#8217;re ready to move on.</p>
 <p>You can also close your Terminal and open a new one instead if you&#8217;d like.</p>
 <p><strong>Geek Note:</strong> You may have noticed that I&#8217;ve added MySQL to the path in the line above. That&#8217;s because most users will be installing MySQL later in this tutorial. If you&#8217;re the type to want to use something like SQLite or PostGreSQL as your database instead of MySQL, you can feel free to omit the <code>/usr/local/mysql/bin:</code> bit from the line above, and replace it with the path to the database of your choice. If this note doesn&#8217;t make sense to you, even if you <em>don&#8217;t</em> plan to install MySQL later, just keep on going &#8230; the extra bit in the path statement won&#8217;t affect you at all.</p>
 <h3>Setting Up</h3>
 <p>I like to create a folder to contain all of the downloaded files and their respective build folders. I tend to keep this folder around indefinitely. Source code doesn&#8217;t take up much space, and it&#8217;s useful to refer back to later to remind yourself of previous installation details or techniques, installed versions, for a fast install at a later time, or in case you want to <em>uninstall</em> something.</p>
 <p>For these examples, we&#8217;ll create a folder called <code>src</code> in the <code>/usr/local</code> section of the filesystem, and change directories into that folder. It will be our workspace for everything we do here:</p>


<pre>
sudo mkdir -p /usr/local/src
sudo chgrp admin /usr/local/src
sudo chmod -R 775 /usr/local/src
cd /usr/local/src
</pre>
 <p>You&#8217;ll download and compile everything in this new folder.</p>
 <h3>Ruby</h3>
 <p>Now we&#8217;re ready to start the real work.  Just type (or cut-n-paste) each one of the following lines into Terminal, one by one. When one line finishes (some will take a while and dump a lot of information to the screen), enter the next one.</p>
 <p>As mentioned above, the first time you run the <code>sudo</code> command (and possible again later), you may be prompted for a password. Just enter your regular password here, and the process will continue.</p>
 <p>We&#8217;ll start off with Ruby, but before we can compile Ruby itself, we&#8217;ll build a supportive application called <code>readline</code>. The commands below handle downloading, unzipping, configuring, compiling, and finally installing the code. This &#8220;pattern&#8221; will become more familiar as you move through the install step by step.</p>


<pre>
curl -O ftp://ftp.gnu.org/gnu/readline/readline-5.1.tar.gz
tar xzvf readline-5.1.tar.gz
cd readline-5.1
./configure --prefix=/usr/local
make
sudo make install
cd ..
</pre>
 <p>If you get an error like the one below after typing the <code>configure</code> command:</p>


<pre>
checking whether make sets $(MAKE)... no
checking for gcc... no
checking for cc... no
checking for cc... no
checking for cl... no
configure: error: no acceptable C compiler found in $PATH
</pre>
 <p>This means that you <strong>did not follow the instructions</strong> and don&#8217;t have Xcode installed.</p>
 <p>If you saw lots of text fly by but didn&#8217;t get that error, it means that everything went well, and we can move on to building and installing Ruby itself.</p>


<pre>
curl -O ftp://ftp.ruby-lang.org/pub/ruby/1.8/ruby-1.8.6.tar.gz
tar xzvf ruby-1.8.6.tar.gz
cd ruby-1.8.6
./configure --prefix=/usr/local --enable-pthread --with-readline-dir=/usr/local --enable-shared
make
sudo make install
sudo make install-doc
cd ..
</pre>
 <p>If you saw lots of text fly by but didn&#8217;t get that error, it means that we should now have a brand new Ruby installed.</p>
 <p>We can verify this (as well as a correct path setting) by typing the following command:</p>


<pre>
ruby -v
</pre>
 <p>You should see something like this:</p>


<pre>
ruby 1.8.6 (2007-03-13 patchlevel 0) [i686-darwin8.9.1]
</pre>
 <p>Don&#8217;t worry about the text in the parenthesis or brackets, those just provide detail about your system architecture which isn&#8217;t important here. What <em>is</em> important is that you see <code>ruby 1.8.6</code>. This means you&#8217;ve got the new version of Ruby installed and in your path, and you&#8217;re good to go.</p>
 <p>If you see something like this:</p>


<pre>
ruby 1.8.2 (2004-12-25)
</pre>
 <p>Then either your install failed, or you didn&#8217;t correctly set your path in the beginning (maybe you didn&#8217;t reload your <code>.bash_login</code> script or restart Terminal). Go back and check your work.</p>
 <h3>RubyGems</h3>
 <p>RubyGems is a handy command-line tool for managing the installation of Ruby packages, like Rails and Mongrel.</p>


<pre>
curl -O http://files.rubyforge.mmmultiworks.com/rubygems/rubygems-0.9.2.tgz
tar xzvf rubygems-0.9.2.tgz
cd rubygems-0.9.2
sudo /usr/local/bin/ruby setup.rb
cd ..
</pre>
 <h3>Ruby on Rails</h3>
 <p>With RubyGems installed, Rails is a simple, one-line install:</p>


<pre>
sudo gem install rails --include-dependencies
</pre>
 <p>If you see an error message like this:</p>


<pre>
/usr/local/bin/gem:3:in `require': No such file to load -- rubygems (LoadError)
from /usr/local/bin/gem:3
</pre>
 <p>It means you didn&#8217;t set your path as instructed in the very first step. Go back to the beginning and run that step again, then retry this step.</p>
 <h3>Mongrel</h3>
 <p>Mongrel is a fast, stand-alone <span class="caps"><span class="caps"><span class="caps">HTTP</span></span></span> library and server for Ruby. It allows you to run your Rails applications without having to compile or use other applications (like FastCGI, <span class="caps"><span class="caps"><span class="caps">SCGI</span></span></span>, LightTPD, or Apache).</p>
 <p>Even better, Mongrel is also a gem. Type this command:</p>


<pre>
sudo gem install mongrel --include-dependencies
</pre>
 <p>You&#8217;ll be prompted to select the appropriate gem for your platform, and you&#8217;ll be shown a list something like this one:</p>


<pre>
Select which gem to install for your platform
 1. mongrel 1.0.1 (ruby)
 2. mongrel 1.0.1 (mswin32)
 3. mongrel 1.0 (mswin32)
 4. mongrel 1.0 (ruby)
 5. Skip this gem
 6. Cancel installation
</pre>
 <p>Although version numbers may be different, you should always select the one closest to the top of the list that ends with &#8220;(ruby)&#8221; &#8230; this is usually the first option. Just type the number and press enter.</p>
 <h3>Subversion (Optional)</h3>
 <p>Subversion is an open-source version control system. It remembers every change ever made to the files and directories in your projects. This allows you to recover older versions of your data, or examine the history of how your data changed. You can read more about Subversion (svn) in the online <a href="http://svnbook.red-bean.com">Subversion book</a>.</p>
 <p>While it&#8217;s not mandatory to have svn running in order to use Rails, it&#8217;s highly recommended. It&#8217;s used by the Rails team for distribution management, by most web hosts for deployment (via Capistrano), and by most Rails developers to manage their code.</p>


<pre>
curl -O http://subversion.tigris.org/downloads/subversion-1.4.3.tar.gz
curl -O http://subversion.tigris.org/downloads/subversion-deps-1.4.3.tar.gz
tar xzvf subversion-1.4.3.tar.gz
tar xzvf subversion-deps-1.4.3.tar.gz
cd subversion-1.4.3
./configure --prefix=/usr/local --with-openssl --with-ssl --with-zlib
make
sudo make install
cd ..
</pre>
 <h3>Capistrano</h3>
 <p>Capistrano is a utility which may be used to automate the deployment of your Rails applications. Many Rails applications and webhosts require it, and while this is technically an optional step, it&#8217;s simple, fast, and highly recommended. You can get the latest version of this gem like this:</p>


<pre>
sudo gem install capistrano --include-dependencies
</pre>
 <p>I also recommend installing <a href="http://raa.ruby-lang.org/project/ruby-termios/">termios</a>, a gem that&#8217;s a wrapper for the <span class="caps"><span class="caps"><span class="caps">UNIX</span></span></span> <code>termios</code> command, which will prevent passwords you enter in Capistrano from being displayed in your Terminal for all to see.</p>


<pre>
sudo gem install termios --include-dependencies
</pre>
 <p>Technically, you could stop right here. But most Rails applications need a database  &#8230;</p>
 <h3>MySQL</h3>
 <p>While it&#8217;s possible to compile and install MySQL ourselves, using the Mac <span class="caps">OS X</span> MySQL package is actually advantageous.  Not only is the package-installer much faster and easier, but it includes a handy startup item and a preference panel, and the binary is tuned by the MySQL team for Mac <span class="caps">OS X</span>.</p>
 <p>Even better, the package installs MySQL right into the <code>/usr/local/</code> folder, just like it should!</p>
 <p>The install still requires a few steps:</p>
<ol>
 <li>Download the <a href="http://mysql.he.net/Downloads/MySQL-5.0/mysql-5.0.37-osx10.4-powerpc.dmg">MySQL 5.0 package for <span class="caps">OS X <span class="caps"><span class="caps">PPC</span></span></span></a> or the <a href="http://mysql.he.net/Downloads/MySQL-5.0/mysql-5.0.41-osx10.4-i686.dmg">MySQL 5.0 package for <span class="caps">OS X</span> Intel</a></li>
  <li>Double-click the drive image to mount it</li>
  <li>Locate the MySQL installer (a file named something like <code>mysql-5.0.37-osx10.4-i686.pkg</code>) and run it, authenticating as needed</li>
  <li>Double-click <code>MySQLStartupItem.pkg</code>, authenticate, and let it install</li>
  <li>Double-click <code>MySQL.prefPane</code> and install it, deciding whether to make it available to just the current user, or for all system users</li>
</ol>
 <p>Once the install is complete, start the MySQL server using the newly-installed control panel.</p>
 <p><strong>Note:</strong> MySQL installs with a default user of <code>root</code> using no password. If you care about the privacy of your data or computer, please read this page about <a href="http://dev.mysql.com/doc/refman/4.1/en/user-names.html">MySQL usernames and passwords</a> and set a good one.</p>
 <h3>MySQL Native Bindings Gem (Optional)</h3>
 <p>This step is an optional one, but the <a href="http://weblog.rubyonrails.com/2005/10/30/get-10-15-more-performance-with-mysql-rails">performance gains</a> seem to make it worth the extra step.</p>
 <p>We start with a command to install the gem:</p>


<pre>
sudo gem install mysql -- --with-mysql-dir=/usr/local/mysql
</pre>
 <p>Just like the Mongrel install, you might see a prompt asking you which gem to install:</p>


<pre>
Select which gem to install for your platform
1. mysql 2.7.3 (mswin32)
2. mysql 2.7.1 (mswin32)
3. mysql 2.7 (ruby)
4. mysql 2.6 (ruby)
5. Skip this gem
6. Cancel installation
</pre>
 <p>Again, just like the Mongrel install, we&#8217;ll want to pick the option closest to the top that ends in &#8220;(ruby)&#8221;. In the example above, we&#8217;d want to select option 3.</p>
 <p>You&#8217;ll see some text scroll by and when it&#8217;s done, you&#8217;ll have built native MySQL bindings, which should help make database operations a bit faster.</p>
 <h3>Fix MySQL</h3>
 <p>There&#8217;s an issue with the current version of MySQL and the latest Ruby. Fortunately, this is easily fixed with the following command in Terminal:</p>


<pre>
sudo install_name_tool -change /usr/local/mysql/lib/mysql/libmysqlclient.15.dylib /usr/local/mysql/lib/libmysqlclient.15.dylib /usr/local/lib/ruby/gems/1.8/gems/mysql-2.7/lib/mysql.bundle
</pre>
 <p>You may be prompted to re-enter your password when you run it.</p>
 <h3>We&#8217;re Done</h3>
 <p>Congratulations, you now have a custom-built, properly located installation of Ruby, Ruby on Rails, MySQL, Mongrel, and Capistrano!</p>
 <p>If you&#8217;re new to Rails and just want to create a sample app to see this all working, try this:</p>


<pre>
rails testapp
cd testapp
script/server
</pre>
 <p>This will create a basic Rails app in a folder called <code>testapp</code> in your current folder (probably <code>/usr/local/src</code> if you&#8217;re doing this where the last step left off).</p>
 <p>If all goes well, you&#8217;ll get some output that looks like this:</p>


<pre>
=&amp;amp;gt; Booting Mongrel (use 'script/server webrick' to force WEBrick)
=&amp;amp;gt; Rails application starting on http://0.0.0.0:3000
=&amp;amp;gt; Call with -d to detach
=&amp;amp;gt; Ctrl-C to shutdown server
** Starting Mongrel listening at 0.0.0.0:3000
** Starting Rails with development environment...
** Rails loaded.
** Loading any Rails specific GemPlugins
** Signals ready.  TERM =&amp;amp;gt; stop.  USR2 =&amp;amp;gt; restart.  INT =&amp;amp;gt; stop (no restart).
** Rails signals registered.  HUP =&amp;amp;gt; reload (without restart).  It might not work well.
** Mongrel available at 0.0.0.0:3000
** Use CTRL-C to stop.
</pre>
 <p>You can now check out your new app by clicking or pasting this link in your browser of choice: <a href="http://localhost:3000">http://localhost:3000</a></p>
 <h3>What Else?</h3>
 <p>To do any real work with your new app, you&#8217;ll want to create a database for it. The Rails convention is that the database will take the same name as the name you specified when the app was created (in this case, &#8220;testapp&#8221;).</p>
 <p>You&#8217;ll need to first start up MySQL, and then create a database. While you can start MySQL using the control panel you installed earlier, it can also be started using the command line:</p>


<pre>
sudo /Library/StartupItems/MySQLCOM/MySQLCOM start
</pre>
 <p>You won&#8217;t have to run this command again, because the startup item you installed for MySQL will make sure it&#8217;s running the next time you boot your Mac. With MySQL running, you can create a new database for the test application:</p>


<pre>
mysqladmin -uroot create testapp_development
</pre>
 <p>If you created a password for MySQL, you&#8217;ll need to add the <code>-p</code> option to the command above and you&#8217;ll be prompted for your password.</p>
 <p>The rest is up to you. Good luck, and have fun with Rails!</p>
</div>

<h4 class="more">
  <a href="/archive" title="Archive of articles written since 2000">More articles in the Archive &rarr;</a>
</h4>

</div>

<div id="sidebar">


	<div id="nav">
		<ul>
			<li><a href="/">Home</a></li>
			<li><a href="/archive">Archive</a></li>
			<li><a href="/contact">Contact</a></li>
			<li><a href="/about">About</a></li>
		  	<li><a href="/enkoder">Enkoder</a></li>
			<li><a href="http://feeds.feedburner.com/hivelogic">RSS</a></li>
			<li><a href="http://twitter.com/danbenjamin">Twitter</a></li>
			<li><a href="https://plus.google.com/115054901319079500672/posts" title="Dan Benjamin on Google+">Google+</a></li>
		</ul>
	</div>

	<p class="mini-text">
		<a href="http://decknetwork.net/">Ads via The Deck</a>
	</p>
	<div id="the-deck">
		<script type="text/javascript">
		//<![CDATA[
		(function(id) {
		 document.write('<script type="text/javascript" src="' +
		   'http://connect.decknetwork.net/deck' + id + '_js.php?' +
		   (new Date().getTime()) + '"></' + 'script>');
		})("HL");
		//]]>
		</script>
	</div>

  <script type="text/javascript" src="http://www.authenticjobs.com/js/jobs-json-r.js"></script>
  <script type="text/javascript">
    window.onload = function() {
			str = ''
      for (var i=0; i<1; i++) {
        str += "<p>" + jobs.jobs[i].Company + " needs a <a href=\"" + jobs.jobs[i].URL + "\"> " + jobs.jobs[i].Title + "</a> in " + jobs.jobs[i].Location + "</p>";
      }        
	    document.getElementById("jobs").innerHTML = str;        
    }
  </script>

	<p class="mini-text"><a href="http://www.authenticjobs.com">Find a Job</a></p>
	<div id="authentic-jobs">
		<a href="http://www.authenticjobs.com"><img src="/images/aj-hiring.png" id="authentic-sign" height="48" width="70" /></a>
		<div id="jobs"></div>
	</div>

</div>


<div id="footer">
	<p>Tech, code, design, and geekery. Copyright &copy; 2000-2012 by <a href="http://danbenjamin.com" title="Dan Benjamin">Dan Benjamin</a>. All Rights Reserved. Hosted by <a href="http://joyent.com" title="Joyent">Joyent</a>.</p>
</div>

<!-- google analytics -->
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript">
try {
var pageTracker = _gat._getTracker("UA-6586200-1");
pageTracker._trackPageview();
} catch(err) {}</script>
<!-- end google analytics -->


</body>
</html>

