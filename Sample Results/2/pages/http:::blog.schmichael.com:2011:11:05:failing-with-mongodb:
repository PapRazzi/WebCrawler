<!DOCTYPE html>
<html dir="ltr" lang="en-US">
<head>
<meta charset="UTF-8" />
<title>Failing with MongoDB | schmichael&#039;s blog</title>
<link rel="profile" href="http://gmpg.org/xfn/11" />
<link rel="stylesheet" type="text/css" media="all" href="http://blog.schmichael.com/wp-content/themes/twentyten/style.css" />
<link rel="pingback" href="http://blog.schmichael.com/xmlrpc.php" />
<script type="text/javascript">
	window.google_analytics_uacct = "UA-3573344-1";
</script>
<link rel="alternate" type="application/rss+xml" title="schmichael&#039;s blog &raquo; Feed" href="http://blog.schmichael.com/feed/" />
<link rel="alternate" type="application/rss+xml" title="schmichael&#039;s blog &raquo; Comments Feed" href="http://blog.schmichael.com/comments/feed/" />

			<script type="text/javascript">//<![CDATA[
			// Google Analytics for WordPress by Yoast v4.2.7 | http://yoast.com/wordpress/google-analytics/
			var _gaq = _gaq || [];
			_gaq.push(['_setAccount', 'UA-3573344-1']);
				</script><script src="http://blog.schmichael.com/wp-content/plugins/google-analytics-for-wordpress/custom_se_async.js" type="text/javascript"></script>
<script type="text/javascript">			_gaq.push(['_setCustomVar',1,'tags','mongodb',3],['_setCustomVar',2,'year','2011',3],['_trackPageview']);
			(function () {
				var ga = document.createElement('script');
				ga.type = 'text/javascript';
				ga.async = true;
				ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
				var s = document.getElementsByTagName('script')[0];
				s.parentNode.insertBefore(ga, s);
			})();
			//]]></script>
			<link rel="alternate" type="application/rss+xml" title="schmichael&#039;s blog &raquo; Failing with MongoDB Comments Feed" href="http://blog.schmichael.com/2011/11/05/failing-with-mongodb/feed/" />
<link rel='stylesheet' id='wp-syntax-css-css'  href='http://blog.schmichael.com/wp-content/plugins/wp-syntax/wp-syntax.css?ver=3.4.2' type='text/css' media='all' />
<script type='text/javascript' src='http://blog.schmichael.com/wp-includes/js/jquery/jquery.js?ver=1.7.2'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://blog.schmichael.com/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://blog.schmichael.com/wp-includes/wlwmanifest.xml" /> 
<link rel='prev' title='MemoryMapFile Convenience Class for Python' href='http://blog.schmichael.com/2011/09/05/memorymapfile-convenience-class-for-python/' />
<link rel='next' title='Building Python 2.6.8 on Ubuntu 12.04' href='http://blog.schmichael.com/2012/05/29/building-python-2-6-8-on-ubuntu-12-04/' />
<meta name="generator" content="WordPress 3.4.2, fitted with the WordPress Mobile Pack 1.2.5" />
<link rel='canonical' href='http://blog.schmichael.com/2011/11/05/failing-with-mongodb/' />
<link rel='shortlink' href='http://blog.schmichael.com/?p=979' />
</head>

<body class="single single-post postid-979 single-format-standard">
<div id="wrapper" class="hfeed">
	<div id="header">
		<div id="masthead">
			<div id="branding" role="banner">
								<div id="site-title">
					<span>
						<a href="http://blog.schmichael.com/" title="schmichael&#039;s blog" rel="home">schmichael&#039;s blog</a>
					</span>
				</div>
				<div id="site-description">good good study, day day up</div>

										<img src="http://blog.schmichael.com/wp-content/uploads/2010/07/water-header.jpg" width="940" height="198" alt="" />
								</div><!-- #branding -->

			<div id="access" role="navigation">
			  				<div class="skip-link screen-reader-text"><a href="#content" title="Skip to content">Skip to content</a></div>
								<div class="menu"><ul><li ><a href="http://blog.schmichael.com/" title="Home">Home</a></li><li class="page_item page-item-238"><a href="http://blog.schmichael.com/about-me/">About Me</a></li></ul></div>
			</div><!-- #access -->
		</div><!-- #masthead -->
	</div><!-- #header -->

	<div id="main">

		<div id="container">
			<div id="content" role="main">

			

				<div id="nav-above" class="navigation">
					<div class="nav-previous"><a href="http://blog.schmichael.com/2011/09/05/memorymapfile-convenience-class-for-python/" rel="prev"><span class="meta-nav">&larr;</span> MemoryMapFile Convenience Class for Python</a></div>
					<div class="nav-next"><a href="http://blog.schmichael.com/2012/05/29/building-python-2-6-8-on-ubuntu-12-04/" rel="next">Building Python 2.6.8 on Ubuntu 12.04 <span class="meta-nav">&rarr;</span></a></div>
				</div><!-- #nav-above -->

				<div id="post-979" class="post-979 post type-post status-publish format-standard hentry category-open-source category-technology tag-mongodb">
					<h1 class="entry-title">Failing with MongoDB</h1>

					<div class="entry-meta">
						<span class="meta-prep meta-prep-author">Posted on</span> <a href="http://blog.schmichael.com/2011/11/05/failing-with-mongodb/" title="12:06 pm" rel="bookmark"><span class="entry-date">November 5, 2011</span></a> <span class="meta-sep">by</span> <span class="author vcard"><a class="url fn n" href="http://blog.schmichael.com/author/michael/" title="View all posts by Michael Schurter">Michael Schurter</a></span>					</div><!-- .entry-meta -->

					<div class="entry-content">
						<p><b>Update:</b> Sorry this isn&#8217;t my best piece of writing and there seems to be some confusion. The dataset in question was first in a 1.8 master/slave pair and then migrated to sharded replica sets and 2.0.0.</p>
<p>For a bit of history of my dealings with MongoDB at Urban Airship, I gave a couple versions of a Scaling with MongoDB talk:</p>
<ul>
<li>
<a href="http://opensourcebridge.org/2011/wiki/Scaling_with_MongoDB" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','http://opensourcebridge.org/2011/wiki/Scaling_with_MongoDB']);">at Open Source Bridge (latest &#038; greatest)</a>
</li>
<li><a href="http://blog.schmichael.com/2011/02/02/schmongodb-slides-from-update-portland/" >at Update Portland (original, less polished version)</a></li>
</ul>
<p>My coworker Adam Lowry even gave a follow-up talk of sorts at <a href="http://postgresopen.org/2011/schedule/presentations/98/" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','http://postgresopen.org/2011/schedule/presentations/98/']);">Postgres Open 2011</a> (<a href="http://wiki.postgresql.org/images/7/7f/Adam-lowry-postgresopen2011.pdf" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','http://wiki.postgresql.org/images/7/7f/Adam-lowry-postgresopen2011.pdf']);">slides</a>) about migrating one of our datasets off of MongoDB and (back) on to PostgreSQL.</p>
<p>After reading through those slides you&#8217;re probably wondering why we&#8217;re still dealing with MongoDB at all. We fully intended to migrate our data out of it by now, but priorities change, deadlines slip, and we never expected one of our last uses of MongoDB to experience a surge in growth.</p>
<p>The dataset in question seemed ideal for MongoDB:</p>
<ul>
<li>Ephemeral &#8211; if we lose it we experience service degradation for a short while, but nothing catastrophic</li>
<li>Small &#8211; easily fits into memory (~15 GB)</li>
<li>Secondary index &#8211; In a key/value store we would have had to manage a secondary index manually</li>
</ul>
<p>So this dataset dodged a lot of the previous problems we had with MongoDB and seemed safe to migrate at our leisure.</p>
<p><a name="global_write_lock"><b>Global Write Lock</b></a></p>
<p><a href="http://www.mongodb.org/display/DOCS/How+does+concurrency+work#Howdoesconcurrencywork-Read%2FWriteLock" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','http://www.mongodb.org/display/DOCS/How+does+concurrency+work#Howdoesconcurrencywork-Read%2FWriteLock']);">MongoDB has a global write lock.</a> This means that while applying an insert or update, a single mongod instance can&#8217;t respond to other queries.</p>
<p>Our dataset may be small but it has a heavy read and write load. When the service it backed experienced a surge in usage, MongoDB quickly became CPU bound. This was especially frustrating considering mongod was running in a simple master/slave setup on two servers: each with 16 cores and enough memory to hold all the data a few times over again.</p>
<p>Because of the global write lock and heavy write load, operations are effectively serialized and executed on a single core. Meaning our servers didn&#8217;t even look loaded, as just 1 core would be 100% utilized by mongod.</p>
<p><a name="sharding"><b>Let the Sharding Begin</b></a></p>
<p>So we need to utilize multiple cores&#8230;<br />
To do that we need multiple write locks&#8230;<br />
There&#8217;s 1 write lock per mongod. So&#8230;<br />
&#8230;multiple mongods per server?</p>
<p>We&#8217;d been avoiding sharding after having no luck getting it working in the 1.5.x dev series, but it&#8217;s our only choice now to get multiple mongods. I ran some tests and it seemed like we could turn our master/slave setup into a 2 shard setup with 2 mongods and 1 arbiter per shard with downtime in the seconds or low minutes.</p>
<p>The operational complexity of configuring a MongoDB cluster is daunting with each component bringing its own caveats:</p>
<p><b>mongod config servers</b></p>
<ul>
<li>You need <i>exactly</i> 3 config mongods (1 is fine for testing, which makes things appear simpler than they really are).</li>
<li>There are lots of caveats with the config servers, so read <a href="http://www.mongodb.org/display/DOCS/Changing+Config+Servers" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','http://www.mongodb.org/display/DOCS/Changing+Config+Servers']);">Changing Config Servers</a> carefully before configuring your cluster.</li>
<li>Otherwise these mongod instances are fairly blackboxish to me. Despite being mongod processes you administer them completely differently.</li>
</ul>
<p><b>mongos routers</b></p>
<ul>
<li>1 per app server. This wouldn&#8217;t be a big deal <a href="http://www.mongodb.org/display/DOCS/flushRouterConfig+command" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','http://www.mongodb.org/display/DOCS/flushRouterConfig+command']);">except that our mongoses often start failing and require flushRouterConfig to be run on them</a>. <a href="https://jira.mongodb.org/browse/SERVER-3739" onclick="javascript:_gaq.push(['_trackEvent','outbound-article','http://jira.mongodb.org/browse/SERVER-3739']);">2.0.1 supposedly fixes this</a>, but we haven&#8217;t tested that yet (and trading known problems for new unknown ones is always scary).</li>
<li>mongos instances can use a lot of CPU and seem to have random spikes where they fully utilize every core very briefly. Keep this in mind if your application servers are already CPU bound.</li>
<li>On the bright side mongos balanced our data rather quickly. Our shard key is a uuid, and it properly setup reasonable ranges in very short order without having to preconfigure them.</li>
<li>&#8220;mongos&#8221; is a terribly confusing name. It sounds like multiple mongo instances. We&#8217;ve taken to calling them mongooses internally due to frequent typos and confusion.</li>
</ul>
<p><b>arbiters</b></p>
<ul>
<li>You need at least 3 members in a replica set in order to complete an election if 1 member goes down.</li>
<li>We haven&#8217;t had any issues with arbiters&#8230; not sure what we&#8217;d do if one broke somehow but since they have no persistent data they&#8217;re safe to restart at any time.</li>
</ul>
<p><b>mongods</b></p>
<ul>
<li>Early on we ran into a problem where changing replica set member entries wasn&#8217;t propagated to the config servers&#8217; shard configuration. Restarting every mongos fixed it.</li>
<li>As far as I can tell a new replica set member will never leave the initial RECOVERING state until all operations to that set are stopped. Even 40 updates per second was enough of a trickle to prevent a new set member from leaving RECOVERING to becoming a SECONDARY. We had to shutdown mongoses to cut off all traffic to bring up a new member. (The replication log gave every indication of being caught up and our usual update load is thousands per second.)</li>
<li>Setting rest in the config file doesn&#8217;t seem to work. Put &#8211;rest in your command line options.</li>
<li>Sending an HTTP request to a mongod&#8217;s main port (instead of the HTTP endpoint) seems to be capable of crashing the mongod.</li>
</ul>
<p><b>Client Drivers</b></p>
<p>While a single replica set member was in a RECOVERING state our Java services couldn&#8217;t complete <i>any</i> operations while our Python service was happily working away.</p>
<p><b>Summary</b></p>
<p>Right now we&#8217;re getting by with 2 shards on 2 dedicated servers and then mongoses and config servers spread throughout other servers. There appears to be some data loss occurring, though due to the ephemeral fast changing nature of this dataset it&#8217;s very difficult to determine definitively or reproduce independently.</p>
<p>So we&#8217;re trying to migrate off of MongoDB to a custom service better suited for this dataset ASAP.</p>
											</div><!-- .entry-content -->


					<div class="entry-utility">
						This entry was posted in <a href="http://blog.schmichael.com/category/technology/open-source/" title="View all posts in Open Source" rel="category tag">Open Source</a>, <a href="http://blog.schmichael.com/category/technology/" title="View all posts in Technology" rel="category tag">Technology</a> and tagged <a href="http://blog.schmichael.com/tag/mongodb/" rel="tag">mongodb</a>. Bookmark the <a href="http://blog.schmichael.com/2011/11/05/failing-with-mongodb/" title="Permalink to Failing with MongoDB" rel="bookmark">permalink</a>.											</div><!-- .entry-utility -->
				</div><!-- #post-## -->

				<div id="nav-below" class="navigation">
					<div class="nav-previous"><a href="http://blog.schmichael.com/2011/09/05/memorymapfile-convenience-class-for-python/" rel="prev"><span class="meta-nav">&larr;</span> MemoryMapFile Convenience Class for Python</a></div>
					<div class="nav-next"><a href="http://blog.schmichael.com/2012/05/29/building-python-2-6-8-on-ubuntu-12-04/" rel="next">Building Python 2.6.8 on Ubuntu 12.04 <span class="meta-nav">&rarr;</span></a></div>
				</div><!-- #nav-below -->

				
<div id="disqus_thread">
                    <div id="dsq-content">


            <ul id="dsq-comments">
                    <li class="comment even thread-even depth-1" id="dsq-comment-138572">
        <div id="dsq-comment-header-138572" class="dsq-comment-header">
            <cite id="dsq-cite-138572">
                <span id="dsq-author-user-138572">Ben Sabrin</span>
            </cite>
        </div>
        <div id="dsq-comment-body-138572" class="dsq-comment-body">
            <div id="dsq-comment-message-138572" class="dsq-comment-message"><p>How about creating a ticket on the public forums and people from 10gen will look at your issues.  feel free to email me directly if you want.  There is no reason MongoDB should can&#8217;t solve the problem you have.</p>
</div>
        </div>
    </li>

    </li>
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-138573">
        <div id="dsq-comment-header-138573" class="dsq-comment-header">
            <cite id="dsq-cite-138573">
                <span id="dsq-author-user-138573">Eliot</span>
            </cite>
        </div>
        <div id="dsq-comment-body-138573" class="dsq-comment-body">
            <div id="dsq-comment-message-138573" class="dsq-comment-message"><p>Some comments:<br />
 &#8211; If you think there is data loss, can you please send some more details to me?  That would be very strange and we would want to understand asap.<br />
 &#8211; The mongos name is a bit unfortunate.  We may try to change to mongor if we can do it without driving too many people crazy.<br />
 &#8211; The RECOVERING issue was found and fixed, see  <a href="https://jira.mongodb.org/browse/SERVER-3899" onclick="javascript:_gaq.push(['_trackEvent','outbound-comment','http://jira.mongodb.org/browse/SERVER-3899']);" rel="nofollow">https://jira.mongodb.org/browse/SERVER-3899</a><br />
 &#8211; I cannot reproduce crashing a mongod by sending http requests to the main port.  In fact we special case this a long time ago so you actually get an http response.</p>
</div>
        </div>
    </li>

    </li>
    <li class="comment even thread-even depth-1" id="dsq-comment-138574">
        <div id="dsq-comment-header-138574" class="dsq-comment-header">
            <cite id="dsq-cite-138574">
                <span id="dsq-author-user-138574">Sean McQuillan</span>
            </cite>
        </div>
        <div id="dsq-comment-body-138574" class="dsq-comment-body">
            <div id="dsq-comment-message-138574" class="dsq-comment-message"><p>As I&#8217;m sure 10gen is going to reach out to you shortly to do damage control, can you please post a followup post documenting your experience interacting with 10gen?</p>
<p>I&#8217;m evaluating adopting mongodb, but at the moment 10gen is an unknown entity to me and also the only way to get bugs fixed in mongodb.  I would love to know more about their reaction to these issues that you have appropriately raised for the community to evaluate.</p>
<p>Thanks,<br />
Sean</p>
</div>
        </div>
    </li>

    </li>
    <li class="comment byuser comment-author-michael bypostauthor odd alt thread-odd thread-alt depth-1" id="dsq-comment-138575">
        <div id="dsq-comment-header-138575" class="dsq-comment-header">
            <cite id="dsq-cite-138575">
http://michael.susens-schurter.com/blog/                <span id="dsq-author-user-138575">Michael Schurter</span>
            </cite>
        </div>
        <div id="dsq-comment-body-138575" class="dsq-comment-body">
            <div id="dsq-comment-message-138575" class="dsq-comment-message"><p>@Eliot: Thanks for the fast reply! Glad to see the RECOVERING issue is fixed. Despite happily using JIRA at Urban Airship as well, I still find it nearly impossible to dig up relevant tickets.</p>
<p>Here&#8217;s the backtrace from when the mongod crashed due to monitoring: <a href="http://paste.pocoo.org/show/503530/" onclick="javascript:_gaq.push(['_trackEvent','outbound-comment','http://paste.pocoo.org/show/503530/']);" rel="nofollow">http://paste.pocoo.org/show/503530/</a></p>
<p>We were evaluating this tool:<br />
<a href="https://chrome.google.com/webstore/detail/apgglicbkgjcfnohdcgbcobengnkcjef" onclick="javascript:_gaq.push(['_trackEvent','outbound-comment','http://chrome.google.com/webstore/detail/apgglicbkgjcfnohdcgbcobengnkcjef']);" rel="nofollow">https://chrome.google.com/webstore/detail/apgglicbkgjcfnohdcgbcobengnkcjef</a></p>
<p>It was working, but at some point while using it (perhaps after typing an incorrect port number? that was our best guess) that backtrace happened.</p>
<p>It could be pure coincidence that it crashed while attempting to monitor it, but considering this is the first production mongod I&#8217;ve ever crashed, I find that hard to believe.</p>
</div>
        </div>
    </li>

    </li>
    <li class="comment even thread-even depth-1" id="dsq-comment-138576">
        <div id="dsq-comment-header-138576" class="dsq-comment-header">
            <cite id="dsq-cite-138576">
                <span id="dsq-author-user-138576">Eliot</span>
            </cite>
        </div>
        <div id="dsq-comment-body-138576" class="dsq-comment-body">
            <div id="dsq-comment-message-138576" class="dsq-comment-message"><p>Do you have more of the log from the crash?<br />
There was a race in the http layer itself that&#8217;s fixed in 2.0.1.  The tool uses that heavily, so that&#8217;s probably the culprit: <a href="https://jira.mongodb.org/browse/SERVER-3907" onclick="javascript:_gaq.push(['_trackEvent','outbound-comment','http://jira.mongodb.org/browse/SERVER-3907']);" rel="nofollow">https://jira.mongodb.org/browse/SERVER-3907</a></p>
</div>
        </div>
    </li>

    </li>
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-138577">
        <div id="dsq-comment-header-138577" class="dsq-comment-header">
            <cite id="dsq-cite-138577">
                <span id="dsq-author-user-138577">ENC</span>
            </cite>
        </div>
        <div id="dsq-comment-body-138577" class="dsq-comment-body">
            <div id="dsq-comment-message-138577" class="dsq-comment-message"><p>It sounded like you were using MongoDB &lt; 1.5. If that is true, have you tried upgrading to 1.8.x or 2.0?</p>
</div>
        </div>
    </li>

    </li>
    <li class="comment byuser comment-author-michael bypostauthor even thread-even depth-1" id="dsq-comment-138578">
        <div id="dsq-comment-header-138578" class="dsq-comment-header">
            <cite id="dsq-cite-138578">
http://michael.susens-schurter.com/blog/                <span id="dsq-author-user-138578">Michael Schurter</span>
            </cite>
        </div>
        <div id="dsq-comment-body-138578" class="dsq-comment-body">
            <div id="dsq-comment-message-138578" class="dsq-comment-message"><p>@ENC: Added an update. tl;dr Everything in this post related to replica sets and sharding uses 2.0.0.</p>
</div>
        </div>
    </li>

    </li>
    <li class="post pingback">
        <p>Pingback: <a href="http://freewebspace.biz/2011/11/05/failing-with-mongodb/" onclick="javascript:_gaq.push(['_trackEvent','outbound-commentauthor','http://freewebspace.biz/2011/11/05/failing-with-mongodb/']);"  rel='external nofollow' class='url'>Failing with MongoDB | Discuss the World !</a></p>
    </li>
    </li>
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-138580">
        <div id="dsq-comment-header-138580" class="dsq-comment-header">
            <cite id="dsq-cite-138580">
                <span id="dsq-author-user-138580">Ryan</span>
            </cite>
        </div>
        <div id="dsq-comment-body-138580" class="dsq-comment-body">
            <div id="dsq-comment-message-138580" class="dsq-comment-message"><p>@michael &#8211; What does your schema looks like and what are the common operations you are performing.  I have found that in high volume systems, tuning your collection schema can make an order of magnitude difference in system performance.</p>
</div>
        </div>
    </li>

    </li>
    <li class="comment even thread-even depth-1" id="dsq-comment-138581">
        <div id="dsq-comment-header-138581" class="dsq-comment-header">
            <cite id="dsq-cite-138581">
                <span id="dsq-author-user-138581">Parth</span>
            </cite>
        </div>
        <div id="dsq-comment-body-138581" class="dsq-comment-body">
            <div id="dsq-comment-message-138581" class="dsq-comment-message"><p>@Michael Schurter,</p>
<p>Please do update this thread if you continued with Mongo or moved to PostgreSQL. Your issue looks genuine and we might face the same issue. So before going all-in into Mongo I&#8217;d love to know how you resolved it. And thanks for posting this..</p>
</div>
        </div>
    </li>

    </li>
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-138582">
        <div id="dsq-comment-header-138582" class="dsq-comment-header">
            <cite id="dsq-cite-138582">
                <span id="dsq-author-user-138582">Eric</span>
            </cite>
        </div>
        <div id="dsq-comment-body-138582" class="dsq-comment-body">
            <div id="dsq-comment-message-138582" class="dsq-comment-message"><p>Why does it seem like your only options are Postgres or Mongo?   Why not move to something like Riak or Cassandra where you at least won&#8217;t lose data or have to worry about sharding?</p>
</div>
        </div>
    </li>

    </li>
    <li class="comment even thread-even depth-1" id="dsq-comment-138583">
        <div id="dsq-comment-header-138583" class="dsq-comment-header">
            <cite id="dsq-cite-138583">
                <span id="dsq-author-user-138583">Andreas</span>
            </cite>
        </div>
        <div id="dsq-comment-body-138583" class="dsq-comment-body">
            <div id="dsq-comment-message-138583" class="dsq-comment-message"><p>Eric: With a 15 GB database they should normally not have to worry about sharding with any database engine. It is only the R/W lock that forced them to use it for MongoDB.</p>
</div>
        </div>
    </li>

    </li>
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-138584">
        <div id="dsq-comment-header-138584" class="dsq-comment-header">
            <cite id="dsq-cite-138584">
                <span id="dsq-author-user-138584">Howard</span>
            </cite>
        </div>
        <div id="dsq-comment-body-138584" class="dsq-comment-body">
            <div id="dsq-comment-message-138584" class="dsq-comment-message"><p>Have you considered using MySQL? </p>
<p>We have been using MySQL for storing scheme-less data like <a href="http://bret.appspot.com/entry/how-friendfeed-uses-mysql" onclick="javascript:_gaq.push(['_trackEvent','outbound-comment','http://bret.appspot.com/entry/how-friendfeed-uses-mysql']);" rel="nofollow">http://bret.appspot.com/entry/how-friendfeed-uses-mysql</a>.</p>
<p>We have around 80GB data, and InnoDB is superb under heavy read/write workload (not to mention it is ACID compliant) and we have been using InnoDB for many years and never lost a single bit of data&#8230;</p>
</div>
        </div>
    </li>

    </li>
    <li class="comment even thread-even depth-1" id="dsq-comment-138585">
        <div id="dsq-comment-header-138585" class="dsq-comment-header">
            <cite id="dsq-cite-138585">
                <span id="dsq-author-user-138585">lenzai</span>
            </cite>
        </div>
        <div id="dsq-comment-body-138585" class="dsq-comment-body">
            <div id="dsq-comment-message-138585" class="dsq-comment-message"><p>Is there any reliable NoSQl write that provide high throughput for write ?</p>
<p>I am quite surprised to learn this global lock issue with mongodb write.</p>
</div>
        </div>
    </li>

    </li>
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-138586">
        <div id="dsq-comment-header-138586" class="dsq-comment-header">
            <cite id="dsq-cite-138586">
                <span id="dsq-author-user-138586">ypcxx</span>
            </cite>
        </div>
        <div id="dsq-comment-body-138586" class="dsq-comment-body">
            <div id="dsq-comment-message-138586" class="dsq-comment-message"><p>@Howard: I coded a web spider that was pounding a MySQL instance with inserts and updates all day, and at the end of each day, MySQL simply crashed (actually it did not crash, it froze). This was on a good and fast hardware, and after rewriting the insert logic many times.<br />
Also, if you ever tried to design an ACID system, you know it&#8217;s a total waste of resources. Of course that&#8217;s why SQL DB&#8217;s don&#8217;t have _real_ ACID, but even so.<br />
MongoDB I can pound with thousands of incremental updates without locking and at the end of day, I get a consistent result.<br />
With MySQL, compared to the paid SQL db&#8217;s, as a developer you are going to hit many walls, that you will have work around. As an example &#8211; the inability to specify a variable for the LIMIT N clause (yeah this is fixed in the latest, so in 10 or 20 years a WordPress plugin developer /or similar/ can start using it).<br />
MongoDB is far from complete or ideal, but after my first project, I will choose it over MySQL any day. I guess if you want to suggest an SQL salvation, PostgreSQL is much better positioned than MySQL.</p>
</div>
        </div>
    </li>

    </li>
    <li class="comment even thread-even depth-1" id="dsq-comment-138589">
        <div id="dsq-comment-header-138589" class="dsq-comment-header">
            <cite id="dsq-cite-138589">
http://bdarfler.com                <span id="dsq-author-user-138589">Benjamin Darfler</span>
            </cite>
        </div>
        <div id="dsq-comment-body-138589" class="dsq-comment-body">
            <div id="dsq-comment-message-138589" class="dsq-comment-message"><p>Did you experiment with multiple shards per physical host?</p>
</div>
        </div>
    </li>

    </li>
    <li class="post pingback">
        <p>Pingback: <a href="http://blog.boxedice.com/2011/11/06/sysadmin-sunday-55/" onclick="javascript:_gaq.push(['_trackEvent','outbound-commentauthor','http://blog.boxedice.com/2011/11/06/sysadmin-sunday-55/']);"  rel='external nofollow' class='url'>Sysadmin Sunday 55 &laquo; Boxed Ice Blog</a></p>
    </li>
    </li>
    <li class="post pingback">
        <p>Pingback: <a href="http://cloudcomments.net/2011/11/07/mongodb-against-the-ropes/" onclick="javascript:_gaq.push(['_trackEvent','outbound-commentauthor','http://cloudcomments.net/2011/11/07/mongodb-against-the-ropes/']);"  rel='external nofollow' class='url'>MongoDB against the ropes &laquo; Cloud Comments .net</a></p>
    </li>
    </li>
    <li class="post pingback">
        <p>Pingback: <a href="http://lucisferre.net/2011/11/07/youre-having-nosql-problems-i-feel-bad-for-you-son/" onclick="javascript:_gaq.push(['_trackEvent','outbound-commentauthor','http://lucisferre.net/2011/11/07/youre-having-nosql-problems-i-feel-bad-for-you-son/']);"  rel='external nofollow' class='url'>You&#8217;re having noSQL problems, I feel bad for you son | lucisferre.net</a></p>
    </li>
    </li>
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-138595">
        <div id="dsq-comment-header-138595" class="dsq-comment-header">
            <cite id="dsq-cite-138595">
http://www.discursive.com                <span id="dsq-author-user-138595">Tim O&#8217;Brien</span>
            </cite>
        </div>
        <div id="dsq-comment-body-138595" class="dsq-comment-body">
            <div id="dsq-comment-message-138595" class="dsq-comment-message"><p>I run MongoDB in a production system that has heavy write activity with little read activity.  I noticed significant performance problems until I tweaked the collections and added just the right indexes.</p>
<p>I agree that replica set configuration is a bit confounding at first, but once I set up replica sets a few times it&#8217;s easy to configure. </p>
</div>
        </div>
    </li>

    </li>
    <li class="comment even thread-even depth-1" id="dsq-comment-138596">
        <div id="dsq-comment-header-138596" class="dsq-comment-header">
            <cite id="dsq-cite-138596">
                <span id="dsq-author-user-138596">Anonymous</span>
            </cite>
        </div>
        <div id="dsq-comment-body-138596" class="dsq-comment-body">
            <div id="dsq-comment-message-138596" class="dsq-comment-message"><p>They&#8217;re not our only options. We also use Cassandra and HBase internally. For this dataset Mongo&#8217;s lack of durability was considered an optimization because of the ephemeral nature of the data. Also as I mentioned: being able to utilize secondary indexes without manually managing them was appealing. Cassandra and other k/v stores have added secondary indexes of a sort since we initially wrote this service.</p>
</div>
        </div>
    </li>

    </li>
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-138597">
        <div id="dsq-comment-header-138597" class="dsq-comment-header">
            <cite id="dsq-cite-138597">
                <span id="dsq-author-user-138597">Anonymous</span>
            </cite>
        </div>
        <div id="dsq-comment-body-138597" class="dsq-comment-body">
            <div id="dsq-comment-message-138597" class="dsq-comment-message"><p>We have two indexes: _id and a secondary. We use _id extensively (and shard on it) and the secondary slightly less. The only further optimization we could do to our dataset (without drastically re-engineering our application) would be short key names.</p>
</div>
        </div>
    </li>

    </li>
    <li class="comment even thread-even depth-1" id="dsq-comment-138598">
        <div id="dsq-comment-header-138598" class="dsq-comment-header">
            <cite id="dsq-cite-138598">
                <span id="dsq-author-user-138598">Anonymous</span>
            </cite>
        </div>
        <div id="dsq-comment-body-138598" class="dsq-comment-body">
            <div id="dsq-comment-message-138598" class="dsq-comment-message"><p>That is precisely what we did to utilize more cores per server. We&#8217;re at 2 mongods per server right now (1 mongod for each shard), but frankly could probably fit a 3rd or 4th. However, I think our alternate solution will be complete soon enough we&#8217;d rather not experiment further with MongoDB.</p>
</div>
        </div>
    </li>

    </li>
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-138599">
        <div id="dsq-comment-header-138599" class="dsq-comment-header">
            <cite id="dsq-cite-138599">
                <span id="dsq-author-user-138599">Anonymous</span>
            </cite>
        </div>
        <div id="dsq-comment-body-138599" class="dsq-comment-body">
            <div id="dsq-comment-message-138599" class="dsq-comment-message"><p>I&#8217;m glad MongoDB is working for your use case.</p>
</div>
        </div>
    </li>

    </li>
    <li class="comment even thread-even depth-1" id="dsq-comment-138600">
        <div id="dsq-comment-header-138600" class="dsq-comment-header">
            <cite id="dsq-cite-138600">
                <span id="dsq-author-user-138600">Anonymous</span>
            </cite>
        </div>
        <div id="dsq-comment-body-138600" class="dsq-comment-body">
            <div id="dsq-comment-message-138600" class="dsq-comment-message"><p>This is not a question with a simple easy answer. The usual suspects are: HBase, Cassandra, Riak, Redis, etc. Understand your workload as best you can, then pick the database best suited for that use case.</p>
</div>
        </div>
    </li>

    </li>
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-138601">
        <div id="dsq-comment-header-138601" class="dsq-comment-header">
            <cite id="dsq-cite-138601">
                <span id="dsq-author-user-138601">Anonymous</span>
            </cite>
        </div>
        <div id="dsq-comment-body-138601" class="dsq-comment-body">
            <div id="dsq-comment-message-138601" class="dsq-comment-message"><p>While many organizations happily use MySQL as a NoSQL database, we have not pursued that avenue internally at this point. Currently our efforts have mostly focused on PostgreSQL, Cassandra, HBase, and, obviously, MongoDB (throw in some Redis, Memcached, and S3 as well).</p>
<p>There&#8217;s only so much time you can spend experimenting with databases and migrating datasets and application code.</p>
</div>
        </div>
    </li>

    </li>
    <li class="comment even thread-even depth-1" id="dsq-comment-138602">
        <div id="dsq-comment-header-138602" class="dsq-comment-header">
            <cite id="dsq-cite-138602">
                <span id="dsq-author-user-138602">Anonymous</span>
            </cite>
        </div>
        <div id="dsq-comment-body-138602" class="dsq-comment-body">
            <div id="dsq-comment-message-138602" class="dsq-comment-message"><p>Just wanted to point out this is precisely the case. That being said we&#8217;ve had issues with other distributed databases with a similar sized dataset. Distributed systems are hard.</p>
</div>
        </div>
    </li>

    </li>
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-138603">
        <div id="dsq-comment-header-138603" class="dsq-comment-header">
            <cite id="dsq-cite-138603">
                <span id="dsq-author-user-138603">Anonymous</span>
            </cite>
        </div>
        <div id="dsq-comment-body-138603" class="dsq-comment-body">
            <div id="dsq-comment-message-138603" class="dsq-comment-message"><p>See the last line of my post: &#8220;So we’re trying to migrate off of MongoDB to a custom service better suited for this dataset ASAP.&#8221;</p>
<p>I&#8217;m not involved in this development effort, so you probably won&#8217;t hear much more from me on the migration effort.</p>
</div>
        </div>
    </li>

    </li>
    <li class="comment even thread-even depth-1" id="dsq-comment-138605">
        <div id="dsq-comment-header-138605" class="dsq-comment-header">
            <cite id="dsq-cite-138605">
                <span id="dsq-author-user-138605">Anonymous</span>
            </cite>
        </div>
        <div id="dsq-comment-body-138605" class="dsq-comment-body">
            <div id="dsq-comment-message-138605" class="dsq-comment-message"><p>Added an update. tl;dr Everything in this post related to replica sets and sharding uses 2.0.0.</p>
</div>
        </div>
    </li>

    </li>
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-138604">
        <div id="dsq-comment-header-138604" class="dsq-comment-header">
            <cite id="dsq-cite-138604">
                <span id="dsq-author-user-138604">Anonymous</span>
            </cite>
        </div>
        <div id="dsq-comment-body-138604" class="dsq-comment-body">
            <div id="dsq-comment-message-138604" class="dsq-comment-message"><p>The schema is half a dozen simple fields with an index on _id and another field. No lists or sub-objects/docuemnts.</p>
<p>The vast majority of our operations are to get or update a specific _id with periodic updates to the secondary index. There are no full collection scans or index misses.</p>
<p>The entire dataset and indexes fit in memory. We have journaling and fsyncing turned off as replication is sufficient durability for this ephemeral dataset.</p>
<p>The update load in conjunction with the global write lock just means we&#8217;re limited around 3k updates/s per core. Since the write lock is per mongod, that means we&#8217;ve had to shard just to take advantage of multiple cores on a single server.</p>
</div>
        </div>
    </li>

    </li>
    <li class="comment even thread-even depth-1" id="dsq-comment-138606">
        <div id="dsq-comment-header-138606" class="dsq-comment-header">
            <cite id="dsq-cite-138606">
http://www.discursive.com                <span id="dsq-author-user-138606">Tim O&#8217;Brien</span>
            </cite>
        </div>
        <div id="dsq-comment-body-138606" class="dsq-comment-body">
            <div id="dsq-comment-message-138606" class="dsq-comment-message"><p>Right, so I certainly had a few tough weeks during which I felt like it was time to throw MongoDB into the East River with a pair of concrete shoes, but with patience and an effort to divine hidden meaning from the, at times, sparse documentation I was able to see it through to a working solution.   The critical point not to be lost is that a lot of these features are just hitting the stable builds now.   This stuff is newish, it isn&#8217;t like we&#8217;re using features that have been around for a few years.</p>
<p>It would be interesting to hear about any interaction you have with 10gen going forward.   I&#8217;ve concluded that MongoDB is a good solution for my particular application, but I&#8217;ve also come around to the idea that a support contract isn&#8217;t such a bad idea.</p>
</div>
        </div>
    </li>

    </li>
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-138607">
        <div id="dsq-comment-header-138607" class="dsq-comment-header">
            <cite id="dsq-cite-138607">
                <span id="dsq-author-user-138607">Anonymous</span>
            </cite>
        </div>
        <div id="dsq-comment-body-138607" class="dsq-comment-body">
            <div id="dsq-comment-message-138607" class="dsq-comment-message"><p>If I have to &#8220;divine hidden meaning&#8221; from my database, it has failed me. This is a failure condition. Nothing is perfect, and I fully expect to have to do hard work to learn a system and use it properly. I feel like I have done these things and applied best practices. &#8220;Divining hidden meaning&#8221; is not something I ever want to have to do with a data system. It implies a level of unpredictability, complexity, and lack of documentation that&#8217;s unacceptable for my use case.</p>
<p>I&#8217;m not advocating everyone throw MongoDB under a bus and migrate all of their apps and data to something else. I&#8217;m relaying my experiences in hopes of helping others make educated decisions. No one should have to &#8220;divine hidden meaning.&#8221;</p>
<p>If the answer to my issues are &#8220;just wait until release N+1&#8243;, that&#8217;s great advice for future generations but doesn&#8217;t really do a thing to solve my current woes.</p>
<p>Support contracts do seem like a great idea. I appreciate 10gen&#8217;s eagerness to help. That&#8217;s very commendable. I&#8217;m sure bringing them in earlier would have helped. That being said, I&#8217;m confident I&#8217;m applying best practices. This use case was not at all complex. If I&#8217;m wrong and it takes a support contract to adequately fulfill this straightforward use case, I don&#8217;t think this is a product I want to be using. YMMV</p>
</div>
        </div>
    </li>

    </li>
    <li class="post pingback">
        <p>Pingback: <a href="http://www.quora.com/MongoDB/How-much-credibility-does-the-post-Dont-use-MongoDB-have#ans802937" onclick="javascript:_gaq.push(['_trackEvent','outbound-commentauthor','http://www.quora.com/MongoDB/How-much-credibility-does-the-post-Dont-use-MongoDB-have#ans802937']);"  rel='external nofollow' class='url'>Quora</a></p>
    </li>
    </li>
    <li class="post pingback">
        <p>Pingback: <a href="http://tm.durusau.net/?p=17695" onclick="javascript:_gaq.push(['_trackEvent','outbound-commentauthor','http://tm.durusau.net/?p=17695']);"  rel='external nofollow' class='url'>Someone Is Being Honest on the Internet? &laquo; Another Word For It</a></p>
    </li>
    </li>
    <li class="comment even thread-even depth-1" id="dsq-comment-138610">
        <div id="dsq-comment-header-138610" class="dsq-comment-header">
            <cite id="dsq-cite-138610">
                <span id="dsq-author-user-138610">BarryR</span>
            </cite>
        </div>
        <div id="dsq-comment-body-138610" class="dsq-comment-body">
            <div id="dsq-comment-message-138610" class="dsq-comment-message"><p>Are you using a custom _id type (ie: not the default ObjectID format that starts off with a timestamp)?  If not, then sharding on _id will be incredibly bad for writes.  Whenever you insert a new document (or update a somewhat new document) it will end up going to a single mongod, so that process will get all the write requests, producing a big bottleneck.  </p>
<p>In such a case, either adding a hash (like digit sum modulo, say, 100) on the ObjectID and indexing on that, or replacing the _id field with &#8220;hash&#8221;+&#8221;ObjectId&#8221; (assuming that you don&#8217;t use the time ordered nature of ObjectId&#8217;s) would work fine and distribute your writes across the cluster. </p>
</div>
        </div>
    </li>

    </li>
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-138611">
        <div id="dsq-comment-header-138611" class="dsq-comment-header">
            <cite id="dsq-cite-138611">
                <span id="dsq-author-user-138611">Anonymous</span>
            </cite>
        </div>
        <div id="dsq-comment-body-138611" class="dsq-comment-body">
            <div id="dsq-comment-message-138611" class="dsq-comment-message"><p>Yes, we are using a custom _id value: a uuid4 encoded as a hex string. It&#8217;s random and therefore distributes evenly. We let mongos figure out the partitions and it seems quite evenly balanced.</p>
</div>
        </div>
    </li>

    </li>
    <li class="post pingback">
        <p>Pingback: <a href="http://www.alohastartups.com/2011/11/10/know-why-you-choose-your-tools/" onclick="javascript:_gaq.push(['_trackEvent','outbound-commentauthor','http://www.alohastartups.com/2011/11/10/know-why-you-choose-your-tools/']);"  rel='external nofollow' class='url'>Know why you choose your tools | Aloha StartUps</a></p>
    </li>
    </li>
    <li class="comment even thread-even depth-1" id="dsq-comment-138617">
        <div id="dsq-comment-header-138617" class="dsq-comment-header">
            <cite id="dsq-cite-138617">
                <span id="dsq-author-user-138617">Lakalaka</span>
            </cite>
        </div>
        <div id="dsq-comment-body-138617" class="dsq-comment-body">
            <div id="dsq-comment-message-138617" class="dsq-comment-message"><p>Call me stupid, but: if your dataset is only 15GB (fits in a server&#8217;s ram), why all this fuss about mongodb? Why not stick it in a good old relational database like postgres?</p>
</div>
        </div>
    </li>

    </li>
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-138618">
        <div id="dsq-comment-header-138618" class="dsq-comment-header">
            <cite id="dsq-cite-138618">
                <span id="dsq-author-user-138618">Anonymous</span>
            </cite>
        </div>
        <div id="dsq-comment-body-138618" class="dsq-comment-body">
            <div id="dsq-comment-message-138618" class="dsq-comment-message"><p>Because we did not need SQL, transactions, relations, a write ahead log, and many of the other features provided by relational databases. We thought we were picking the right tool for the job. Had we known then what we know now we would have picked a different solution, but I doubt it would ever be a relational database simply because it offers a completely different feature set than we required.</p>
</div>
        </div>
    </li>

    </li>
    <li class="post pingback">
        <p>Pingback: <a href="http://www.quora.com/How-come-many-startups-used-MySQL-or-PostgreSQL-rather-than-MongoDB-when-they-began#ans966057" onclick="javascript:_gaq.push(['_trackEvent','outbound-commentauthor','http://www.quora.com/How-come-many-startups-used-MySQL-or-PostgreSQL-rather-than-MongoDB-when-they-began#ans966057']);"  rel='external nofollow' class='url'>Quora</a></p>
    </li>
    </li>
    <li class="comment even thread-even depth-1" id="dsq-comment-138623">
        <div id="dsq-comment-header-138623" class="dsq-comment-header">
            <cite id="dsq-cite-138623">
                <span id="dsq-author-user-138623">Jonathan Ultis</span>
            </cite>
        </div>
        <div id="dsq-comment-body-138623" class="dsq-comment-body">
            <div id="dsq-comment-message-138623" class="dsq-comment-message"><p>What type of storage subsystem were you using on the Mongo boxes?</p>
</div>
        </div>
    </li>

    </li>
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-138624">
        <div id="dsq-comment-header-138624" class="dsq-comment-header">
            <cite id="dsq-cite-138624">
                <span id="dsq-author-user-138624">Michael Schurter</span>
            </cite>
        </div>
        <div id="dsq-comment-body-138624" class="dsq-comment-body">
            <div id="dsq-comment-message-138624" class="dsq-comment-message"><p>4x RAID 0+1 SAS drives for the data files, but I think you&#8217;re missing the point: our dataset fit in memory, we had syncing turned off, and we didn&#8217;t use journaling &#8211; the disks should never be touched.</p>
</div>
        </div>
    </li>

    </li>
    <li class="comment even thread-even depth-1" id="dsq-comment-138625">
        <div id="dsq-comment-header-138625" class="dsq-comment-header">
            <cite id="dsq-cite-138625">
                <span id="dsq-author-user-138625">Jonathan Ultis</span>
            </cite>
        </div>
        <div id="dsq-comment-body-138625" class="dsq-comment-body">
            <div id="dsq-comment-message-138625" class="dsq-comment-message"><p>The linux VM flushes the dirty pages in RAM to disk. It starts out flushing lazily. Eventually, if you get too high a percentage of dirty pages, it will start blocking all writes trying to get the deferred IO onto disks &#8211; so you don&#8217;t lose hours of data in the case of a crash. Is it possible that your IO subsystem just couldn&#8217;t keep up with the sustained write rate? And, you didn&#8217;t raise your dirty_ratio limit as high as possible to make it act like a pure in-memory DB?</p>
<p><a href="http://www.westnet.com/~gsmith/content/linux-pdflush.htm" onclick="javascript:_gaq.push(['_trackEvent','outbound-comment','http://www.westnet.com/~gsmith/content/linux-pdflush.htm']);" rel="nofollow">http://www.westnet.com/~gsmith/content/linux-pdflush.htm</a></p>
<p>Mongo definitely wouldn&#8217;t do a good job of putting back pressure on writes without blocking readers, if the IO subsystem is saturated and you hit the dirty_ratio limit.</p>
</div>
        </div>
    </li>

    </li>
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-138626">
        <div id="dsq-comment-header-138626" class="dsq-comment-header">
            <cite id="dsq-cite-138626">
http://blog.schmichael.com/                <span id="dsq-author-user-138626">Michael Schurter</span>
            </cite>
        </div>
        <div id="dsq-comment-body-138626" class="dsq-comment-body">
            <div id="dsq-comment-message-138626" class="dsq-comment-message"><p>Great tip. We didn&#8217;t adjust the dirty_ratio as far as I know, so that probably caused unneeded IO. That being said I don&#8217;t remember iowait being an issue; most of our issues were with the global write lock and complexities of sharding.</p>
</div>
        </div>
    </li>

    </li>
    <li class="post pingback">
        <p>Pingback: <a href="http://s3948.at2.pressdns.com/2011/11/should-you-use-mongodb/" onclick="javascript:_gaq.push(['_trackEvent','outbound-commentauthor','http://s3948.at2.pressdns.com/2011/11/should-you-use-mongodb/']);"  rel='external nofollow' class='url'>Should you use MongoDB? - Jared Wray&#039;s Blog</a></p>
    </li>
    </li>
    <li class="comment even thread-even depth-1" id="dsq-comment-138643">
        <div id="dsq-comment-header-138643" class="dsq-comment-header">
            <cite id="dsq-cite-138643">
                <span id="dsq-author-user-138643">gabrielsamfira</span>
            </cite>
        </div>
        <div id="dsq-comment-body-138643" class="dsq-comment-body">
            <div id="dsq-comment-message-138643" class="dsq-comment-message"><p>Version 2.2 has removed the Global Lock. </p>
</div>
        </div>
    </li>

    </li>
    <li class="post pingback">
        <p>Pingback: <a href="http://www.dotnetcodegeeks.com/2012/05/youre-having-nosql-problems-i-feel-bad.html" onclick="javascript:_gaq.push(['_trackEvent','outbound-commentauthor','http://www.dotnetcodegeeks.com/2012/05/youre-having-nosql-problems-i-feel-bad.html']);"  rel='external nofollow' class='url'>You're Having noSQL Problems, I Feel Bad for You Son - .NET Code Geeks</a></p>
    </li>
    </li>
            </ul>


        </div>

    </div>

<script type="text/javascript">
/* <![CDATA[ */
    var disqus_url = 'http://blog.schmichael.com/2011/11/05/failing-with-mongodb/';
    var disqus_identifier = '979 http://blog.schmichael.com/?p=979';
    var disqus_container_id = 'disqus_thread';
    var disqus_domain = 'disqus.com';
    var disqus_shortname = 'schmichaelsblog';
    var disqus_title = "Failing with MongoDB";
        var disqus_config = function () {
        var config = this; // Access to the config object

        /*
           All currently supported events:
            * preData — fires just before we request for initial data
            * preInit - fires after we get initial data but before we load any dependencies
            * onInit  - fires when all dependencies are resolved but before dtpl template is rendered
            * afterRender - fires when template is rendered but before we show it
            * onReady - everything is done
         */

        config.callbacks.preData.push(function() {
            // clear out the container (its filled for SEO/legacy purposes)
            document.getElementById(disqus_container_id).innerHTML = '';
        });
                config.callbacks.onReady.push(function() {
            // sync comments in the background so we don't block the page
            var script = document.createElement('script');
            script.async = true;
            script.src = '?cf_action=sync_comments&post_id=979';

            var firstScript = document.getElementsByTagName( "script" )[0];
            firstScript.parentNode.insertBefore(script, firstScript);
        });
                    };
    var facebookXdReceiverPath = 'http://blog.schmichael.com/wp-content/plugins/disqus-comment-system/xd_receiver.htm';
/* ]]> */
</script>

<script type="text/javascript">
/* <![CDATA[ */
    var DsqLocal = {
        'trackbacks': [
            {
                'author_name':    "Failing with MongoDB | Discuss the World !",
                'author_url':    "http:\/\/freewebspace.biz\/2011\/11\/05\/failing-with-mongodb\/",
                'date':            "11\/05\/2011 04:47 PM",
                'excerpt':        "[...] post by Digg and software by Elliott [...] ",
                'type':            "pingback"            }
,            {
                'author_name':    "Sysadmin Sunday 55 &laquo; Boxed Ice Blog",
                'author_url':    "http:\/\/blog.boxedice.com\/2011\/11\/06\/sysadmin-sunday-55\/",
                'date':            "11\/06\/2011 08:01 AM",
                'excerpt':        "[...] Failing with MongoDB (comments) [...] ",
                'type':            "pingback"            }
,            {
                'author_name':    "MongoDB against the ropes &laquo; Cloud Comments .net",
                'author_url':    "http:\/\/cloudcomments.net\/2011\/11\/07\/mongodb-against-the-ropes\/",
                'date':            "11\/07\/2011 07:04 AM",
                'excerpt':        "[...] Failing with MongoDB (http:\/\/news.ycombinator.com\/item?id=3200683) [...] ",
                'type':            "pingback"            }
,            {
                'author_name':    "You&#8217;re having noSQL problems, I feel bad for you son | lucisferre.net",
                'author_url':    "http:\/\/lucisferre.net\/2011\/11\/07\/youre-having-nosql-problems-i-feel-bad-for-you-son\/",
                'date':            "11\/07\/2011 09:01 AM",
                'excerpt':        "[...] Failing with Mongo [...] ",
                'type':            "pingback"            }
,            {
                'author_name':    "Quora",
                'author_url':    "http:\/\/www.quora.com\/MongoDB\/How-much-credibility-does-the-post-Dont-use-MongoDB-have#ans802937",
                'date':            "11\/08\/2011 05:21 AM",
                'excerpt':        "How much credibility does the post \"Don't use MongoDB\" have?...<br \/><br \/>None in my opinion for a few reason: * Its a ...",
                'type':            "trackback"            }
,            {
                'author_name':    "Someone Is Being Honest on the Internet? &laquo; Another Word For It",
                'author_url':    "http:\/\/tm.durusau.net\/?p=17695",
                'date':            "11\/08\/2011 04:45 PM",
                'excerpt':        "[...] Cribbs writes: There has been quite a bit of furor and excitement on the Internet this week regarding some ...",
                'type':            "pingback"            }
,            {
                'author_name':    "Know why you choose your tools | Aloha StartUps",
                'author_url':    "http:\/\/www.alohastartups.com\/2011\/11\/10\/know-why-you-choose-your-tools\/",
                'date':            "11\/10\/2011 01:41 PM",
                'excerpt':        "[...] there has been a storm of anti-MongoDB sentiments being raised (the popular ones here and here).  What it boils down ...",
                'type':            "pingback"            }
,            {
                'author_name':    "Quora",
                'author_url':    "http:\/\/www.quora.com\/How-come-many-startups-used-MySQL-or-PostgreSQL-rather-than-MongoDB-when-they-began#ans966057",
                'date':            "01\/26\/2012 12:31 PM",
                'excerpt':        "How come many startups used MySQL or PostgreSQL rather than MongoDB when they began?...<br \/><br \/>&gt; Many of them seem to migrate ...",
                'type':            "trackback"            }
,            {
                'author_name':    "Should you use MongoDB? - Jared Wray&#039;s Blog",
                'author_url':    "http:\/\/s3948.at2.pressdns.com\/2011\/11\/should-you-use-mongodb\/",
                'date':            "02\/20\/2012 01:53 PM",
                'excerpt':        "[...] http:\/\/blog.schmichael.com\/2011\/11\/05\/failing-with-mongodb\/    &nbsp;           If you enjoyed this ...",
                'type':            "pingback"            }
,            {
                'author_name':    "You're Having noSQL Problems, I Feel Bad for You Son - .NET Code Geeks",
                'author_url':    "http:\/\/www.dotnetcodegeeks.com\/2012\/05\/youre-having-nosql-problems-i-feel-bad.html",
                'date':            "10\/16\/2012 09:40 AM",
                'excerpt':        "[...] Failing with Mongo [...] ",
                'type':            "pingback"            }
        ],
        'trackback_url': "http:\/\/blog.schmichael.com\/2011\/11\/05\/failing-with-mongodb\/trackback\/"    };
/* ]]> */
</script>

<script type="text/javascript">
/* <![CDATA[ */
(function() {
    var dsq = document.createElement('script'); dsq.type = 'text/javascript';
    dsq.async = true;
        dsq.src = 'http' + '://' + disqus_shortname + '.' + 'disqus.com' + '/embed.js?pname=wordpress&pver=2.73';
    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
})();
/* ]]> */
</script>


			</div><!-- #content -->
		</div><!-- #container -->


		<div id="primary" class="widget-area" role="complementary">
			<ul class="xoxo">


			<li id="search" class="widget-container widget_search">
				<form role="search" method="get" id="searchform" action="http://blog.schmichael.com/" >
	<div><label class="screen-reader-text" for="s">Search for:</label>
	<input type="text" value="" name="s" id="s" />
	<input type="submit" id="searchsubmit" value="Search" />
	</div>
	</form>			</li>

			<li id="archives" class="widget-container">
				<h3 class="widget-title">Archives</h3>
				<ul>
						<li><a href='http://blog.schmichael.com/2012/10/' title='October 2012'>October 2012</a></li>
	<li><a href='http://blog.schmichael.com/2012/05/' title='May 2012'>May 2012</a></li>
	<li><a href='http://blog.schmichael.com/2011/11/' title='November 2011'>November 2011</a></li>
	<li><a href='http://blog.schmichael.com/2011/09/' title='September 2011'>September 2011</a></li>
	<li><a href='http://blog.schmichael.com/2011/05/' title='May 2011'>May 2011</a></li>
	<li><a href='http://blog.schmichael.com/2011/02/' title='February 2011'>February 2011</a></li>
	<li><a href='http://blog.schmichael.com/2011/01/' title='January 2011'>January 2011</a></li>
	<li><a href='http://blog.schmichael.com/2010/12/' title='December 2010'>December 2010</a></li>
	<li><a href='http://blog.schmichael.com/2010/07/' title='July 2010'>July 2010</a></li>
	<li><a href='http://blog.schmichael.com/2010/01/' title='January 2010'>January 2010</a></li>
	<li><a href='http://blog.schmichael.com/2009/11/' title='November 2009'>November 2009</a></li>
	<li><a href='http://blog.schmichael.com/2009/10/' title='October 2009'>October 2009</a></li>
	<li><a href='http://blog.schmichael.com/2009/09/' title='September 2009'>September 2009</a></li>
	<li><a href='http://blog.schmichael.com/2009/08/' title='August 2009'>August 2009</a></li>
	<li><a href='http://blog.schmichael.com/2009/07/' title='July 2009'>July 2009</a></li>
	<li><a href='http://blog.schmichael.com/2009/06/' title='June 2009'>June 2009</a></li>
	<li><a href='http://blog.schmichael.com/2009/04/' title='April 2009'>April 2009</a></li>
	<li><a href='http://blog.schmichael.com/2009/03/' title='March 2009'>March 2009</a></li>
	<li><a href='http://blog.schmichael.com/2009/02/' title='February 2009'>February 2009</a></li>
	<li><a href='http://blog.schmichael.com/2009/01/' title='January 2009'>January 2009</a></li>
	<li><a href='http://blog.schmichael.com/2008/12/' title='December 2008'>December 2008</a></li>
	<li><a href='http://blog.schmichael.com/2008/11/' title='November 2008'>November 2008</a></li>
	<li><a href='http://blog.schmichael.com/2008/10/' title='October 2008'>October 2008</a></li>
	<li><a href='http://blog.schmichael.com/2008/09/' title='September 2008'>September 2008</a></li>
	<li><a href='http://blog.schmichael.com/2008/07/' title='July 2008'>July 2008</a></li>
	<li><a href='http://blog.schmichael.com/2008/05/' title='May 2008'>May 2008</a></li>
	<li><a href='http://blog.schmichael.com/2008/04/' title='April 2008'>April 2008</a></li>
	<li><a href='http://blog.schmichael.com/2008/03/' title='March 2008'>March 2008</a></li>
	<li><a href='http://blog.schmichael.com/2008/02/' title='February 2008'>February 2008</a></li>
	<li><a href='http://blog.schmichael.com/2008/01/' title='January 2008'>January 2008</a></li>
	<li><a href='http://blog.schmichael.com/2007/12/' title='December 2007'>December 2007</a></li>
	<li><a href='http://blog.schmichael.com/2007/11/' title='November 2007'>November 2007</a></li>
	<li><a href='http://blog.schmichael.com/2007/10/' title='October 2007'>October 2007</a></li>
	<li><a href='http://blog.schmichael.com/2007/09/' title='September 2007'>September 2007</a></li>
	<li><a href='http://blog.schmichael.com/2007/08/' title='August 2007'>August 2007</a></li>
	<li><a href='http://blog.schmichael.com/2007/07/' title='July 2007'>July 2007</a></li>
	<li><a href='http://blog.schmichael.com/2007/06/' title='June 2007'>June 2007</a></li>
	<li><a href='http://blog.schmichael.com/2007/05/' title='May 2007'>May 2007</a></li>
	<li><a href='http://blog.schmichael.com/2007/04/' title='April 2007'>April 2007</a></li>
	<li><a href='http://blog.schmichael.com/2007/03/' title='March 2007'>March 2007</a></li>
	<li><a href='http://blog.schmichael.com/2007/02/' title='February 2007'>February 2007</a></li>
	<li><a href='http://blog.schmichael.com/2007/01/' title='January 2007'>January 2007</a></li>
	<li><a href='http://blog.schmichael.com/2006/12/' title='December 2006'>December 2006</a></li>
	<li><a href='http://blog.schmichael.com/2006/11/' title='November 2006'>November 2006</a></li>
	<li><a href='http://blog.schmichael.com/2006/10/' title='October 2006'>October 2006</a></li>
	<li><a href='http://blog.schmichael.com/2006/09/' title='September 2006'>September 2006</a></li>
	<li><a href='http://blog.schmichael.com/2006/08/' title='August 2006'>August 2006</a></li>
	<li><a href='http://blog.schmichael.com/2006/07/' title='July 2006'>July 2006</a></li>
	<li><a href='http://blog.schmichael.com/2006/06/' title='June 2006'>June 2006</a></li>
	<li><a href='http://blog.schmichael.com/2006/05/' title='May 2006'>May 2006</a></li>
	<li><a href='http://blog.schmichael.com/2006/04/' title='April 2006'>April 2006</a></li>
	<li><a href='http://blog.schmichael.com/2006/03/' title='March 2006'>March 2006</a></li>
	<li><a href='http://blog.schmichael.com/2006/02/' title='February 2006'>February 2006</a></li>
	<li><a href='http://blog.schmichael.com/2006/01/' title='January 2006'>January 2006</a></li>
	<li><a href='http://blog.schmichael.com/2005/12/' title='December 2005'>December 2005</a></li>
	<li><a href='http://blog.schmichael.com/2005/11/' title='November 2005'>November 2005</a></li>
	<li><a href='http://blog.schmichael.com/2005/10/' title='October 2005'>October 2005</a></li>
	<li><a href='http://blog.schmichael.com/2005/09/' title='September 2005'>September 2005</a></li>
	<li><a href='http://blog.schmichael.com/2005/08/' title='August 2005'>August 2005</a></li>
				</ul>
			</li>

			<li id="meta" class="widget-container">
				<h3 class="widget-title">Meta</h3>
				<ul>
										<li><a href="http://blog.schmichael.com/wp-login.php">Log in</a></li>
									</ul>
			</li>

					</ul>
		</div><!-- #primary .widget-area -->

	</div><!-- #main -->

	<div id="footer" role="contentinfo">
		<div id="colophon">



			<div id="site-info">
				<a href="http://blog.schmichael.com/" title="schmichael&#039;s blog" rel="home">
					schmichael&#039;s blog				</a>
			</div><!-- #site-info -->

			<div id="site-generator">
								<a href="http://wordpress.org/" title="Semantic Personal Publishing Platform" rel="generator">Proudly powered by WordPress.</a>
			</div><!-- #site-generator -->

		</div><!-- #colophon -->
	</div><!-- #footer -->

</div><!-- #wrapper -->

<p><a onclick='document.cookie="wpmp_switcher=mobile;path=/;expires=Tue, 01-01-2030 00:00:00 GMT";' href='http://blog.schmichael.com/2011/11/05/failing-with-mongodb/?wpmp_switcher=mobile'>Switch to our mobile site</a></p><span id='wpmp_analytics'></span></body>
</html>
